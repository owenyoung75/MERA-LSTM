(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1028104,      20685]
NotebookOptionsPosition[   1009733,      20466]
NotebookOutlinePosition[   1010076,      20481]
CellTagsIndexPosition[   1010033,      20478]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "\"\<Restricted\>\"", " ", "because", " ", "a", " ", "translational", " ",
      "symmetry", " ", "constraint", " ", "is", " ", "added", " ", "for", " ",
      "the", " ", "first", " ", "layer", " ", 
     RowBox[{"(", 
      RowBox[{"see", " ", 
       RowBox[{"meraMap0", "[", "]"}]}], ")"}]}], ")"}], ",", " ", 
   RowBox[{
   "to", " ", "compensate", " ", "the", " ", "extra", " ", "freedom", " ", 
    "in", " ", "\"\<mg\>\"", " ", 
    RowBox[{"layer", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.783689160635019*^9, 3.7836892362413764`*^9}, {
  3.785008144013739*^9, 3.785008145852283*^9}, {3.8427081999088554`*^9, 
  3.8427082169407597`*^9}},
 FontSlant->"Italic",ExpressionUUID->"7558c5ee-3a6b-48ac-8eab-b22a0e052611"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"4d10464d-87a3-456e-bb88-5954e3e2fe83"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"outerProductLayer", "[", "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "Automatic"}], "}"}], "]"}], ",", 
      RowBox[{"DotLayer", "[", "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input1\>\"", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input2\>\"", "]"}], "\[Rule]", "2"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reshapeLayer", "[", 
   RowBox[{"dimensions_", ",", "cuts_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"ReshapeLayer", "[", 
   RowBox[{"MovingMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Times", "@@", 
        RowBox[{"dimensions", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ";;", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}], "]"}]}], 
       ")"}], "&"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", "cuts", ",", 
       RowBox[{"{", "0", "}"}]}], "]"}], ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7378237762550917`*^9, 3.737823805027924*^9}, {
   3.737824105547955*^9, 3.7378241282951484`*^9}, 3.73782442489771*^9, {
   3.737824461867283*^9, 3.7378244863074636`*^9}, {3.737824648014948*^9, 
   3.737824664596901*^9}, {3.7378274021257534`*^9, 3.73782740396653*^9}, {
   3.737827511676015*^9, 3.7378275151234913`*^9}, {3.7378275600698657`*^9, 
   3.73782757262683*^9}, {3.7378277114655437`*^9, 3.7378277851315055`*^9}, {
   3.7378278260241966`*^9, 3.7378278593138003`*^9}, {3.7378278972201643`*^9, 
   3.7378279059012475`*^9}, {3.737827975258243*^9, 3.73782798436352*^9}, {
   3.7378280367306476`*^9, 3.737828037795206*^9}, {3.7378288520735106`*^9, 
   3.737828857490999*^9}, {3.737828906882888*^9, 3.7378289104133387`*^9}, {
   3.737829043750695*^9, 3.7378291060479603`*^9}, {3.7378318194834166`*^9, 
   3.7378319020816803`*^9}, {3.737831936958604*^9, 3.7378319607912226`*^9}, {
   3.73783204098895*^9, 3.737832047132245*^9}, {3.7378321505073028`*^9, 
   3.7378322655844703`*^9}, {3.73783241845841*^9, 3.737832436955944*^9}, {
   3.7378324890878143`*^9, 3.737832540518488*^9}, {3.737832584844123*^9, 
   3.7378326070221777`*^9}, {3.737832835206599*^9, 3.737832885253615*^9}, {
   3.7378329197125053`*^9, 3.7378329610698633`*^9}, 3.7378335721554785`*^9, {
   3.7378420786835985`*^9, 3.7378421634041243`*^9}, {3.737842321101045*^9, 
   3.7378428426890945`*^9}, {3.73784287511481*^9, 3.7378429666143436`*^9}, {
   3.7378443341571093`*^9, 3.7378443666455317`*^9}, {3.7378443988994064`*^9, 
   3.7378444320455117`*^9}, {3.737844476473502*^9, 3.737844502383396*^9}, {
   3.737844590058917*^9, 3.737844652550476*^9}, {3.7378447404437537`*^9, 
   3.737844755935342*^9}, {3.737845666021922*^9, 3.7378457005792036`*^9}, {
   3.7378458350660887`*^9, 3.7378458796703744`*^9}, {3.7378459749788046`*^9, 
   3.737845987647558*^9}, {3.7378461257985306`*^9, 3.737846169516175*^9}, {
   3.737846249939271*^9, 3.737846252003024*^9}, {3.737846316864834*^9, 
   3.7378463307372856`*^9}, {3.737848692509449*^9, 3.7378486931085186`*^9}, 
   3.737889056901661*^9, {3.737893317865015*^9, 3.7378935119558306`*^9}, {
   3.7378937294434953`*^9, 3.7378938052345543`*^9}, {3.7378939044941072`*^9, 
   3.737893914142127*^9}, {3.737893964597568*^9, 3.73789396604844*^9}, {
   3.7378940017345233`*^9, 3.7378940154249024`*^9}, {3.7378940553711133`*^9, 
   3.737894065112232*^9}, {3.7378951435201774`*^9, 3.737895146916151*^9}, {
   3.737899401858944*^9, 3.737899409091006*^9}, {3.7379005024480476`*^9, 
   3.7379005190513287`*^9}, {3.7379031938939705`*^9, 
   3.7379032004159184`*^9}, {3.738190288054191*^9, 3.73819030223383*^9}, {
   3.7427719713314857`*^9, 3.7427719718145328`*^9}, {3.742772008176463*^9, 
   3.7427720091232443`*^9}, {3.7469772851389446`*^9, 3.746977285598605*^9}, {
   3.7804453379025316`*^9, 3.7804453406333876`*^9}, 3.780541098102784*^9, {
   3.8427082366109076`*^9, 
   3.8427082390733223`*^9}},ExpressionUUID->"50b2186c-25c0-4848-a6f6-\
f25cdd5e5f43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Z", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraJoin", "[", "dimensions_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w0Dims", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"dimensions", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_1\>\"", "\[Rule]", 
          RowBox[{"PartLayer", "[", 
           RowBox[{"-", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_2\>\"", "\[Rule]", 
          RowBox[{"PartLayer", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_1_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"dimensions", ",", 
            RowBox[{"{", 
             RowBox[{"-", "1"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_2_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"dimensions", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w0_transpose\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", 
           RowBox[{"1", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w0_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"w0Dims", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_1\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dimensions", "[", 
              RowBox[{"[", 
               RowBox[{";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"w0Dims", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"-", "1"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_2\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_weight\>\"", "\[Rule]", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "w0Dims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "w0Dims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"w0Dims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"w0Dims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
          RowBox[{"\"\<input_1\>\"", "\[Rule]", "\"\<input_1_reshape\>\""}]}],
          ",", 
         RowBox[{
          RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
          RowBox[{"\"\<input_2\>\"", "\[Rule]", "\"\<input_2_reshape\>\""}]}],
          ",", 
         RowBox[{"\"\<w_weight\>\"", "\[Rule]", 
          RowBox[{"\"\<w0_transpose\>\"", "\[Rule]", "\"\<w0_reshape\>\""}]}],
          ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<input_1_reshape\>\"", ",", "\"\<w0_reshape\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_1\>\"", "\[Rule]", "\"\<reshape\>\""}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<reshape\>\"", ",", "\"\<input_2_reshape\>\""}], "}"}],
           "\[Rule]", "\"\<dot_2\>\""}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraUWW", "[", "dimensions_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cut", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "+", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"rotatedDims", "=", 
        RowBox[{"RotateLeft", "[", 
         RowBox[{"dimensions", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
           "2"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"uDims", "=", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"dimensions", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], 
               "/", "2"}], "-", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "~", 
         "Join", "~", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"dimensions", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "]"}], "]"}], ",", "2"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"wDims", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"dimensions", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "-", "1"}], "]"}], "]"}], ",", "3"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"dimensions", ",", 
            RowBox[{"{", 
             RowBox[{"cut", "-", "1"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<input_transpose\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_reshape_out\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{"rotatedDims", ",", "1"}], "]"}], ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"uDims", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_u\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_1_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uDims", "[", 
              RowBox[{"[", 
               RowBox[{";;", "2"}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"rotatedDims", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"-", "1"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<transpose_1\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_1_out\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"uDims", "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}], "~", "Join", "~", 
               RowBox[{"rotatedDims", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", "1"}], "]"}], 
            ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_reshape_1\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"wDims", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_reshape_2\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"wDims", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_w_1\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<transpose_2\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_2_out\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uDims", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "2"}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"rotatedDims", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "3"}]}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"wDims", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_w_2\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_3_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"wDims", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "1"}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"rotatedDims", "[", 
              RowBox[{"[", 
               RowBox[{"3", ";;", 
                RowBox[{"-", "3"}]}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"wDims", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"cut", "-", "2"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<transpose_3\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w1_weight\>\"", "\[Rule]", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "wDims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "wDims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"wDims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"wDims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w2_weight\>\"", "\[Rule]", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "wDims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "wDims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"wDims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"wDims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_weight\>\"", "\[Rule]", " ", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "uDims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "uDims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"uDims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"uDims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{
          "\"\<input_transpose\>\"", "\[Rule]", 
           "\"\<input_reshape_out\>\""}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<u_reshape\>\"", ",", "\"\<input_reshape_out\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_u\>\"", "\[Rule]", 
           RowBox[{"\"\<reshape_1_in\>\"", "\[Rule]", 
            RowBox[{
            "\"\<transpose_1\>\"", "\[Rule]", "\"\<reshape_1_out\>\""}]}]}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<w_reshape_1\>\"", ",", "\"\<reshape_1_out\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_w_1\>\"", "\[Rule]", 
           RowBox[{
           "\"\<transpose_2\>\"", "\[Rule]", "\"\<reshape_2_out\>\""}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<w_reshape_2\>\"", ",", "\"\<reshape_2_out\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_w_2\>\"", "\[Rule]", 
           RowBox[{
           "\"\<reshape_3_in\>\"", "\[Rule]", "\"\<transpose_3\>\""}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_weight\>\"", "\[Rule]", "\"\<u_reshape\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<w1_weight\>\"", "\[Rule]", "\"\<w_reshape_1\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<w2_weight\>\"", "\[Rule]", "\"\<w_reshape_2\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraU", "[", 
    RowBox[{"dimensions_", ",", "meraNumber_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cut", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "+", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"rotatedDims", "=", 
        RowBox[{"RotateLeft", "[", 
         RowBox[{"dimensions", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
           "2"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"uDims", "=", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"meraNumber", ",", "2"}], "]"}], "~", "Join", "~", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"dimensions", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "]"}], "]"}], ",", "2"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"dimensions", ",", 
            RowBox[{"{", 
             RowBox[{"cut", "-", "1"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<input_transpose\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_reshape_out\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{"rotatedDims", ",", "1"}], "]"}], ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"uDims", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_u\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_3_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uDims", "[", 
              RowBox[{"[", 
               RowBox[{";;", "2"}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"rotatedDims", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"{", "cut", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<transpose_3\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_weight\>\"", "\[Rule]", " ", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "uDims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "uDims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"uDims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"uDims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{
          "\"\<input_transpose\>\"", "\[Rule]", 
           "\"\<input_reshape_out\>\""}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<u_reshape\>\"", ",", "\"\<input_reshape_out\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_u\>\"", "\[Rule]", 
           RowBox[{
           "\"\<reshape_3_in\>\"", "\[Rule]", "\"\<transpose_3\>\""}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<u_weight\>\"", "\[Rule]", "\"\<u_reshape\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraW", "[", "dimensions_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cut", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "+", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"rotatedDims", "=", 
        RowBox[{"RotateLeft", "[", 
         RowBox[{"dimensions", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
           "2"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"wDims", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"dimensions", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "+", "1"}], "]"}], "]"}], ",", "3"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"dimensions", ",", 
            RowBox[{"{", 
             RowBox[{"cut", "-", "2"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<input_transpose\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<input_reshape_out\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{"rotatedDims", ",", "2"}], "]"}], ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_reshape\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{"wDims", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dot_w_1\>\"", "\[Rule]", 
          RowBox[{"DotLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<reshape_3_in\>\"", "\[Rule]", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"wDims", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "1"}], "]"}], "]"}], "~", "Join", "~", 
             RowBox[{"rotatedDims", "[", 
              RowBox[{"[", 
               RowBox[{";;", 
                RowBox[{"-", "3"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"{", "cut", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<transpose_3\>\"", "\[Rule]", 
          RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_weight\>\"", "\[Rule]", " ", 
          RowBox[{"ConstantArrayLayer", "[", 
           RowBox[{
            RowBox[{"\"\<Output\>\"", "\[Rule]", "wDims"}], ",", 
            RowBox[{"\"\<Array\>\"", "->", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{"0", ",", "Z"}], "]"}], ",", "wDims"}], "]"}], "/", 
              SqrtBox[
               RowBox[{
                RowBox[{"wDims", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], 
                RowBox[{"(*", 
                 RowBox[{"*", 
                  RowBox[{"wDims", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "*)"}]}]]}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<input_reshape_in\>\"", "\[Rule]", 
          RowBox[{
          "\"\<input_transpose\>\"", "\[Rule]", 
           "\"\<input_reshape_out\>\""}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<w_reshape\>\"", ",", "\"\<input_reshape_out\>\""}], 
           "}"}], "\[Rule]", 
          RowBox[{"\"\<dot_w_1\>\"", "\[Rule]", 
           RowBox[{
           "\"\<reshape_3_in\>\"", "\[Rule]", "\"\<transpose_3\>\""}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<w_weight\>\"", "\[Rule]", "\"\<w_reshape\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraShrink", "[", 
    RowBox[{"dimensions_", ",", "meraNumber_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"netList", "=", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "netRules", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"dims", "=", "dimensions"}], ",", "\[IndentingNewLine]", 
       RowBox[{"order", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
             "2"}], "-", "1"}], ")"}], "/", "2"}], "-", "1"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"netList", "~", "AppendTo", "~", 
          RowBox[{"meraUWW", "[", "dims", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dims", "=", 
          RowBox[{
           RowBox[{"dims", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Length", "@", "dims"}], "+", "1"}], ")"}], "/", 
                "2"}], "-", "1"}]}], "]"}], "]"}], "~", "Join", "~", 
           RowBox[{"dims", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Length", "@", "dims"}], "+", "1"}], ")"}], "/", 
                "2"}], "+", "2"}], ";;"}], "]"}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", "order"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"netList", "~", "AppendTo", "~", 
       RowBox[{"meraU", "[", 
        RowBox[{"dims", ",", "meraNumber"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"netRules", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NetPort", "[", 
           RowBox[{"i", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
          RowBox[{"NetPort", "[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", "\"\<Input\>\""}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "order"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NetGraph", "[", 
       RowBox[{"netList", ",", "netRules"}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraMap", "[", 
    RowBox[{"dimensions_", ",", "meraNumber_", ",", "renormLags_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"order", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "-", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"newDims", "=", 
        RowBox[{
         RowBox[{"dimensions", "[", 
          RowBox[{"[", 
           RowBox[{";;", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
             "2"}]}], "]"}], "]"}], "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{"meraNumber", ",", "meraNumber"}], "}"}], "~", "Join", "~", 
         RowBox[{"dimensions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "+", "1"}], ";;"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "netList", ",", "netRules"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"netList", "=", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"NetGraph", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"PartLayer", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "i"}], "-", "1"}], ";;", 
                RowBox[{"2", "i"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"meraJoin", "[", "dimensions", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"meraShrink", "[", 
               RowBox[{
                RowBox[{"dimensions", "~", "Join", "~", 
                 RowBox[{"dimensions", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;"}], "]"}], "]"}]}], ",", "meraNumber"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"NetPort", "[", 
                RowBox[{"2", ",", "\"\<Input\>\""}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"NetPort", "[", 
                RowBox[{"2", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
               RowBox[{"NetPort", "[", 
                RowBox[{"3", ",", "\"\<Input\>\""}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"NetPort", "[", 
                RowBox[{"3", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
               "4"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"renormLags", "/", "2"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "~", "Join", "~", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CatenateLayer", "[", "]"}], ",", 
          RowBox[{"reshapeLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"renormLags", "/", "2"}], "}"}], "~", "Join", "~", 
             "newDims"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"renormLags", "/", "2"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"netRules", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"NetPort", "[", 
                RowBox[{"i", ",", "\"\<Input\>\""}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"renormLags", "/", "2"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"NetPort", "[", 
                RowBox[{"i", ",", "\"\<Output\>\""}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"renormLags", "/", "2"}]}], "}"}]}], "]"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{"renormLags", "/", "2"}], "+", "1"}], "->", 
              RowBox[{
               RowBox[{"renormLags", "/", "2"}], "+", "2"}]}]}]}], "}"}]}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"netList", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"netList", ",", 
            RowBox[{"-", "2"}]}], "]"}]}], ";", 
         RowBox[{"netRules", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
             RowBox[{"NetPort", "[", 
              RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"NetPort", "[", 
              RowBox[{"1", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"renormLags", "/", "2"}], "+", "1"}]}]}], "}"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"NetGraph", "[", 
       RowBox[{"netList", ",", "netRules"}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraMap0", "[", 
    RowBox[{"dimension_", ",", "meraNumber_", ",", "lags_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"netList", ",", "netRules"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"netList", "=", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"NetGraph", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"PartLayer", "[", 
               RowBox[{
                RowBox[{"4", "i"}], "-", "3"}], "]"}], ",", 
              RowBox[{"PartLayer", "[", 
               RowBox[{
                RowBox[{"4", "i"}], "-", "2"}], "]"}], ",", 
              RowBox[{"PartLayer", "[", 
               RowBox[{
                RowBox[{"4", "i"}], "-", "1"}], "]"}], ",", 
              RowBox[{"PartLayer", "[", 
               RowBox[{"4", "i"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"NetChain", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"TransposeLayer", "[", 
                  RowBox[{"3", "\[Rule]", "2"}], "]"}], ",", 
                 RowBox[{"TransposeLayer", "[", 
                  RowBox[{"2", "\[Rule]", "1"}], "]"}], ",", 
                 RowBox[{"ReshapeLayer", "[", 
                  RowBox[{"{", 
                   RowBox[{"dimension", ",", 
                    RowBox[{
                    "meraNumber", "*", "meraNumber", "*", "dimension"}]}], 
                   "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"DotLayer", "[", "]"}], ",", 
              RowBox[{"DotLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"ReshapeLayer", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"meraNumber", "*", "meraNumber"}], ",", 
                 "dimension"}], "}"}], "]"}], ",", 
              RowBox[{"ReshapeLayer", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"meraNumber", "*", "meraNumber"}], ",", 
                 "dimension"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"DotLayer", "[", "]"}], ",", 
              RowBox[{"DotLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"ReshapeLayer", "[", 
               RowBox[{"{", 
                RowBox[{"meraNumber", ",", "meraNumber"}], "}"}], "]"}], ",", 
              RowBox[{"ReshapeLayer", "[", 
               RowBox[{"{", 
                RowBox[{"meraNumber", ",", "meraNumber"}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"NetChain", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"TransposeLayer", "[", 
                  RowBox[{"1", "\[Rule]", "2"}], "]"}], ",", 
                 RowBox[{"ReshapeLayer", "[", 
                  RowBox[{"{", 
                   RowBox[{"meraNumber", ",", 
                    RowBox[{"meraNumber", "*", "meraNumber"}]}], "}"}], 
                  "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"DotLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"ReshapeLayer", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"meraNumber", "*", "meraNumber"}], ",", 
                 "meraNumber"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"DotLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ConstantArrayLayer", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "meraNumber", ",", "meraNumber", ",", "dimension", ",", 
                   "dimension"}], "}"}], ",", 
                 RowBox[{"\"\<Array\>\"", "->", 
                  RowBox[{
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "Z"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "meraNumber", ",", "meraNumber", ",", "dimension", ",", 
                    "dimension"}], "}"}]}], "]"}], "/", 
                   SqrtBox["dimension"]}]}]}], "]"}], "~", 
               "NetInsertSharedArrays", "~", "\"\<u\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ConstantArrayLayer", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"meraNumber", ",", "meraNumber", ",", "meraNumber"}],
                  "}"}], ",", 
                RowBox[{"\"\<Array\>\"", "->", 
                 RowBox[{
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "Z"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "meraNumber", ",", "meraNumber", ",", "meraNumber"}], 
                    "}"}]}], "]"}], "/", 
                  SqrtBox["meraNumber"]}]}]}], "]"}]}], "\[IndentingNewLine]",
              "}"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"19", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"4", ",", "5"}], "}"}], "\[Rule]", 
               RowBox[{"6", "\[Rule]", "8"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
               RowBox[{"7", "\[Rule]", "9"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"8", ",", "3"}], "}"}], "\[Rule]", 
               RowBox[{"10", "\[Rule]", "12"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"9", ",", "1"}], "}"}], "\[Rule]", 
               RowBox[{"11", "\[Rule]", "13"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"20", "\[Rule]", "14"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"12", ",", "14"}], "}"}], "\[Rule]", 
               RowBox[{"15", "\[Rule]", "16"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"16", ",", "13"}], "}"}], "\[Rule]", 
               RowBox[{"17", "\[Rule]", "18"}]}]}], "\[IndentingNewLine]", 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"lags", "/", "4"}]}], "}"}]}], "]"}], "~", "Join", "~", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CatenateLayer", "[", "]"}], ",", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lags", "/", "4"}], ",", 
             RowBox[{"meraNumber", "*", "meraNumber", "*", "meraNumber"}]}], 
            "}"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lags", "/", "4"}], ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"netRules", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"NetPort", "[", 
               RowBox[{"i", ",", "\"\<Input\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"lags", "/", "4"}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"NetPort", "[", 
               RowBox[{"i", ",", "\"\<Output\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"lags", "/", "4"}]}], "}"}]}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"lags", "/", "4"}], "+", "1"}], "->", 
             RowBox[{
              RowBox[{"lags", "/", "4"}], "+", "2"}]}]}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"netList", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"netList", ",", 
            RowBox[{"-", "2"}]}], "]"}]}], ";", 
         RowBox[{"netRules", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
             RowBox[{"NetPort", "[", 
              RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"NetPort", "[", 
              RowBox[{"1", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"lags", "/", "4"}], "+", "1"}]}]}], "}"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"NetGraph", "[", 
       RowBox[{"netList", ",", "netRules"}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meraFinish", "[", 
    RowBox[{"dimensions_", ",", "hiddenVecDim_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"netList", "=", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "netRules", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"dims", "=", 
        RowBox[{
         RowBox[{"{", "1", "}"}], "~", "Join", "~", 
         RowBox[{"dimensions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/",
               "2"}], "+", "1"}], ";;"}], "]"}], "]"}], "~", "Join", "~", 
         RowBox[{"dimensions", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
             "2"}]}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"cut", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "+", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"order", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "@", "dimensions"}], "+", "1"}], ")"}], "/", 
          "2"}], "-", "2"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"netList", "~", "AppendTo", "~", 
       RowBox[{"NetGraph", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"reshapeLayer", "[", 
            RowBox[{"dimensions", ",", 
             RowBox[{"{", "cut", "}"}]}], "]"}], ",", 
           RowBox[{"TransposeLayer", "[", "]"}], ",", 
           RowBox[{"meraW", "[", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{"dimensions", ",", 
              RowBox[{"cut", "-", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"NetPort", "[", 
             RowBox[{"3", ",", "\"\<Input\>\""}], "]"}]}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"netList", "~", "AppendTo", "~", 
          RowBox[{"meraUWW", "[", "dims", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dims", "=", 
          RowBox[{
           RowBox[{"dims", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Length", "@", "dims"}], "+", "1"}], ")"}], "/", 
                "2"}], "-", "1"}]}], "]"}], "]"}], "~", "Join", "~", 
           RowBox[{"dims", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Length", "@", "dims"}], "+", "1"}], ")"}], "/", 
                "2"}], "+", "2"}], ";;"}], "]"}], "]"}]}]}], ";"}], ",", 
        "\[IndentingNewLine]", "order"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"netList", "~", "AppendTo", "~", 
       RowBox[{"NetChain", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LinearLayer", "[", "hiddenVecDim", 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "*)"}], "]"}], 
          ",", 
          RowBox[{"ElementwiseLayer", "[", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"LogisticSigmoid", "[", 
              RowBox[{"#", "+", "2.0"}], "]"}], "&"}], "*)"}], "Tanh", 
           "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"netList", "=", 
       RowBox[{"netList", "~", "Join", "~", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NetChain", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NormalizationLayer", "[", 
              RowBox[{
               RowBox[{"2", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"0.5", "^", 
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}]}], "#"}], "&"}], "]"}]}], 
            "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"netRules", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NetPort", "[", 
           RowBox[{"i", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"order", "+", "2", "+", "i"}], ")"}], "\[Rule]", 
           RowBox[{"NetPort", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"NetGraph", "[", 
       RowBox[{"netList", ",", "netRules"}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mera", "[", 
   RowBox[{
   "inputSteps_", ",", "inputVecDim_", ",", "meraNumbers_", ",", 
    "hiddenVecDim_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"netList", "=", 
       RowBox[{"{", 
        RowBox[{"meraMap0", "[", 
         RowBox[{"inputVecDim", ",", 
          RowBox[{"meraNumbers", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "inputSteps"}], "]"}], 
        "}"}]}], ",", "netRules", ",", 
      RowBox[{"order", "=", 
       RowBox[{
        RowBox[{"Length", "@", "meraNumbers"}], "-", "1"}]}], ",", 
      RowBox[{"dims", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"meraNumbers", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}]}], ",", "g", ",", 
      RowBox[{"a", "=", 
       RowBox[{"meraNumbers", "~", "Prepend", "~", "inputVecDim"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"netList", "~", "AppendTo", "~", 
         RowBox[{"meraMap", "[", 
          RowBox[{"dims", ",", 
           RowBox[{"meraNumbers", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
           RowBox[{"inputSteps", "/", 
            SuperscriptBox["2", 
             RowBox[{"i", "+", "1"}]]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dims", "=", 
         RowBox[{
          RowBox[{"dims", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"meraNumbers", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"meraNumbers", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], "~", "Join", 
          "~", 
          RowBox[{"dims", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "i"}], ";;"}], "]"}], "]"}]}]}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "order"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"netList", "~", "AppendTo", "~", 
      RowBox[{"meraFinish", "[", 
       RowBox[{"dims", ",", "hiddenVecDim"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"netList", "=", 
      RowBox[{"netList", "~", "Join", "~", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"NormalizationLayer", "[", 
          RowBox[{
           RowBox[{"2", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
         RowBox[{"order", "+", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"netRules", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"i", ",", "\"\<Output\>\""}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"order", "+", "2", "+", "i"}], ")"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NetPort", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "\"\<Input\>\""}], "]"}], ",", 
            RowBox[{"NetPort", "[", 
             RowBox[{"\"\<Check\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], "}"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{"netList", ",", "netRules"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"g", ",", 
          RowBox[{"CatenateLayer", "[", "]"}], ",", 
          RowBox[{"PartLayer", "[", 
           RowBox[{
            RowBox[{"-", "hiddenVecDim"}], ";;", 
            RowBox[{"-", "1"}]}], "]"}]}], "}"}], "~", "Join", "~", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"FlattenLayer", "[", "]"}], ",", 
          RowBox[{"order", "+", "2"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\"\<Check\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}], "\[Rule]", 
           RowBox[{"i", "+", "3"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}], "~", "Join", "~", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", 
            RowBox[{"1", ",", "\"\<Output\>\""}], "]"}], "->", 
           RowBox[{"(", 
            RowBox[{"order", "+", "5"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"order", "+", "2"}], "]"}], "+", "3"}], ")"}], 
           "\[Rule]", 
           RowBox[{"2", "\[Rule]", "3"}]}]}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7426607260354805`*^9, 3.7426607373795357`*^9}, {
   3.7426609806393957`*^9, 3.742661008465083*^9}, {3.742661188492792*^9, 
   3.7426612111090074`*^9}, {3.742661457165886*^9, 3.74266146613931*^9}, {
   3.742663812649311*^9, 3.742663817747526*^9}, {3.742664136081222*^9, 
   3.7426641899742827`*^9}, {3.7426642552795353`*^9, 3.74266425947742*^9}, {
   3.742664354271062*^9, 3.7426643841470284`*^9}, {3.7426644225158696`*^9, 
   3.7426644652896013`*^9}, {3.7426645382007666`*^9, 
   3.7426645396772614`*^9}, {3.742664574137628*^9, 3.7426646113973045`*^9}, {
   3.742664964885005*^9, 3.742665075775697*^9}, 3.7426651691392045`*^9, 
   3.742665213758461*^9, {3.742665338788245*^9, 3.7426653620860233`*^9}, {
   3.7426656822651243`*^9, 3.742665718466222*^9}, {3.742665749435337*^9, 
   3.7426657652728825`*^9}, {3.742665797943823*^9, 3.7426658091211796`*^9}, {
   3.742665968064098*^9, 3.742666160712903*^9}, {3.74266627249321*^9, 
   3.7426662871646366`*^9}, 3.7426663842380214`*^9, {3.7426664163662558`*^9, 
   3.742666433513029*^9}, {3.7426664854874077`*^9, 3.742666495018867*^9}, {
   3.7426665418548107`*^9, 3.742666636393112*^9}, {3.742666686276718*^9, 
   3.7426668009821196`*^9}, {3.7426668512223663`*^9, 3.742666854987546*^9}, {
   3.742666934193421*^9, 3.7426669909608846`*^9}, {3.7426670410766926`*^9, 
   3.742667049341905*^9}, {3.7426670806867294`*^9, 3.7426671005748053`*^9}, {
   3.7426671580106716`*^9, 3.7426671626906476`*^9}, {3.742667200049053*^9, 
   3.742667210002165*^9}, {3.742667266478448*^9, 3.742667580773257*^9}, {
   3.7426676153124003`*^9, 3.742667637489503*^9}, {3.7426676851464252`*^9, 
   3.7426677974433527`*^9}, {3.742667919550138*^9, 3.742667951328868*^9}, {
   3.742668122850859*^9, 3.742668144571231*^9}, {3.742668213137236*^9, 
   3.742668282057518*^9}, {3.742668365557826*^9, 3.7426683720886583`*^9}, {
   3.7426684101706605`*^9, 3.7426684230361547`*^9}, {3.7426684560735006`*^9, 
   3.742668531953843*^9}, 3.742668706033947*^9, {3.742668736289572*^9, 
   3.742668773310546*^9}, 3.742669232641835*^9, {3.74266944948243*^9, 
   3.7426695295808153`*^9}, {3.7426696026872864`*^9, 
   3.7426696418775563`*^9}, {3.7426696966756124`*^9, 
   3.7426697142549596`*^9}, {3.742669829476798*^9, 3.7426698398567286`*^9}, {
   3.7426701971020303`*^9, 3.7426702271642156`*^9}, {3.7426702667636642`*^9, 
   3.742670292202846*^9}, {3.7426703510926237`*^9, 3.742670422291071*^9}, {
   3.7426704619567814`*^9, 3.742670589774762*^9}, {3.7426706268668833`*^9, 
   3.742670645134365*^9}, {3.742670690315137*^9, 3.7426707707002835`*^9}, {
   3.7426708267475505`*^9, 3.742670832541358*^9}, {3.7426708729309826`*^9, 
   3.742670952148403*^9}, {3.742671000135536*^9, 3.7426711032432632`*^9}, {
   3.7426711706536674`*^9, 3.742671274602735*^9}, {3.742671353456874*^9, 
   3.7426713734126854`*^9}, {3.7426714140322027`*^9, 3.742671418192253*^9}, {
   3.7426714622461386`*^9, 3.742671490307949*^9}, {3.7426842310760784`*^9, 
   3.7426842999273605`*^9}, {3.742684354877593*^9, 3.742684440738344*^9}, {
   3.7426845247223063`*^9, 3.742684532588538*^9}, {3.7426846381431847`*^9, 
   3.742684641692522*^9}, {3.7426847865708017`*^9, 3.742684820657621*^9}, {
   3.7426848922079587`*^9, 3.742684992787011*^9}, {3.7426852614543524`*^9, 
   3.7426853143577776`*^9}, 3.7426861735206847`*^9, {3.742736533715152*^9, 
   3.742736547073267*^9}, 3.742749003476493*^9, {3.74274940304558*^9, 
   3.7427494055593843`*^9}, {3.742749553820958*^9, 3.742749618349781*^9}, {
   3.742749691945903*^9, 3.742749749834486*^9}, {3.742749795235284*^9, 
   3.742749839076951*^9}, {3.742749882574461*^9, 3.7427498915960803`*^9}, {
   3.742750220088748*^9, 3.742750225547407*^9}, {3.74275027894308*^9, 
   3.7427503388519125`*^9}, {3.7427503754703026`*^9, 
   3.7427504326889763`*^9}, {3.7427505565000906`*^9, 
   3.7427506735635376`*^9}, {3.742750704133346*^9, 3.742750721369023*^9}, {
   3.7427507908540993`*^9, 3.742750792699549*^9}, {3.7427508273771515`*^9, 
   3.7427508411881294`*^9}, {3.742750874758006*^9, 3.7427509353988023`*^9}, {
   3.7427509821024804`*^9, 3.7427510276736393`*^9}, {3.742751083538226*^9, 
   3.7427510912805004`*^9}, {3.7427511393263445`*^9, 
   3.7427513013876963`*^9}, {3.7427513430821314`*^9, 3.742751346968093*^9}, {
   3.7427514449816127`*^9, 3.7427514594499793`*^9}, {3.742751514241843*^9, 
   3.7427515623222275`*^9}, {3.7427517132870426`*^9, 
   3.7427517150048323`*^9}, {3.7427518182494698`*^9, 3.742751918916767*^9}, {
   3.7427522160647693`*^9, 3.7427522343144364`*^9}, {3.7427530809182825`*^9, 
   3.742753126813029*^9}, {3.742753323700376*^9, 3.742753336036408*^9}, {
   3.742753397256592*^9, 3.7427534153074903`*^9}, {3.7427534832915373`*^9, 
   3.7427534924725423`*^9}, 3.7427537916018867`*^9, {3.742753886979974*^9, 
   3.7427539371144547`*^9}, {3.7427539707960825`*^9, 
   3.7427539848126154`*^9}, {3.742754016506214*^9, 3.742754060803386*^9}, {
   3.742754093663681*^9, 3.7427542024828987`*^9}, 3.7427542509883084`*^9, {
   3.742754289209937*^9, 3.742754340982801*^9}, {3.742754375763826*^9, 
   3.742754378103076*^9}, {3.7427544409390273`*^9, 3.7427545216212287`*^9}, {
   3.7427546215845337`*^9, 3.7427546252300777`*^9}, {3.7427546560171347`*^9, 
   3.742754693007759*^9}, {3.742754745300084*^9, 3.7427550126379232`*^9}, {
   3.7427551483804913`*^9, 3.742755348019266*^9}, {3.7427555098339243`*^9, 
   3.7427555517660885`*^9}, {3.7427555969703116`*^9, 3.7427556605673923`*^9}, 
   3.742755752184862*^9, {3.7427558280649242`*^9, 3.7427559663683352`*^9}, {
   3.7427560053463907`*^9, 3.742756067160537*^9}, {3.742756433029994*^9, 
   3.7427564808801117`*^9}, {3.742757481933554*^9, 3.742757501972864*^9}, {
   3.7427724049134197`*^9, 3.742772409916806*^9}, {3.742772470947581*^9, 
   3.7427724855572295`*^9}, {3.7427726321392155`*^9, 3.742772632499747*^9}, {
   3.742772743559704*^9, 3.7427728033213406`*^9}, {3.742772889962449*^9, 
   3.742772948788572*^9}, {3.7427730759277844`*^9, 3.7427730764858603`*^9}, {
   3.742773183613674*^9, 3.742773196694915*^9}, {3.742773245955985*^9, 
   3.7427732475274067`*^9}, {3.742773341710416*^9, 3.742773346728408*^9}, {
   3.742773430686829*^9, 3.7427734310535183`*^9}, {3.7427734682707195`*^9, 
   3.7427734743696165`*^9}, {3.74277351470212*^9, 3.7427735198660192`*^9}, {
   3.7427736321533136`*^9, 3.742773632332143*^9}, 3.742773671092579*^9, {
   3.742773819872229*^9, 3.7427738470380363`*^9}, {3.742774494744067*^9, 
   3.7427744962900915`*^9}, {3.742774534808917*^9, 3.7427746549653516`*^9}, {
   3.742774684991401*^9, 3.7427746852669477`*^9}, {3.7427747495687428`*^9, 
   3.7427747626680593`*^9}, {3.7427748658518925`*^9, 
   3.7427749274907036`*^9}, {3.7427749706510983`*^9, 
   3.7427749738504086`*^9}, {3.7427750435922184`*^9, 
   3.7427750956188717`*^9}, {3.7427751658195224`*^9, 
   3.7427751994624987`*^9}, {3.7427752632561255`*^9, 3.742775283495472*^9}, {
   3.742775359837736*^9, 3.7427753602166414`*^9}, {3.742775509469676*^9, 
   3.742775511763162*^9}, {3.742775597620006*^9, 3.7427756186817527`*^9}, {
   3.742775654007042*^9, 3.7427756600212936`*^9}, {3.74277574386264*^9, 
   3.7427757451439085`*^9}, {3.742775793864496*^9, 3.7427757967982*^9}, {
   3.7427758351027355`*^9, 3.7427759734329047`*^9}, {3.742776019168398*^9, 
   3.7427760715000615`*^9}, {3.742776145070017*^9, 3.742776306232164*^9}, {
   3.7427763441759515`*^9, 3.742776377695896*^9}, {3.7427764225578623`*^9, 
   3.742776433792819*^9}, {3.742776686858039*^9, 3.7427766871165276`*^9}, {
   3.742776827267439*^9, 3.742776833843519*^9}, {3.742777007762807*^9, 
   3.7427770089230213`*^9}, {3.7427770672026854`*^9, 
   3.7427770673455067`*^9}, {3.742777111923811*^9, 3.7427771122995005`*^9}, {
   3.7427771434448223`*^9, 3.7427771733800983`*^9}, {3.742826780531336*^9, 
   3.742826831535548*^9}, {3.742827054748085*^9, 3.742827090026682*^9}, {
   3.742827165465294*^9, 3.7428271935483828`*^9}, {3.7428272279227223`*^9, 
   3.7428272501563444`*^9}, 3.742827282265868*^9, {3.7428285911259284`*^9, 
   3.74282861681439*^9}, {3.742828867047221*^9, 3.7428288674268036`*^9}, {
   3.7428291166036024`*^9, 3.742829121916082*^9}, {3.742829300277302*^9, 
   3.7428293518700075`*^9}, {3.74282945606814*^9, 3.742829478445323*^9}, {
   3.742829575301272*^9, 3.7428295760260677`*^9}, {3.742829846508172*^9, 
   3.742829939761278*^9}, {3.7428302514596753`*^9, 3.742830271177041*^9}, 
   3.742830310167347*^9, {3.742830534111205*^9, 3.742830581046298*^9}, 
   3.7428307120213504`*^9, {3.7428307535497127`*^9, 3.742830825385497*^9}, 
   3.742831290174803*^9, {3.7428313578912225`*^9, 3.7428313601091623`*^9}, {
   3.743006437959855*^9, 3.743006439720169*^9}, {3.743006480635935*^9, 
   3.7430066263935843`*^9}, {3.74300665681446*^9, 3.7430066613183637`*^9}, {
   3.743006716582964*^9, 3.7430067705249467`*^9}, {3.7430068030126257`*^9, 
   3.7430068871022444`*^9}, {3.743006919245712*^9, 3.743007005549672*^9}, {
   3.7430072861922965`*^9, 3.743007384661401*^9}, {3.7433564004493895`*^9, 
   3.7433564038125896`*^9}, 3.743356991188798*^9, {3.7433572631966743`*^9, 
   3.743357285546624*^9}, 3.743359801478241*^9, 3.744384636819648*^9, {
   3.744385185743737*^9, 3.744385202090327*^9}, 3.7469647674526978`*^9, 
   3.7469648868289967`*^9, {3.7469657624481945`*^9, 3.746965799045952*^9}, {
   3.7469672655275435`*^9, 3.7469673217718515`*^9}, {3.7469673588264055`*^9, 
   3.7469674886992927`*^9}, {3.746967533615746*^9, 3.746967568672284*^9}, {
   3.746967665796606*^9, 3.746967668170582*^9}, {3.746969129213538*^9, 
   3.7469691338096495`*^9}, {3.7469691747193737`*^9, 
   3.7469691791714706`*^9}, {3.7469694288009243`*^9, 
   3.7469694322575307`*^9}, {3.746969732459963*^9, 3.746969860539088*^9}, {
   3.7469699691872287`*^9, 3.7469701730308456`*^9}, {3.7469705063557096`*^9, 
   3.746970510253868*^9}, {3.746971528086488*^9, 3.746971531513155*^9}, {
   3.7469715744532366`*^9, 3.7469715795715003`*^9}, {3.7469716497549024`*^9, 
   3.746971684735982*^9}, 3.74697789073104*^9, {3.7469785897254353`*^9, 
   3.746978590006104*^9}, {3.7469788027895527`*^9, 3.7469788032557516`*^9}, {
   3.7469984763620443`*^9, 3.7469984768623543`*^9}, {3.7469985749367046`*^9, 
   3.746998575921465*^9}, {3.746998923798079*^9, 3.7469989244321194`*^9}, {
   3.7469995113719163`*^9, 3.7469995120437007`*^9}, {3.7470000725758443`*^9, 
   3.747000074814187*^9}, {3.7470008058377686`*^9, 3.747000807917589*^9}, 
   3.7470020417267704`*^9, {3.747002923464467*^9, 3.7470029237434907`*^9}, {
   3.74700345135695*^9, 3.7470034515544167`*^9}, {3.7470083664834003`*^9, 
   3.7470083672254176`*^9}, 3.7470105483879213`*^9, {3.7470117465466805`*^9, 
   3.7470117472492714`*^9}, 3.747054352444721*^9, {3.747054533831117*^9, 
   3.747054536998043*^9}, 3.747055227969708*^9, 3.7471015669315643`*^9, {
   3.747235982710199*^9, 3.7472361051310863`*^9}, {3.747236160334728*^9, 
   3.7472361808952227`*^9}, {3.7472362585339603`*^9, 
   3.7472363656580863`*^9}, {3.7472364086441326`*^9, 3.747236436569597*^9}, {
   3.747236538589499*^9, 3.7472366147328467`*^9}, {3.7472367328797035`*^9, 
   3.7472368091009903`*^9}, {3.7472369319903326`*^9, 3.747236938115993*^9}, {
   3.7472369844683557`*^9, 3.7472369845901184`*^9}, {3.7472370829925103`*^9, 
   3.7472371219869766`*^9}, {3.74723719108482*^9, 3.747237199523912*^9}, {
   3.747237550428555*^9, 3.747237668964791*^9}, 3.7472426665078135`*^9, {
   3.747243014589929*^9, 3.7472430186855817`*^9}, {3.7472431083508835`*^9, 
   3.7472431089343224`*^9}, {3.7472431650378304`*^9, 3.747243165581338*^9}, {
   3.7472447342891345`*^9, 3.7472447441621366`*^9}, {3.7472447812640667`*^9, 
   3.747244904575389*^9}, {3.7472450191498213`*^9, 3.7472450990786285`*^9}, 
   3.747245178401433*^9, {3.747245301679756*^9, 3.747245462253004*^9}, 
   3.7472455063026175`*^9, {3.7472459289585824`*^9, 3.747245933356537*^9}, 
   3.7472460681570253`*^9, {3.7472461084131165`*^9, 3.7472461254299793`*^9}, {
   3.7472461665395093`*^9, 3.747246234200843*^9}, {3.7472479599135714`*^9, 
   3.7472479910646524`*^9}, {3.747248096689027*^9, 3.7472480994936457`*^9}, 
   3.747248437715313*^9, 3.747248703104683*^9, 3.7472497458417597`*^9, {
   3.74724978176791*^9, 3.747249799146534*^9}, {3.747249840897895*^9, 
   3.7472498636188*^9}, {3.747252088316474*^9, 3.7472520885386696`*^9}, 
   3.747259201167654*^9, 3.7472593258911853`*^9, {3.7472595059548903`*^9, 
   3.7472595200031753`*^9}, {3.7472633515523777`*^9, 3.74726336213341*^9}, {
   3.7472634235039835`*^9, 3.747263427926694*^9}, {3.7472634600412083`*^9, 
   3.747263467637021*^9}, {3.7472635775215616`*^9, 3.7472635828349457`*^9}, {
   3.747263618450709*^9, 3.7472636213572426`*^9}, {3.7494853967407875`*^9, 
   3.7494854278403*^9}, {3.7494855418022995`*^9, 3.749485565653164*^9}, {
   3.7494856120329323`*^9, 3.7494856153838067`*^9}, {3.780409743469982*^9, 
   3.7804097557675934`*^9}, 3.7805084410697613`*^9, {3.7805089537045026`*^9, 
   3.7805089655800853`*^9}, {3.7805090114431157`*^9, 3.7805090116239414`*^9}, 
   3.780509096762617*^9, {3.7805091272436857`*^9, 3.7805091346880074`*^9}, {
   3.780509338291667*^9, 3.7805093608474045`*^9}, {3.7805104768223763`*^9, 
   3.7805104788501167`*^9}, {3.780510702734344*^9, 3.780510703159365*^9}, {
   3.780510758968296*^9, 3.780510764240445*^9}, {3.7805115875286465`*^9, 
   3.7805115882288527`*^9}, 3.780531253487053*^9, 3.780532243634307*^9, {
   3.7805343860314302`*^9, 3.7805343864550357`*^9}, 3.7805360041646986`*^9, {
   3.780536055346163*^9, 3.7805360599239855`*^9}, 3.780536689040395*^9, {
   3.780539430183156*^9, 3.7805394340825167`*^9}, 3.7805402559187894`*^9, 
   3.7805406064727197`*^9, {3.7805410635382147`*^9, 3.7805410678247194`*^9}, {
   3.7805411478887453`*^9, 3.780541192592248*^9}, {3.780541308753749*^9, 
   3.780541320785554*^9}, 3.78054150749448*^9, 3.7805416156808558`*^9, {
   3.7805416978502192`*^9, 3.780541699270422*^9}, {3.780542018995039*^9, 
   3.7805420191047783`*^9}, {3.780542059948606*^9, 3.7805420771456027`*^9}, 
   3.7805738993108873`*^9, {3.780575954110404*^9, 3.780575964028176*^9}, {
   3.7805760340357203`*^9, 3.780576080584485*^9}, {3.7805761489698105`*^9, 
   3.7805761502328496`*^9}, {3.7805771175223885`*^9, 3.780577123375926*^9}, 
   3.780578907624956*^9, 3.7805797917550964`*^9, {3.780582241381079*^9, 
   3.780582250006822*^9}, {3.7805823135637856`*^9, 3.780582314978836*^9}, 
   3.7805825256987333`*^9, {3.780583162835037*^9, 3.7805831632152543`*^9}, {
   3.780583223628448*^9, 3.780583223955435*^9}, {3.7805833531761217`*^9, 
   3.7805833544595895`*^9}, {3.780591048266322*^9, 3.7805910520102043`*^9}, 
   3.780591115562117*^9, {3.7805912327688575`*^9, 3.7805912598340797`*^9}, {
   3.780594444021986*^9, 3.7805944591019993`*^9}, {3.7805945322298684`*^9, 
   3.780594622559018*^9}, {3.780594667746715*^9, 3.780594672479579*^9}, {
   3.7805947371722784`*^9, 3.7805948049830027`*^9}, {3.7805991067251816`*^9, 
   3.7805991081334157`*^9}, {3.780600173327731*^9, 3.7806001738444047`*^9}, {
   3.780601573270362*^9, 3.780601574886074*^9}, {3.780602357792585*^9, 
   3.780602358464757*^9}, {3.7806029345698137`*^9, 3.7806029353625317`*^9}, {
   3.780605212416723*^9, 3.7806052136846237`*^9}, {3.7806173925868053`*^9, 
   3.7806175010498495`*^9}, {3.780622728443049*^9, 3.78062273477225*^9}, {
   3.780622781006575*^9, 3.780622781082317*^9}, {3.780623761564234*^9, 
   3.7806237637912035`*^9}, {3.7818151609705596`*^9, 
   3.7818151808515835`*^9}, {3.7818152195053806`*^9, 3.781815328040445*^9}, 
   3.782951402150543*^9, {3.7829523590041695`*^9, 3.782952383019094*^9}, 
   3.782953497442114*^9, {3.7829537694550824`*^9, 3.7829537951017537`*^9}, {
   3.782953913168106*^9, 3.782953927563513*^9}, {3.782953974823388*^9, 
   3.7829540099720097`*^9}, {3.7829553370659533`*^9, 3.782955347724947*^9}, 
   3.782955403759511*^9, 3.782996562560835*^9, {3.7829966298152237`*^9, 
   3.7829966418727603`*^9}, 3.782996715874633*^9, {3.782996747496609*^9, 
   3.78299675599796*^9}, {3.782997879671247*^9, 3.782997888790282*^9}, {
   3.7829979330510283`*^9, 3.7829979708519554`*^9}, 3.7829980444661493`*^9, {
   3.7829988302982473`*^9, 3.782998832859047*^9}, 3.782999650471717*^9, {
   3.783000699239292*^9, 3.7830007275911736`*^9}, {3.7835986967127438`*^9, 
   3.783598752321403*^9}, {3.7835987938138933`*^9, 3.7835987960502577`*^9}, {
   3.7836892589450006`*^9, 3.7836892766723275`*^9}, 3.783692243349408*^9, 
   3.78379542919168*^9, {3.842708292489812*^9, 
   3.8427083365973454`*^9}},ExpressionUUID->"33561697-5d26-417d-ad0f-\
1c57d28a6588"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateLayer", "[", "n_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Wx\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Ws+b\>\"", "->", 
       RowBox[{"LinearLayer", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Wx+Ws+b\>\"", "->", 
       RowBox[{"TotalLayer", "[", 
        RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "n", "}"}], ",", 
           RowBox[{"{", "n", "}"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<e\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", "LogisticSigmoid", "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<Wx\>\""}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}], "\[Rule]", 
       "\"\<Ws+b\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Wx\>\"", ",", "\"\<Ws+b\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<Wx+Ws+b\>\"", "\[Rule]", "\"\<e\>\""}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gateHLayer", "[", "n_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Wx\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Ws+b\>\"", "->", 
       RowBox[{"LinearLayer", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Wx+Ws+b\>\"", "->", 
       RowBox[{"TotalLayer", "[", 
        RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "n", "}"}], ",", 
           RowBox[{"{", "n", "}"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<e\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<Wx\>\""}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}], "\[Rule]", 
       "\"\<Ws+b\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Wx\>\"", ",", "\"\<Ws+b\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<Wx+Ws+b\>\"", "\[Rule]", "\"\<e\>\""}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gateBLayer", "[", "n_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Wx\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Ws\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Wx+Ws\>\"", "->", 
       RowBox[{"TotalLayer", "[", 
        RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "n", "}"}], ",", 
           RowBox[{"{", "n", "}"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<e\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", "LogisticSigmoid", "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<Wx\>\""}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}], "\[Rule]", 
       "\"\<Ws\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Wx\>\"", ",", "\"\<Ws\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<Wx+Ws\>\"", "\[Rule]", "\"\<e\>\""}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gate0Layer", "[", "n_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Wx\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Ws\>\"", "->", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Wx+Ws\>\"", "->", 
       RowBox[{"TotalLayer", "[", 
        RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "n", "}"}], ",", 
           RowBox[{"{", "n", "}"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<Wx\>\""}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}], "\[Rule]", 
       "\"\<Ws\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Wx\>\"", ",", "\"\<Ws\>\""}], "}"}], "\[Rule]", 
       "\"\<Wx+Ws\>\""}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensorizeLayer", "[", 
   RowBox[{"k_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PartLayer", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "k"}], "}"}]}], "]"}], "~", "Join", "~", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"outerProductLayer", "[", "]"}], ",", 
       RowBox[{"k", "-", "1"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"Range", "[", "k", "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "*", "k"}], "-", "1"}], "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<OutPut\>\"", "]"}]}]}], "}"}], "~", 
     "Join", "~", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k", "-", "2", "+", "i"}], ",", "i"}], "}"}], "\[Rule]", 
        RowBox[{"k", "-", "1", "+", "i"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3", ",", "k"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiGatesLayer", "[", 
   RowBox[{"k_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"gateBLayer", "[", 
        RowBox[{"n", "-", "1"}], "]"}], ",", "k"}], "]"}], "~", "Join", "~", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CatenateLayer", "[", "]"}], ",", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"n", "-", "1"}]}], "}"}], "]"}], ",", 
       RowBox[{"PaddingLayer", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"n", "-", "1"}]}], "}"}]}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       RowBox[{"Range", "[", "k", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Range", "[", "k", "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"k", "+", "1"}], "\[Rule]", 
        RowBox[{
         RowBox[{"k", "+", "2"}], "\[Rule]", 
         RowBox[{"k", "+", "3"}]}]}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7804452912072196`*^9, 3.7804453286164756`*^9}, 
   3.780445372842055*^9, {3.7804457092819424`*^9, 3.780445710328148*^9}, {
   3.7804457639908886`*^9, 3.7804457987677097`*^9}, {3.780447580081992*^9, 
   3.780447627488276*^9}, {3.780447677838587*^9, 3.780447695009489*^9}, {
   3.7804511702367363`*^9, 3.7804512239648046`*^9}, {3.7804512641308413`*^9, 
   3.7804512688287706`*^9}, {3.7804524993086996`*^9, 3.780452502601178*^9}, {
   3.78049024107625*^9, 3.780490297388026*^9}, {3.7804903352003083`*^9, 
   3.7804903352248225`*^9}, {3.7804903807395587`*^9, 3.780490405280918*^9}, 
   3.7804904565382566`*^9, {3.7804904983258295`*^9, 3.7804904988072433`*^9}, {
   3.7804913733708067`*^9, 3.7804914000638437`*^9}, {3.780491485266717*^9, 
   3.780491498154789*^9}, 3.780491646113297*^9, {3.7804931532364206`*^9, 
   3.7804931579652233`*^9}, {3.7805285461084948`*^9, 
   3.7805285552119975`*^9}, {3.7806766762690153`*^9, 
   3.7806766793746166`*^9}, {3.7806767337409205`*^9, 
   3.7806768140137825`*^9}, {3.780676855541875*^9, 3.780676913126656*^9}, 
   3.7818153535077305`*^9, {3.7818155109864187`*^9, 3.78181552301882*^9}, {
   3.842708354294828*^9, 
   3.842708360569656*^9}},ExpressionUUID->"31f6e3ae-c379-4221-8287-\
dc707478f70f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mpsJoin", "[", 
    RowBox[{"physicalDOF_", ",", "meraNumber_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outerProductLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"meraNumber", ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"physicalDOF", "*", "meraNumber"}]}], ",", 
         RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}], ",", 
         RowBox[{"\"\<Weights\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", "Z"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"meraNumber", ",", 
               RowBox[{"meraNumber", "*", "physicalDOF"}]}], "}"}]}], "]"}], 
           "/", 
           SqrtBox["meraNumber"]}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_1\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<Input_2\>\"", "]"}]}], "}"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpsLayer", "[", 
   RowBox[{"k_", ",", "n_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PartLayer", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "k"}], "}"}]}], "]"}], "~", "Join", "~", 
     RowBox[{"{", 
      RowBox[{"LinearLayer", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}], "}"}], "~", 
     "Join", "~", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"mpsJoin", "[", 
        RowBox[{"n", ",", "d"}], "]"}], ",", 
       RowBox[{"k", "-", "1"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"Range", "[", "k", "]"}]}], ",", 
       RowBox[{"1", "\[Rule]", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{
        RowBox[{"2", "*", "k"}], "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<OutPut\>\"", "]"}]}]}], "}"}], "~", 
     "Join", "~", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k", "-", "1", "+", "i"}], ",", "i"}], "}"}], "\[Rule]", 
        RowBox[{"k", "+", "i"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "k"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"k", ",", "n"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.782579654846939*^9, 3.782579736217356*^9}, {
   3.7825836502734003`*^9, 3.7825836892193604`*^9}, {3.78258375753848*^9, 
   3.782583764377358*^9}, {3.7825838686364765`*^9, 3.782583876886112*^9}, {
   3.782584847295951*^9, 3.7825848619538317`*^9}, {3.7825850368239155`*^9, 
   3.7825850717053275`*^9}, {3.782585107777729*^9, 3.782585155640789*^9}, {
   3.782585336711902*^9, 3.7825853369946365`*^9}, {3.7825854238969946`*^9, 
   3.7825854271857195`*^9}, {3.78258589767257*^9, 3.782586007901191*^9}, 
   3.842708365468134*^9},ExpressionUUID->"9d88d478-5064-4bcf-9d37-\
491b1f739b62"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7804453735282173`*^9, 3.7804453742896442`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"70f1f1bc-35ac-4529-9fca-ef29ab892c1b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Preparation", " ", "of", " ", "training", " ", "and", " ", "testing", " ", 
   RowBox[{"data", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8427085071994915`*^9, 
  3.842708560092601*^9}},ExpressionUUID->"f62197ae-39a8-4a8a-947c-\
50fdde13c032"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Different", " ", "parameters", " ", "are", " ", "used", " ", "for", " ", 
   "different", " ", 
   RowBox[{"tasks", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8427083952136593`*^9, 3.8427084093640556`*^9}, {
  3.842708526778764*^9, 
  3.8427085276883144`*^9}},ExpressionUUID->"6dee225a-7fd1-4036-a60d-\
a4cc864561a4"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8427084229511557`*^9},ExpressionUUID->"8980874d-7c3e-461f-86e0-\
8a48c19409ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"logistic_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"2", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7818865678262587`*^9, 3.7818865921493807`*^9}, {
   3.781886742273726*^9, 3.781886742452303*^9}, {3.7818867855621667`*^9, 
   3.7818867888472753`*^9}, {3.7818869519140434`*^9, 
   3.7818869529197054`*^9}, {3.781887091867526*^9, 3.7818870923019137`*^9}, 
   3.781892321633518*^9, 3.781892804324872*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"74b8a991-e384-4c1e-9d06-2a2c9c1b88f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"4", "#", 
         RowBox[{"(", 
          RowBox[{"1", "-", "#"}], ")"}]}], "&"}], ",", "0.61", ",", 
       "10000"}], "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"4", "#", 
         RowBox[{"(", 
          RowBox[{"1", "-", "#"}], ")"}]}], "&"}], ",", "0.11", ",", "500"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.781886539997414*^9, 3.7818865416740184`*^9}, {
  3.781892336709442*^9, 3.7818923393193717`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"691e11ba-51ae-4d54-81ae-6bb8dbec79e5"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7818865528187037`*^9, 
  3.781891749071516*^9},ExpressionUUID->"f349d201-10f8-4d2d-8520-\
268d7f0b6c53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"logistic", "-", "squared_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7818865678262587`*^9, 3.7818865921493807`*^9}, {
   3.781886742273726*^9, 3.781886742452303*^9}, {3.7818867855621667`*^9, 
   3.7818867888472753`*^9}, {3.7818869519140434`*^9, 
   3.7818869529197054`*^9}, {3.781887091867526*^9, 3.7818870923019137`*^9}, 
   3.781894169787068*^9},
 CellLabel->
  "In[366]:=",ExpressionUUID->"85b4be15-a654-4446-948c-46d75b060c8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"16", "#"}], "-", 
         RowBox[{"80", 
          RowBox[{"#", "^", "2"}]}], "+", 
         RowBox[{"128", 
          RowBox[{"#", "^", "3"}]}], "-", 
         RowBox[{"64", 
          RowBox[{"#", "^", "4"}]}]}], "&"}], ",", "0.61", ",", "10000"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"16", "#"}], "-", 
         RowBox[{"80", 
          RowBox[{"#", "^", "2"}]}], "+", 
         RowBox[{"128", 
          RowBox[{"#", "^", "3"}]}], "-", 
         RowBox[{"64", 
          RowBox[{"#", "^", "4"}]}]}], "&"}], ",", "0.11", ",", "500"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.781886539997414*^9, 3.7818865416740184`*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"64bc708b-d5d4-4e2a-b392-76b9730eb4f4"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7818865528187037`*^9, 
  3.781891749071516*^9},ExpressionUUID->"779878a2-cde8-4d9e-824d-\
b5e8089e1e0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"logistic", "-", "cubed_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7818865678262587`*^9, 3.7818865921493807`*^9}, {
   3.781886742273726*^9, 3.781886742452303*^9}, {3.7818867855621667`*^9, 
   3.7818867888472753`*^9}, {3.7818869519140434`*^9, 
   3.7818869529197054`*^9}, {3.781887091867526*^9, 3.7818870923019137`*^9}, {
   3.7818922720861845`*^9, 3.781892272701842*^9}, {3.7828704216299467`*^9, 
   3.7828704299233136`*^9}, 3.782871350186822*^9, {3.782871380502962*^9, 
   3.782871383759526*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"82741292-c729-4b07-9aab-6d91c13669ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"64", " ", "x"}], "-", 
          RowBox[{"1344", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"10752", " ", 
           SuperscriptBox["x", "3"]}], "-", 
          RowBox[{"42240", " ", 
           SuperscriptBox["x", "4"]}], "+", 
          RowBox[{"90112", " ", 
           SuperscriptBox["x", "5"]}], "-", 
          RowBox[{"106496", " ", 
           SuperscriptBox["x", "6"]}], "+", 
          RowBox[{"65536", " ", 
           SuperscriptBox["x", "7"]}], "-", 
          RowBox[{"16384", " ", 
           SuperscriptBox["x", "8"]}]}]}], "]"}], ",", "0.61", ",", "10000"}],
       "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"64", " ", "x"}], "-", 
          RowBox[{"1344", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"10752", " ", 
           SuperscriptBox["x", "3"]}], "-", 
          RowBox[{"42240", " ", 
           SuperscriptBox["x", "4"]}], "+", 
          RowBox[{"90112", " ", 
           SuperscriptBox["x", "5"]}], "-", 
          RowBox[{"106496", " ", 
           SuperscriptBox["x", "6"]}], "+", 
          RowBox[{"65536", " ", 
           SuperscriptBox["x", "7"]}], "-", 
          RowBox[{"16384", " ", 
           SuperscriptBox["x", "8"]}]}]}], "]"}], ",", "0.11", ",", "500"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.781886539997414*^9, 3.7818865416740184`*^9}, {
  3.781892283320998*^9, 3.7818922934889803`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e6341385-0c8e-40c4-ba2a-15998fa77f3d"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.7830250618091726`*^9, 
  3.7830250627149467`*^9}},ExpressionUUID->"9a7f2231-d5f6-432a-aa84-\
b9c8f1dd0d55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"gauss", "-", "ar_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", "4", "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"3", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7830250765866747`*^9, 3.783025088301503*^9}, 
   3.7830253915189323`*^9, {3.7830262269722037`*^9, 3.783026227891495*^9}, {
   3.783689530603797*^9, 3.7836895571796703`*^9}, {3.783689705114401*^9, 
   3.7836897054180903`*^9}, 3.7836899140043993`*^9, {3.7838094316910963`*^9, 
   3.783809439954728*^9}, {3.783809531058305*^9, 3.783809531985793*^9}, {
   3.7838095868197193`*^9, 3.7838095868575153`*^9}, {3.7838110867047787`*^9, 
   3.783811086951277*^9}, {3.7838117074563513`*^9, 3.783811707566801*^9}, {
   3.7848999062332287`*^9, 3.784899906672875*^9}, {3.784899970552701*^9, 
   3.784899970728726*^9}, {3.784900236946595*^9, 3.784900252529201*^9}, {
   3.784900506923127*^9, 3.784900514057928*^9}, 3.7849007053793*^9, {
   3.784901534005837*^9, 3.7849015341319637`*^9}, {3.7849201200623693`*^9, 
   3.784920122469088*^9}, 3.784921271053939*^9},
 CellLabel->
  "In[637]:=",ExpressionUUID->"0b7497cd-3299-4bcb-8f64-48ad3ee14866"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "6.2"}], "*", "5", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5"}], 
                RowBox[{"#", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], "+", 
               RowBox[{"0.25", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "-", 
               RowBox[{"0.125", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "+", 
               RowBox[{"0.0625", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "-", 
               RowBox[{"0.03125", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "^", "2"}]}], 
           "]"}], "-", "0.55"}]}], "}"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "0.02", ",", "0.03", ",", "0.04", ",", "0.05"}], 
       "}"}], ",", 
      RowBox[{"2", "*", "2000"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{
       RowBox[{"-", "1"}], ";;", 
       RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"2001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "2000"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747005872761173*^9, 3.7470059845953865`*^9}, 
   3.7470064377210236`*^9, {3.7830250679042454`*^9, 3.7830250688286333`*^9}, {
   3.7830250996907153`*^9, 3.783025101426299*^9}, {3.7830253180572886`*^9, 
   3.7830253217598753`*^9}, {3.783689546125353*^9, 3.7836895486126204`*^9}, {
   3.78380953903631*^9, 3.7838095413144493`*^9}, {3.7849000229666367`*^9, 
   3.7849000575448837`*^9}, {3.784900117049303*^9, 3.784900296441751*^9}, {
   3.784900336681788*^9, 3.7849004740901957`*^9}, {3.784900862652012*^9, 
   3.784900865091117*^9}, {3.784900911004239*^9, 3.784900928707198*^9}, {
   3.784900980716569*^9, 3.78490104065589*^9}, {3.7849010866369762`*^9, 
   3.7849011230203114`*^9}, {3.784901165793021*^9, 3.784901219747984*^9}, {
   3.784901306486155*^9, 3.7849013315722227`*^9}, {3.7849013792813387`*^9, 
   3.7849014991260023`*^9}, {3.78490154888525*^9, 3.784901563119179*^9}, {
   3.784920114128358*^9, 3.784920174046872*^9}, {3.7849211558398533`*^9, 
   3.784921208365389*^9}, {3.784921253975502*^9, 3.7849213501090107`*^9}, {
   3.784921384142248*^9, 3.784921455030401*^9}, {3.784921487350781*^9, 
   3.7849215087195787`*^9}, {3.784921548539418*^9, 3.784921603599359*^9}, 
   3.784921639662842*^9, {3.7849243714371862`*^9, 3.78492437252392*^9}, {
   3.8427084384162292`*^9, 
   3.842708449430852*^9}},ExpressionUUID->"849a06a4-1810-45bd-8dcc-\
e2fe2b991fb0"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.7830250618091726`*^9, 
  3.7830250627149467`*^9}},ExpressionUUID->"3180ee54-e53b-4bdd-b569-\
d56542b08ffe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"gauss", "-", "squared_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7830250765866747`*^9, 3.783025088301503*^9}, 
   3.7830253915189323`*^9, {3.7830262269722037`*^9, 3.783026227891495*^9}, {
   3.783689530603797*^9, 3.7836895571796703`*^9}, {3.783689705114401*^9, 
   3.7836897054180903`*^9}, 3.7836899140043993`*^9, {3.7838094316910963`*^9, 
   3.783809439954728*^9}, {3.783809531058305*^9, 3.783809531985793*^9}, {
   3.7838095868197193`*^9, 3.7838095868575153`*^9}, {3.7838110867047787`*^9, 
   3.783811086951277*^9}, {3.7838117074563513`*^9, 3.783811707566801*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2e0ff812-03f4-4685-83b0-ae87f0608ebd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", 
            "2"}]}], "]"}], "-", "0.55"}], "&"}], ",", "0.31", ",", "10000"}],
       "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", 
            "2"}]}], "]"}], "-", "0.55"}], "&"}], ",", "0.91", ",", "500"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.747005872761173*^9, 3.7470059845953865`*^9}, 
   3.7470064377210236`*^9, {3.7830250679042454`*^9, 3.7830250688286333`*^9}, {
   3.7830250996907153`*^9, 3.783025101426299*^9}, {3.7830253180572886`*^9, 
   3.7830253217598753`*^9}, {3.783689546125353*^9, 3.7836895486126204`*^9}, {
   3.78380953903631*^9, 3.7838095413144493`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"489d4cf9-aa29-46f3-92ac-a9e30d8da070"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.7830250618091726`*^9, 
  3.7830250627149467`*^9}},ExpressionUUID->"05f82019-e93c-4533-a020-\
072d0b754183"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"gauss", "-", "cubed_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", "2", "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"inputSteps", "=", "1"}], ";"}], "*)"}], 
   RowBox[{
    RowBox[{"inputSteps", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7830250765866747`*^9, 3.783025088301503*^9}, 
   3.7830253915189323`*^9, {3.7830262269722037`*^9, 3.783026227891495*^9}, {
   3.783689530603797*^9, 3.7836895571796703`*^9}, {3.783689705114401*^9, 
   3.7836897054180903`*^9}, 3.7836899140043993`*^9, {3.7838094316910963`*^9, 
   3.783809439954728*^9}, {3.783809520418796*^9, 3.783809522553697*^9}, {
   3.7856815220648613`*^9, 3.785681530999093*^9}, 
   3.842708457754323*^9},ExpressionUUID->"6b31232c-c989-4103-9243-\
37d33bb1f353"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], 
                 "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], 
          "]"}], "-", "0.55"}], "&"}], ",", "0.31", ",", "10000"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], 
                 "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], 
          "]"}], "-", "0.55"}], "&"}], ",", "0.91", ",", "500"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.747005872761173*^9, 3.7470059845953865`*^9}, 
   3.7470064377210236`*^9, {3.7830250679042454`*^9, 3.7830250688286333`*^9}, {
   3.7830250996907153`*^9, 3.783025101426299*^9}, {3.7830253180572886`*^9, 
   3.7830253217598753`*^9}, {3.783689546125353*^9, 3.7836895486126204`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"06786105-1916-4646-b8c5-657239497061"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.7830250618091726`*^9, 
  3.7830250627149467`*^9}},ExpressionUUID->"86abb15d-a175-472a-9cff-\
29d855cd0c96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"gauss", "-", "power5_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"5", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7830250765866747`*^9, 3.783025088301503*^9}, 
   3.7830253915189323`*^9, {3.7830262269722037`*^9, 3.783026227891495*^9}, {
   3.783689530603797*^9, 3.7836895571796703`*^9}, {3.783689705114401*^9, 
   3.7836897054180903`*^9}, 3.7836899140043993`*^9, {3.7837736453700542`*^9, 
   3.7837736914977098`*^9}, {3.783795413432471*^9, 3.7837954135431843`*^9}, {
   3.7837979369564657`*^9, 3.783797963842754*^9}, 3.78380504388136*^9, {
   3.7838092612432747`*^9, 3.783809261370145*^9}, 3.784831799650483*^9, {
   3.7849206913733*^9, 3.784920691485244*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6c849cf3-a4a1-4063-adbc-d0981382d27d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], 
                    "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], 
                    "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], "]"}], "-", 
              "0.55"}], ")"}], "^", "2"}]}], "]"}], "-", "0.55"}], "&"}], ",",
        "0.31", ",", "2000"}], "]"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], 
                    "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], 
                    "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], "]"}], "-", 
              "0.55"}], ")"}], "^", "2"}]}], "]"}], "-", "0.55"}], "&"}], ",",
        "0.91", ",", "500"}], "]"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.747005872761173*^9, 3.7470059845953865`*^9}, 
   3.7470064377210236`*^9, {3.7830250679042454`*^9, 3.7830250688286333`*^9}, {
   3.7830250996907153`*^9, 3.783025101426299*^9}, {3.7830253180572886`*^9, 
   3.7830253217598753`*^9}, {3.783689546125353*^9, 3.7836895486126204`*^9}, {
   3.7837736544837856`*^9, 3.7837736616576767`*^9}, 3.784920696854814*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"23f370c2-9b5b-4ed7-9e2a-545e15e5f314"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7818865528187037`*^9, 
  3.781891749071516*^9},ExpressionUUID->"a0fe9ce1-9343-4229-be27-\
46ccf86b1515"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Chirikov", " ", "standard", " ", 
    RowBox[{"map", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"5", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.783821586008794*^9, {3.7838228370441647`*^9, 3.783822837201606*^9}, 
   3.783862985542362*^9, {3.7838646686564827`*^9, 3.783864674026011*^9}, {
   3.784340342578974*^9, 3.784340368249044*^9}, {3.7843405706421843`*^9, 
   3.784340573793037*^9}, {3.784342778777007*^9, 3.7843427788873777`*^9}, 
   3.7843438360182037`*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"d937b711-fd0e-4b2c-bad8-c59375b28fde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"2.0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"2.0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.777", ",", "0.555"}], "}"}], ",", "10000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"2.0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"2.0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.333", ",", "0.999"}], "}"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7838215670952797`*^9, {3.783821637303935*^9, 3.783821735255868*^9}, {
   3.783822158633885*^9, 3.783822160969038*^9}, {3.783822369758544*^9, 
   3.783822384520988*^9}, {3.783822507961728*^9, 3.783822516561605*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7791ab4d-6e66-4c9a-963a-49615538d00a"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783821568897212*^9},ExpressionUUID->"92b39624-2a8f-4e97-9824-\
0264a4baef31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arnold", "'"}], "s", " ", "cat", " ", 
    RowBox[{"map", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", "2", "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"5", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783690453528699*^9, 3.783690461109615*^9}, {
   3.7836906179545197`*^9, 3.783690622600563*^9}, 3.783690733097479*^9, {
   3.783690764377761*^9, 3.78369076448596*^9}, {3.783690824205764*^9, 
   3.783690824446629*^9}, {3.7836910835485764`*^9, 3.7836911099410515`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"38d1f000-9f04-464b-8ce3-c97691011ca1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ".", "#"}], ",", "1"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.777", ",", "0.555"}], "}"}], ",", "10000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ".", "#"}], ",", "1"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.333", ",", "0.999"}], "}"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7836906292437706`*^9, 3.7836906332846327`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"84cba564-1ba4-456c-b36f-6727944043ea"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783690446447503*^9},ExpressionUUID->"7459cf29-3fc5-4610-b7e9-\
1660b793d8ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Henon", " ", "map", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"every", " ", "two", " ", "steps"}], ")"}], "."}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"5", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783026241838081*^9, 3.783026262021357*^9}, 
   3.7830264818153315`*^9, 3.7830265566286135`*^9, {3.783026659496426*^9, 
   3.7830266596667786`*^9}, {3.7831889329249506`*^9, 3.783188933042451*^9}, {
   3.783189299038295*^9, 3.783189299738638*^9}, {3.7831901449983387`*^9, 
   3.7831901457369623`*^9}, {3.783191349729392*^9, 3.7831913499419146`*^9}, {
   3.7831931765288863`*^9, 3.7831931766741643`*^9}, {3.7831945100585265`*^9, 
   3.7831945106334233`*^9}, {3.7832022740627623`*^9, 
   3.7832022741686115`*^9}, {3.783205046865721*^9, 3.7832050471435146`*^9}, {
   3.7832737975496197`*^9, 3.783273799083239*^9}, {3.7836886965526175`*^9, 
   3.783688703188342*^9}},ExpressionUUID->"3e66c1ea-1363-4c66-a06f-\
5a0c18629642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"1.4", "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
          RowBox[{"0.3", "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.3"}], "}"}], ",", 
      RowBox[{"2", "*", "5000"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", ";;", "2"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], ";;", 
       RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"1.4", "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
          RowBox[{"0.3", "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.6"}], "}"}], ",", 
      RowBox[{"2", "*", "5000"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", ";;", "2"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], ";;", 
       RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.746997807930444*^9, 3.746997818400808*^9}, {
   3.7469981199997444`*^9, 3.7469981329378157`*^9}, {3.7470061303937235`*^9, 
   3.747006135878024*^9}, 3.7470064328849516`*^9, {3.7830262354375224`*^9, 
   3.7830262367091684`*^9}, {3.7830262672314377`*^9, 3.783026270585101*^9}, {
   3.7830263123968077`*^9, 3.78302633775521*^9}, {3.783189110654278*^9, 
   3.783189123310771*^9}, 3.7831891797575264`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"22ff2a05-bd42-428b-b790-a9bfb9dacadc"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7818210289907875`*^9},ExpressionUUID->"6b9818b9-e8c3-40e4-8a9a-\
ffa0a692b5ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"lorenz", "-", 
    RowBox[{"0.5", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"6", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"56c598f1-e676-4d6c-8a90-5c2c0e9e78de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", "10.0"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "-", 
           RowBox[{"y", "[", "t", "]"}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "[", "t", "]"}]}], " ", 
          RowBox[{"z", "[", "t", "]"}]}], "+", 
         RowBox[{"28.0", " ", 
          RowBox[{"x", "[", "t", "]"}]}], "-", 
         RowBox[{"y", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], " ", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"8", "/", "3"}], ")"}], 
          RowBox[{"z", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", "2500", ",", "0.5"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"91c38474-18fc-4cf7-b56d-1adeaa4ed493"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7818210289907875`*^9},ExpressionUUID->"74041731-6e7e-4d57-942a-\
285f0970b43a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"0.5", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, {3.783289164806282*^9, 3.783289165054226*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"df791fcc-e477-4e8a-98ed-7de09cc4e12b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", "2500", ",", "0.5"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783289167737979*^9, 3.783289170398582*^9}},
 CellLabel->
  "In[450]:=",ExpressionUUID->"9ed79260-c633-4ad9-af65-1add598315e4"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7818210289907875`*^9},ExpressionUUID->"06efa35a-f433-4caf-b0b5-\
10d8cc500a6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"1.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}},ExpressionUUID->"9e9bdc7c-04f1-40c0-90c2-\
1c8e7dec3190"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", "5000", ",", "1.0"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"b4ea0bb9-67a5-49fb-81cb-a9fc223ebdce"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783278814060133*^9},ExpressionUUID->"adf44103-c48f-446b-ae25-\
6043491e39d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"2.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"337eb97a-8eff-4ec8-9a6c-0dae3182daee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"2", "*", "5000"}], ",", 
          RowBox[{"2", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"7edad0b2-ace4-4afc-9126-6a9e6ee0e661"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783280332445002*^9},ExpressionUUID->"b0071d68-1a5d-4d7e-9bd5-\
0e3950a72893"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"5.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9, 3.783281787000004*^9},
 CellLabel->
  "In[300]:=",ExpressionUUID->"7c14484d-d7ef-47ed-b806-284e16f26054"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"5", "*", "5000"}], ",", 
          RowBox[{"5", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}, {3.783281791989483*^9, 
   3.783281809093337*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"64b5aca0-d8be-48bf-8a2a-2b682c7ad63f"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783280332445002*^9},ExpressionUUID->"8287b292-bda0-4483-8fd0-\
dc98cdc52801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"10.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of",
       " ", "the", " ", "existence", " ", "of", " ", 
      RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9, 3.783281787000004*^9, {
   3.7832843282773314`*^9, 
   3.783284328965232*^9}},ExpressionUUID->"0bd91d0a-3059-4680-9c68-\
2f3884bc7f28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"10", "*", "5000"}], ",", 
          RowBox[{"10", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}, {3.783281791989483*^9, 
   3.783281809093337*^9}, {3.783283125149427*^9, 3.783283128991788*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"7250cb50-0282-4267-8bf3-91c1da59ee6b"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783280332445002*^9},ExpressionUUID->"32871f23-6628-4e63-a021-\
2c9bcc80c77e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rossler", "-", 
    RowBox[{"20.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"10", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9, 3.783281787000004*^9, {
   3.7832843282773314`*^9, 3.783284337084833*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"a3ae4694-1df5-48f1-8d23-d3d2ccbb2806"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"0.1", "+", 
         RowBox[{
          RowBox[{"z", "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", "14"}], ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"20", "*", "5000"}], ",", 
          RowBox[{"20", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}, {3.783281791989483*^9, 
   3.783281809093337*^9}, {3.783283125149427*^9, 3.783283128991788*^9}, {
   3.783284341953247*^9, 3.7832843436128607`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"b2d97cd2-bf33-486a-87d6-7e73fdadb053"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783980899557509*^9},ExpressionUUID->"ee5098fa-283e-40cc-a665-\
123e51ff162d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"duffing", "-", 
    RowBox[{"10.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"2", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9, 3.783281787000004*^9, {
   3.7832843282773314`*^9, 3.783284337084833*^9}, {3.783980909873754*^9, 
   3.7839809446723537`*^9}, 3.7839813467369623`*^9, {3.783981517311698*^9, 
   3.783981517470676*^9}, {3.783981750247903*^9, 3.7839817503503027`*^9}, {
   3.783982120543353*^9, 3.783982120722062*^9}, {3.783982166551117*^9, 
   3.7839821695330257`*^9}, {3.783990996473444*^9, 3.7839909968077393`*^9}, 
   3.783991063919972*^9, {3.784148749869006*^9, 3.784148767760859*^9}, 
   3.784148952574095*^9, {3.784149188304462*^9, 3.7841491915088387`*^9}, {
   3.784149262877681*^9, 3.784149262988666*^9}, {3.78415416916689*^9, 
   3.7841541883977423`*^9}, {3.784154249902972*^9, 3.7841542527099743`*^9}, 
   3.7841550353280907`*^9, {3.784156015759779*^9, 3.784156015934669*^9}, {
   3.784158534944031*^9, 3.784158549534523*^9}, {3.7841608466559477`*^9, 
   3.784160861120254*^9}, 3.784161185232286*^9, {3.784161592003544*^9, 
   3.7841615921112623`*^9}, {3.784161888324143*^9, 3.784161888432563*^9}, 
   3.7841648571757193`*^9, {3.784165257846649*^9, 3.78416525802184*^9}, {
   3.78416544055007*^9, 3.784165441239504*^9}, {3.785015422406802*^9, 
   3.785015422629971*^9}},ExpressionUUID->"a6c235bf-2bc8-40f1-928e-\
33feee874ed9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"y", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.02"}], " ", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"1.0", " ", 
          RowBox[{"x", "[", "t", "]"}]}], "-", 
         RowBox[{"5.0", " ", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "^", "3"}]}], "+", 
         RowBox[{"8.0", 
          RowBox[{"Cos", "[", 
           RowBox[{"0.5", " ", "t"}], "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"10", "*", "5000"}], ",", 
          RowBox[{"10", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", "1000"}], ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}, {3.783281791989483*^9, 
   3.783281809093337*^9}, {3.783283125149427*^9, 3.783283128991788*^9}, {
   3.783284341953247*^9, 3.7832843436128607`*^9}, {3.7839809496419697`*^9, 
   3.783980959497306*^9}, {3.78398099878509*^9, 3.783981131816866*^9}, {
   3.783981595256321*^9, 3.7839815958232603`*^9}, {3.783981735297576*^9, 
   3.783981736254805*^9}, {3.783982125767329*^9, 3.7839821313267508`*^9}, {
   3.783991051666873*^9, 3.78399105620086*^9}, {3.784158513468766*^9, 
   3.7841585161750097`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"36ab9088-c2b1-496b-aa00-cad109401781"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.783980899557509*^9},ExpressionUUID->"b03e36a3-33fc-4474-9370-\
f8c056ad9d06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"thomas", "-", 
    RowBox[{"1.0", "_lstm"}], "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Numbers", " ", "cannot", " ", "be", " ", "1", " ", "because", " ", "of", 
     " ", "the", " ", "existence", " ", "of", " ", 
     RowBox[{"NormalizationLayer", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalLength", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "meraNumbers", "]"}], "+", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicalDOF", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputSteps", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTrainingRounds", "=", 
     RowBox[{"2", "*", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"batchSize", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validationSet", "=", "0.2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.781027636326437*^9, 3.7810276778210015`*^9}, 
   3.7810305040821066`*^9, {3.781820966688627*^9, 3.781821005032881*^9}, {
   3.7818210861395245`*^9, 3.78182108661003*^9}, {3.781883040336354*^9, 
   3.7818830412272024`*^9}, {3.7818830727128773`*^9, 3.781883072860501*^9}, {
   3.781883640484252*^9, 3.7818836409332113`*^9}, {3.7818842787165937`*^9, 
   3.7818842850700817`*^9}, {3.781884341406693*^9, 3.7818843415612555`*^9}, {
   3.781884412796383*^9, 3.7818844129511395`*^9}, {3.7827685954516153`*^9, 
   3.78276860236432*^9}, {3.782768816648274*^9, 3.782768817470665*^9}, 
   3.7830100859825954`*^9, {3.783278819474699*^9, 3.783278849185923*^9}, {
   3.78327906456327*^9, 3.783279070260021*^9}, {3.7832802993101254`*^9, 
   3.783280299427124*^9}, 3.7832803403950777`*^9, 3.783281787000004*^9, {
   3.7832843282773314`*^9, 3.783284337084833*^9}, {3.783980909873754*^9, 
   3.7839809446723537`*^9}, 3.7839813467369623`*^9, {3.783981517311698*^9, 
   3.783981517470676*^9}, {3.783981750247903*^9, 3.7839817503503027`*^9}, {
   3.783982120543353*^9, 3.783982120722062*^9}, {3.783982166551117*^9, 
   3.7839821695330257`*^9}, {3.783990996473444*^9, 3.7839909968077393`*^9}, 
   3.783991063919972*^9, {3.784148749869006*^9, 3.784148767760859*^9}, 
   3.784148952574095*^9, {3.784149188304462*^9, 3.7841491915088387`*^9}, {
   3.784149262877681*^9, 3.784149262988666*^9}, {3.78415416916689*^9, 
   3.7841541883977423`*^9}, {3.784154249902972*^9, 3.7841542527099743`*^9}, 
   3.7841550353280907`*^9, {3.784156015759779*^9, 3.784156015934669*^9}, {
   3.784158534944031*^9, 3.784158549534523*^9}, {3.7841608466559477`*^9, 
   3.784160861120254*^9}, 3.784161185232286*^9, {3.784161592003544*^9, 
   3.7841615921112623`*^9}, {3.784161888324143*^9, 3.784161888432563*^9}, 
   3.7841648571757193`*^9, {3.784165257846649*^9, 3.78416525802184*^9}, {
   3.78416544055007*^9, 3.784165441239504*^9}, {3.78492181035003*^9, 
   3.7849218170369062`*^9}, {3.784922011892655*^9, 3.78492201249264*^9}, {
   3.784923030421014*^9, 3.784923030685563*^9}, {3.784933102008198*^9, 
   3.784933102227662*^9}, 
   3.784945529528129*^9},ExpressionUUID->"19775d26-e2ce-4168-9818-\
75ad5b9a5518"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputVecDim", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"y", "[", "t", "]"}], "]"}], "-", 
         RowBox[{"0.1", 
          RowBox[{"x", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"z", "[", "t", "]"}], "]"}], "-", 
         RowBox[{"0.1", 
          RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"x", "[", "t", "]"}], "]"}], "-", 
         RowBox[{"0.1", 
          RowBox[{"z", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50000"}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Standardize", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "tmp"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"1", "*", "5000"}], ",", 
          RowBox[{"1", "*", "1.0"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"rawData", ",", 
       RowBox[{"inputSteps", "+", "1"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{"3001", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"[", 
     RowBox[{";;", "3000"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"rawData", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{";;", "10"}], ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7470064218504868`*^9, 3.747006639460929*^9}, {
   3.7470066820553665`*^9, 3.747006684676939*^9}, {3.747006749381003*^9, 
   3.7470067530472035`*^9}, {3.7470067863231635`*^9, 
   3.7470067875080123`*^9}, {3.7470068519342437`*^9, 3.747006863683839*^9}, {
   3.7470069381462607`*^9, 3.747006953974951*^9}, {3.7470070484029336`*^9, 
   3.7470070793325605`*^9}, {3.7470072923842897`*^9, 
   3.7470073065793476`*^9}, {3.7470073651943426`*^9, 3.747007372071916*^9}, {
   3.74700751803028*^9, 3.747007521629632*^9}, 3.747007869783464*^9, {
   3.747010300569424*^9, 3.7470103037882624`*^9}, {3.7494742339456615`*^9, 
   3.749474247251687*^9}, {3.749474851962401*^9, 3.749474852838971*^9}, {
   3.7494775392622395`*^9, 3.7494775849611135`*^9}, {3.7494776447819834`*^9, 
   3.7494776758008213`*^9}, {3.780409241338912*^9, 3.780409259426155*^9}, {
   3.7804130352875595`*^9, 3.7804130354196167`*^9}, {3.780664558283154*^9, 
   3.7806645933812733`*^9}, {3.7806652306968136`*^9, 
   3.7806652645149794`*^9}, {3.780665370520469*^9, 3.7806653766269484`*^9}, {
   3.7806731652591133`*^9, 3.7806731653603516`*^9}, {3.7818199572544775`*^9, 
   3.781819963329633*^9}, 3.7818199993204985`*^9, {3.7818209871770687`*^9, 
   3.7818209872620983`*^9}, {3.781883097771519*^9, 3.7818831117172313`*^9}, {
   3.7818842895036707`*^9, 3.7818842923596087`*^9}, {3.783278870097396*^9, 
   3.783278913891919*^9}, {3.7832791064144773`*^9, 3.783279109098063*^9}, {
   3.783280347063056*^9, 3.78328035128293*^9}, {3.783281791989483*^9, 
   3.783281809093337*^9}, {3.783283125149427*^9, 3.783283128991788*^9}, {
   3.783284341953247*^9, 3.7832843436128607`*^9}, {3.7839809496419697`*^9, 
   3.783980959497306*^9}, {3.78398099878509*^9, 3.783981131816866*^9}, {
   3.783981595256321*^9, 3.7839815958232603`*^9}, {3.783981735297576*^9, 
   3.783981736254805*^9}, {3.783982125767329*^9, 3.7839821313267508`*^9}, {
   3.783991051666873*^9, 3.78399105620086*^9}, {3.784158513468766*^9, 
   3.7841585161750097`*^9}, {3.7849220047560253`*^9, 3.784922025357079*^9}, {
   3.784922126081542*^9, 3.7849222501648073`*^9}, {3.7849245644043417`*^9, 
   3.784924592739945*^9}, {3.784926343572289*^9, 3.784926355787299*^9}, {
   3.784927476954599*^9, 3.784927502706279*^9}, {3.784932945768538*^9, 
   3.784932946020093*^9}, {3.784932999165371*^9, 3.784933000477036*^9}, {
   3.784933073874729*^9, 3.7849330836614637`*^9}, {3.784933126366075*^9, 
   3.7849331368040533`*^9}, {3.784933190856008*^9, 3.784933218492577*^9}, {
   3.784933254767557*^9, 3.7849332793405027`*^9}, {3.7851591842468452`*^9, 
   3.7851591883261566`*^9}, 
   3.8427084893033943`*^9},ExpressionUUID->"fa835990-2bc5-4d1e-82f5-\
cb7a4ce1bf9c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.781815759905399*^9, 3.7818157609326963`*^9}, {
  3.7818195147583694`*^9, 
  3.781819515090328*^9}},ExpressionUUID->"da5f03b0-76e4-476f-b824-\
25a462177558"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.781815711602147*^9, 
  3.781815715219731*^9}},ExpressionUUID->"e0536451-f248-4db3-b05f-\
3417d4fb53a7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Training", "."}], "*)"}]], "Input",
 CellChangeTimes->{{3.842708495162769*^9, 
  3.84270849737772*^9}},ExpressionUUID->"41fa3b56-48b3-4fb8-aa85-\
191a4e21d0b3"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8427084982191715`*^9},ExpressionUUID->"0a4c86d5-daab-4c7d-a34f-\
ca3358c0b705"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Basic", " ", 
    RowBox[{"LSTM", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"longShortTermMemoryUnitLayer", "[", "hiddenVecDim_", "]"}], ":=", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<i\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<o\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<m\>\"", "\[Rule]", 
         RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<im\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc+im\>\"", "->", 
         RowBox[{"TotalLayer", "[", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "hiddenVecDim", "}"}], ",", 
             RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<e\>\"", "->", 
         RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<oc\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<f\>\"", ",", 
           RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
         "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
         "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
         RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<o\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
         RowBox[{"\"\<oc\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"longShortTermMemoryLayer", "[", "hiddenVecDim_", "]"}], ":=", 
    RowBox[{"NetFoldOperator", "[", 
     RowBox[{
      RowBox[{"longShortTermMemoryUnitLayer", "[", "hiddenVecDim", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
        RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7804097575893545`*^9, 3.7804098199827237`*^9}, {
   3.7804099699828033`*^9, 3.7804099903113875`*^9}, {3.780410059958188*^9, 
   3.7804102788717566`*^9}, {3.7804104611362057`*^9, 3.780410527807206*^9}, {
   3.7804105905600777`*^9, 3.7804108780143623`*^9}, {3.780410914564734*^9, 
   3.7804109431868567`*^9}, {3.7804110588952475`*^9, 
   3.7804111692811513`*^9}, {3.780411281791253*^9, 3.7804113038288627`*^9}, {
   3.7804113762964272`*^9, 3.780411633303607*^9}, {3.7804117032169957`*^9, 
   3.7804117037341967`*^9}, {3.7804117796395984`*^9, 
   3.7804118027395043`*^9}, {3.7804118452338395`*^9, 
   3.7804118454661016`*^9}, {3.7804121395473957`*^9, 3.7804122092454967`*^9}, 
   3.780413264020444*^9, {3.780424565134082*^9, 3.7804245820261993`*^9}, 
   3.7804452878831997`*^9, {3.7804453503834085`*^9, 3.7804453557567973`*^9}, {
   3.780445436886155*^9, 3.7804454427206697`*^9}, {3.780445481271917*^9, 
   3.7804454885056844`*^9}, {3.780490335237788*^9, 3.780490335252324*^9}, {
   3.78051989483584*^9, 3.7805198959873753`*^9}, 3.780528567344055*^9, {
   3.78382185439356*^9, 3.783821855400917*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7c883487-b05d-4a20-81ab-d3bfbc3bc6de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Same", " ", "complexity", " ", "re"}], "-", 
    RowBox[{"settings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"lorenz", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "11"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"logistic", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "16"}], ";"}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Different", " ", "hyperparameter", " ", "re"}], "-", 
    RowBox[{"settings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"learningRate", "=", "0.0001"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"batchSize", "=", "4"}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7825904580276537`*^9, 3.7825905284385676`*^9}, {
   3.7825908109331503`*^9, 3.782590811873495*^9}, 3.7825931288269777`*^9, 
   3.7825952608083086`*^9, {3.782845917954237*^9, 3.782845958040021*^9}, {
   3.7828461793812294`*^9, 3.7828461954311333`*^9}, {3.7828716502134686`*^9, 
   3.782871667636551*^9}, {3.78300915098388*^9, 3.7830091661496935`*^9}, 
   3.783010442631569*^9, {3.785172428666714*^9, 3.785172456001685*^9}, {
   3.7851726288530393`*^9, 3.7851726625862246`*^9}, {3.785172695921872*^9, 
   3.7851727143827057`*^9}, {3.785172876264532*^9, 3.7851729059844627`*^9}, {
   3.7851831487199063`*^9, 3.7851831504932704`*^9}, 3.7856801734634027`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"229d3000-5466-48b8-9f01-95c8b5650aee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn0", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryLayer", "[", "hiddenVecDim", "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "hiddenVecDim"}], "}"}]}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"3", "\[Rule]", "4"}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780411678117071*^9, 3.7804117091403275`*^9}, {
   3.7804117456946106`*^9, 3.7804117640426903`*^9}, {3.780411819069538*^9, 
   3.7804118436276426`*^9}, {3.7804119468441978`*^9, 3.780411978009075*^9}, {
   3.7804125053404245`*^9, 3.7804125079459915`*^9}, {3.7804126780884733`*^9, 
   3.7804127765212*^9}, 3.7804130096272697`*^9, {3.780417657523137*^9, 
   3.7804176670018673`*^9}, {3.780425219794204*^9, 3.780425220124571*^9}, 
   3.780441601143793*^9, 3.780658596199541*^9, {3.7810271402731576`*^9, 
   3.781027158455907*^9}, {3.781815792107131*^9, 3.7818157929092035`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ac85766b-567c-4ee0-9a73-83450929e131"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark0", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn0", ",", "trainingData", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", " ", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", ".01"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}]}], 
    RowBox[{"(*", 
     RowBox[{"Quantity", "[", 
      RowBox[{"5", ",", "\"\<Minutes\>\""}], "]"}], "*)"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780528622384741*^9, 3.780528622579819*^9}, {
   3.780658587584217*^9, 3.7806586152577405`*^9}, 3.7806818129914684`*^9, {
   3.7809160758215017`*^9, 3.7809160789941025`*^9}, {3.7809161555485573`*^9, 
   3.780916156517358*^9}, {3.7810244016862698`*^9, 3.7810244255640116`*^9}, 
   3.781024459399066*^9, {3.781027024754642*^9, 3.7810270248899307`*^9}, {
   3.7810271926144114`*^9, 3.7810271959876766`*^9}, {3.7810278624602613`*^9, 
   3.7810278640292873`*^9}, {3.7810279008917513`*^9, 
   3.7810279241147013`*^9}, {3.7810312818016715`*^9, 
   3.7810313056542587`*^9}, {3.7818112859551973`*^9, 
   3.7818112863098354`*^9}, {3.7818200367448688`*^9, 3.781820037503089*^9}, {
   3.781820074437875*^9, 3.78182007483963*^9}, {3.781820163428684*^9, 
   3.7818201854045696`*^9}, {3.781820384609848*^9, 3.781820420379298*^9}, {
   3.781893135777825*^9, 3.7818931387355657`*^9}, 3.783218403909837*^9, {
   3.7836911409797845`*^9, 3.7836911791147614`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"d618a29d-f367-4aeb-8c54-08f8650d9ea7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn0", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark0", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7805075047126484`*^9, 3.7805075186925707`*^9}, {
   3.7806586007162647`*^9, 3.7806586007807374`*^9}, 3.7806818163382607`*^9, {
   3.7818157943852673`*^9, 3.781815794602625*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e3c8c63e-5418-452c-80b0-9420566d6381"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8427085938457956`*^9},ExpressionUUID->"85acf217-3119-4704-8029-\
b7daf445b3da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{"tensor", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryTensorUnitLayer", "[", 
    RowBox[{"physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_"}], 
    "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mg\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"{", 
             RowBox[{"physicalLength", ",", 
              RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"NormalizationLayer", "[", 
            RowBox[{
             RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"physicalLength", ",", 
                RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
          "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<tensor\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tensorizeLayer", "[", 
            RowBox[{"physicalLength", ",", "physicalDOF"}], "]"}], ",", 
           RowBox[{"LinearLayer", "[", "hiddenVecDim", "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], "}"}], "]"}]}]}],
       "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
        RowBox[{"\"\<e\>\"", "\[Rule]", 
         RowBox[{"\"\<mg\>\"", "\[Rule]", "\"\<tensor\>\""}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<tensor\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.780413294355871*^9, 3.7804133053463182`*^9}, 
   3.78041350226116*^9, {3.7804141585561523`*^9, 3.780414207760435*^9}, {
   3.780414472225543*^9, 3.780414472882728*^9}, {3.780416945276907*^9, 
   3.780417068365514*^9}, {3.7804170992579765`*^9, 3.7804171349677563`*^9}, {
   3.7804172224731903`*^9, 3.780417242845098*^9}, {3.780417307862273*^9, 
   3.780417308836899*^9}, {3.780417423866166*^9, 3.780417433561408*^9}, {
   3.780424600970156*^9, 3.780424626274087*^9}, {3.780424680104022*^9, 
   3.780424721034953*^9}, {3.780427265310221*^9, 3.7804272867405634`*^9}, {
   3.780445398546423*^9, 3.7804454528737726`*^9}, {3.7804454940508537`*^9, 
   3.7804455086015167`*^9}, {3.780447715783534*^9, 3.7804477185318522`*^9}, {
   3.7804511401133413`*^9, 3.78045114161183*^9}, {3.7804903352672853`*^9, 
   3.780490335271311*^9}, {3.7805323573675346`*^9, 3.7805323675033503`*^9}, 
   3.78053265260079*^9, {3.781021922912334*^9, 3.781021923199278*^9}, 
   3.782566759211369*^9, {3.782566856341118*^9, 3.782566930875346*^9}, {
   3.782567008264348*^9, 3.7825670084605694`*^9}, {3.7825856076861463`*^9, 
   3.7825856091850243`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"b403aaac-2735-493a-924a-afeb1ebdb039"],

Cell[BoxData[
 RowBox[{
  RowBox[{"longShortTermMemoryTensorLayer", "[", 
   RowBox[{"physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_"}], 
   "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"longShortTermMemoryTensorUnitLayer", "[", 
     RowBox[{"physicalLength", ",", "hiddenVecDim", ",", "physicalDOF"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
      RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"786b1d72-5028-4562-a6a0-d5ad1eb4ad61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Same", " ", "complexity", " ", "re"}], "-", 
    RowBox[{"settings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"lorenz", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "5"}], ";", 
    RowBox[{"physicalDOF", "=", "2"}], ";", 
    RowBox[{"physicalLength", "=", "6"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"logistic", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "4"}], ";", 
    RowBox[{"physicalDOF", "=", "2"}], ";", 
    RowBox[{"physicalLength", "=", "8"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7825905527215757`*^9, 3.782590584178979*^9}, {
   3.7825908045036383`*^9, 3.7825908055792313`*^9}, 3.7825931470804467`*^9, 
   3.7825952652946367`*^9, {3.782846168866561*^9, 3.782846188594353*^9}, {
   3.7828718052972436`*^9, 3.78287182371066*^9}, {3.782871863431656*^9, 
   3.7828718993361707`*^9}, {3.782871932845936*^9, 
   3.782871968298462*^9}},ExpressionUUID->"a61fc4ea-001d-4893-8f34-\
6ecca0b49501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn1", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryTensorLayer", "[", 
         RowBox[{"physicalLength", ",", "hiddenVecDim", ",", "physicalDOF"}], 
         "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"inputSteps", ",", "hiddenVecDim"}], "}"}]}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"3", "\[Rule]", "4"}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"inputSteps", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7804173132517366`*^9, 3.7804173138842964`*^9}, {
   3.7804174461259093`*^9, 3.7804174576697226`*^9}, {3.7804175436355886`*^9, 
   3.780417604760936*^9}, {3.7804179766286526`*^9, 3.7804179768102226`*^9}, {
   3.7804185737892065`*^9, 3.7804185738889065`*^9}, 3.7804247359017076`*^9, {
   3.780425211244045*^9, 3.7804252114800634`*^9}, {3.780427289294772*^9, 
   3.7804272895592613`*^9}, {3.7804273317213526`*^9, 3.7804273335224524`*^9}, 
   3.780445513496603*^9, {3.7805008569200783`*^9, 3.780500866942067*^9}, 
   3.781021913241068*^9, {3.7810295451754456`*^9, 3.7810295659292226`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"58ea2188-a561-4cef-be49-3d3f4a49c0d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark1", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn1", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804273514076476`*^9, 3.780427353193074*^9}, 
   3.7804893947341003`*^9, {3.7804906995311623`*^9, 3.780490706496707*^9}, {
   3.7804908175382195`*^9, 3.7804908265558786`*^9}, {3.780491509104908*^9, 
   3.780491524256935*^9}, 3.780491609174535*^9, {3.7804917899805727`*^9, 
   3.7804917903658724`*^9}, {3.7804929396786747`*^9, 
   3.7804929407514954`*^9}, {3.780493364525167*^9, 3.7804933686663666`*^9}, {
   3.7804938990301743`*^9, 3.7804938991429605`*^9}, {3.7805076141797066`*^9, 
   3.780507615907699*^9}, {3.7805309552368727`*^9, 3.7805309555091743`*^9}, {
   3.78053290657052*^9, 3.780532906668181*^9}, {3.7805334502429237`*^9, 
   3.7805334504233403`*^9}, {3.780533573266997*^9, 3.7805335735082955`*^9}, {
   3.7805340507664404`*^9, 3.780534069520461*^9}, {3.78102919112496*^9, 
   3.7810292162730722`*^9}, {3.78102985289284*^9, 3.7810298773524027`*^9}, {
   3.7825670446417923`*^9, 3.782567051382013*^9}, {3.784946597582374*^9, 
   3.784946597725642*^9}},ExpressionUUID->"031cd424-bacf-481b-a742-\
60dc55e91880"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn1", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark1", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.781029210787526*^9, 3.781029215038282*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"1bda71bb-ce18-421b-b453-5d44ddce28af"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8427086013803263`*^9},ExpressionUUID->"0761c53f-4756-40a9-a125-\
861c5fe8f59f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{"MPS", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"longShortTermMemoryMpsUnitLayer", "[", 
     RowBox[{
     "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
      "meraNumber_"}], "]"}], ":=", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<i\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<o\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f\>\"", "\[Rule]", 
         RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<m\>\"", "\[Rule]", 
         RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<im\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc+im\>\"", "->", 
         RowBox[{"TotalLayer", "[", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "hiddenVecDim", "}"}], ",", 
             RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<e\>\"", "->", 
         RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<oc\>\"", "->", 
         RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mg\>\"", "\[Rule]", 
         RowBox[{"NetChain", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LinearLayer", "[", 
             RowBox[{"{", 
              RowBox[{"physicalLength", ",", 
               RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
            RowBox[{"NormalizationLayer", "[", 
             RowBox[{
              RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
            RowBox[{"ElementwiseLayer", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
            RowBox[{"PaddingLayer", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
              RowBox[{"\"\<Input\>\"", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"physicalLength", ",", 
                 RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
           "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mps\>\"", "\[Rule]", 
         RowBox[{"NetChain", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mpsLayer", "[", 
             RowBox[{
             "physicalLength", ",", "physicalDOF", ",", "meraNumber"}], "]"}],
             ",", 
            RowBox[{"LinearLayer", "[", "hiddenVecDim", "]"}], ",", 
            RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], "}"}], 
          "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<f\>\"", ",", 
           RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
         "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
         "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
         RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"\"\<e\>\"", "\[Rule]", 
          RowBox[{"\"\<mg\>\"", "\[Rule]", "\"\<mps\>\""}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<o\>\"", ",", "\"\<mps\>\""}], "}"}], "\[Rule]", 
         RowBox[{"\"\<oc\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.780413294355871*^9, 3.7804133053463182`*^9}, 
   3.78041350226116*^9, {3.7804141585561523`*^9, 3.780414207760435*^9}, {
   3.780414472225543*^9, 3.780414472882728*^9}, {3.780416945276907*^9, 
   3.780417068365514*^9}, {3.7804170992579765`*^9, 3.7804171349677563`*^9}, {
   3.7804172224731903`*^9, 3.780417242845098*^9}, {3.780417307862273*^9, 
   3.780417308836899*^9}, {3.780417423866166*^9, 3.780417433561408*^9}, {
   3.780424600970156*^9, 3.780424626274087*^9}, {3.780424680104022*^9, 
   3.780424721034953*^9}, {3.780427265310221*^9, 3.7804272867405634`*^9}, {
   3.780445398546423*^9, 3.7804454528737726`*^9}, {3.7804454940508537`*^9, 
   3.7804455086015167`*^9}, {3.780447715783534*^9, 3.7804477185318522`*^9}, {
   3.7804511401133413`*^9, 3.78045114161183*^9}, {3.7804903352672853`*^9, 
   3.780490335271311*^9}, {3.7805323573675346`*^9, 3.7805323675033503`*^9}, 
   3.78053265260079*^9, {3.781021922912334*^9, 3.781021923199278*^9}, 
   3.782566759211369*^9, {3.782566856341118*^9, 3.782566930875346*^9}, {
   3.782567008264348*^9, 3.7825670084605694`*^9}, {3.7825854677066183`*^9, 
   3.7825854751996346`*^9}, {3.7825855386491838`*^9, 
   3.7825855411663675`*^9}, {3.782585615786518*^9, 3.7825856548316436`*^9}, {
   3.782586143228941*^9, 3.7825861537379794`*^9}, 3.783823350997937*^9, {
   3.7838627198267937`*^9, 
   3.7838627220955133`*^9}},ExpressionUUID->"847b19d7-852f-4707-af7f-\
73899783e43c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"longShortTermMemoryMpsLayer", "[", 
   RowBox[{
   "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
    "meraNumber_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"longShortTermMemoryMpsUnitLayer", "[", 
     RowBox[{
     "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
      "meraNumber"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
      RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7825854824004927`*^9, 3.7825854856068735`*^9}, {
  3.7825856297576704`*^9, 3.782585632540065*^9}, {3.782585671408662*^9, 
  3.7825856788344913`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"6be2fa21-180b-41f6-8aaa-9ce8f7b977ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Same", " ", "complexity", " ", "re"}], "-", 
    RowBox[{"settings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"lorenz", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "7"}], ";", 
    RowBox[{"physicalDOF", "=", "2"}], ";", 
    RowBox[{"physicalLength", "=", "8"}], ";", 
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", "4", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"logistic", ":"}], "*)"}], 
   RowBox[{
    RowBox[{"hiddenVecDim", "=", "2"}], ";", 
    RowBox[{"physicalDOF", "=", "2"}], ";", 
    RowBox[{"physicalLength", "=", "8"}], ";", 
    RowBox[{"meraNumbers", "=", 
     RowBox[{"{", "9", "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7825905527215757`*^9, 3.7825906169038887`*^9}, 
   3.7825906614659123`*^9, {3.78259070672871*^9, 3.7825907973538094`*^9}, 
   3.7825931566583157`*^9, 3.7825952698888006`*^9, {3.7828462041290755`*^9, 
   3.782846242924967*^9}, {3.782846285390484*^9, 3.782846299814965*^9}, {
   3.7828463362419157`*^9, 3.7828463513084126`*^9}, 3.7828720343066373`*^9, {
   3.782872385980629*^9, 3.782872445708196*^9}, 3.7828737234564695`*^9, {
   3.7828738216301527`*^9, 3.7828738254584026`*^9}, {3.7828742052746997`*^9, 
   3.7828742117834454`*^9}, {3.782874606977957*^9, 3.7828746097470694`*^9}, {
   3.7830093012102475`*^9, 3.783009335585021*^9}, {3.7830103408050227`*^9, 
   3.7830103779559183`*^9}, {3.783182226211811*^9, 3.7831822345193167`*^9}, {
   3.7831823610482373`*^9, 
   3.7831823737141566`*^9}},ExpressionUUID->"bb498999-008c-4fb4-8b6b-\
b1c247985df1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn2", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          RowBox[{"meraNumbers", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"inputSteps", ",", "hiddenVecDim"}], "}"}]}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"3", "\[Rule]", "4"}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"inputSteps", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7804173132517366`*^9, 3.7804173138842964`*^9}, {
   3.7804174461259093`*^9, 3.7804174576697226`*^9}, {3.7804175436355886`*^9, 
   3.780417604760936*^9}, {3.7804179766286526`*^9, 3.7804179768102226`*^9}, {
   3.7804185737892065`*^9, 3.7804185738889065`*^9}, 3.7804247359017076`*^9, {
   3.780425211244045*^9, 3.7804252114800634`*^9}, {3.780427289294772*^9, 
   3.7804272895592613`*^9}, {3.7804273317213526`*^9, 3.7804273335224524`*^9}, 
   3.780445513496603*^9, {3.7805008569200783`*^9, 3.780500866942067*^9}, 
   3.781021913241068*^9, {3.7810295451754456`*^9, 3.7810295659292226`*^9}, {
   3.782585495288021*^9, 3.782585499472324*^9}, {3.7825856346760225`*^9, 
   3.7825856351983976`*^9}, {3.7825856833721848`*^9, 3.7825857032688293`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"83be4fb8-be34-4c28-9926-74cd0dca81b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark2", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn2", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804273514076476`*^9, 3.780427353193074*^9}, 
   3.7804893947341003`*^9, {3.7804906995311623`*^9, 3.780490706496707*^9}, {
   3.7804908175382195`*^9, 3.7804908265558786`*^9}, {3.780491509104908*^9, 
   3.780491524256935*^9}, 3.780491609174535*^9, {3.7804917899805727`*^9, 
   3.7804917903658724`*^9}, {3.7804929396786747`*^9, 
   3.7804929407514954`*^9}, {3.780493364525167*^9, 3.7804933686663666`*^9}, {
   3.7804938990301743`*^9, 3.7804938991429605`*^9}, {3.7805076141797066`*^9, 
   3.780507615907699*^9}, {3.7805309552368727`*^9, 3.7805309555091743`*^9}, {
   3.78053290657052*^9, 3.780532906668181*^9}, {3.7805334502429237`*^9, 
   3.7805334504233403`*^9}, {3.780533573266997*^9, 3.7805335735082955`*^9}, {
   3.7805340507664404`*^9, 3.780534069520461*^9}, {3.78102919112496*^9, 
   3.7810292162730722`*^9}, {3.78102985289284*^9, 3.7810298773524027`*^9}, {
   3.7825670446417923`*^9, 3.782567051382013*^9}, {3.7825855054560995`*^9, 
   3.782585507492077*^9}, {3.784946590974534*^9, 
   3.784946591149658*^9}},ExpressionUUID->"000cfd88-8498-4970-989f-\
690ec7308608"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn2", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark2", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.781029210787526*^9, 3.781029215038282*^9}, {
  3.782585510775526*^9, 3.7825855130588565`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"f335811b-6dd5-4c63-ae70-4a5600550bb9"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.842708631923609*^9},ExpressionUUID->"46a1a357-22d8-4689-ab37-\
969b735a4570"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{"MERA", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryMeraUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumbers_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mg\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"{", 
             RowBox[{"physicalLength", ",", 
              RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"NormalizationLayer", "[", 
            RowBox[{
             RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"physicalLength", ",", 
                RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
          "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mera\>\"", "\[Rule]", 
        RowBox[{"mera", "[", 
         RowBox[{
         "physicalLength", ",", "physicalDOF", ",", "meraNumbers", ",", 
          "hiddenVecDim"}], "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
        RowBox[{"\"\<e\>\"", "\[Rule]", 
         RowBox[{"\"\<mg\>\"", "\[Rule]", "\"\<mera\>\""}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<mera\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7805326315587144`*^9, 3.780532634126464*^9}, 
   3.7805326780907493`*^9, {3.7805327550823574`*^9, 3.780532804126681*^9}, {
   3.7805333155779095`*^9, 3.7805333161319942`*^9}, 3.7805344970358725`*^9, {
   3.7805345337228565`*^9, 3.780534567357093*^9}, {3.7805346080159774`*^9, 
   3.7805346108589344`*^9}, {3.780534949393841*^9, 3.7805349693775735`*^9}, {
   3.7806210287770596`*^9, 3.78062102961255*^9}, 3.780621088855275*^9, 
   3.780621131428459*^9, {3.780621189023926*^9, 3.7806211895879173`*^9}, {
   3.7806213375006466`*^9, 3.780621355378167*^9}, {3.780621409932565*^9, 
   3.780621456136223*^9}, {3.780621495558813*^9, 3.780621496121933*^9}, {
   3.780621574568483*^9, 3.7806215826510224`*^9}, {3.7806216186092987`*^9, 
   3.7806216299756575`*^9}, {3.7806217868816133`*^9, 3.780621790003289*^9}, {
   3.7806232633911314`*^9, 3.7806232635484843`*^9}, {3.7806233037602897`*^9, 
   3.7806233176246443`*^9}, {3.7806233859692793`*^9, 
   3.7806233888681884`*^9}, {3.78065959161256*^9, 3.78065959278436*^9}, {
   3.7806596361569986`*^9, 3.7806596368416295`*^9}, {3.7806639774152007`*^9, 
   3.780664019846652*^9}, {3.7825855302919292`*^9, 3.782585530681186*^9}, 
   3.782950822965358*^9, {3.8427086337726407`*^9, 
   3.842708634398531*^9}},ExpressionUUID->"7cef44f4-fb7f-4a54-bc25-\
b167e3bc0762"],

Cell[BoxData[
 RowBox[{
  RowBox[{"longShortTermMemoryMeraLayer", "[", 
   RowBox[{
   "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
    "meraNumbers_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"longShortTermMemoryMeraUnitLayer", "[", 
     RowBox[{
     "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
      "meraNumbers"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
      RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"9f4173c5-1cc9-44ef-8c17-9e001e359134"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryMeraLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumbers"}], "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "hiddenVecDim"}], "}"}]}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"3", "\[Rule]", "4"}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7804173132517366`*^9, 3.7804173138842964`*^9}, {
   3.7804174461259093`*^9, 3.7804174576697226`*^9}, {3.7804175436355886`*^9, 
   3.780417604760936*^9}, {3.7804179766286526`*^9, 3.7804179768102226`*^9}, {
   3.7804185710540457`*^9, 3.780418571163679*^9}, {3.780418623554368*^9, 
   3.780418624829462*^9}, {3.780420487606414*^9, 3.7804204877223516`*^9}, 
   3.7804247992670965`*^9, {3.780424920237071*^9, 3.780424921171367*^9}, {
   3.780424966233407*^9, 3.780424966707038*^9}, 3.7804261433513827`*^9, 
   3.7804455742921267`*^9, {3.780578500861972*^9, 3.780578507475133*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5b4994a8-9f76-4a30-9480-fc7c080bcd64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LearningRateMultipliers", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "\"\<Net\>\"", ",", "\"\<mera\>\"", ",", "1", ",", "i"}], 
          "}"}], "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"learningRateMultipliers", "=", "0.5"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"Length", "@", "meraNumbers"}], "+", "1"}]}], "}"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804251457831163`*^9, 3.780425146031452*^9}, {
   3.780425203093649*^9, 3.780425203497569*^9}, {3.780425351438678*^9, 
   3.780425351935858*^9}, {3.7804254101191006`*^9, 3.7804254106018124`*^9}, {
   3.780427121302146*^9, 3.780427121485821*^9}, {3.7804271535215073`*^9, 
   3.7804271541393366`*^9}, {3.7804275285263777`*^9, 3.780427528707263*^9}, 
   3.78042757909974*^9, {3.780427683774827*^9, 3.780427686428179*^9}, {
   3.7804277724456615`*^9, 3.7804277731075335`*^9}, {3.7804280681371365`*^9, 
   3.780428082702261*^9}, {3.7804422537287583`*^9, 3.7804422591345673`*^9}, {
   3.7804423491760654`*^9, 3.780442351228731*^9}, {3.780443873352437*^9, 
   3.7804438746349945`*^9}, {3.7804459168071647`*^9, 3.780445935556423*^9}, {
   3.780446531673748*^9, 3.780446532756975*^9}, {3.7804465922783327`*^9, 
   3.7804465931583986`*^9}, {3.7804468639762063`*^9, 
   3.7804468673113537`*^9}, {3.780448459730441*^9, 3.7804484634016724`*^9}, {
   3.7804516204457626`*^9, 3.78045162135226*^9}, {3.780453020380103*^9, 
   3.780453058660821*^9}, {3.780453550238628*^9, 3.780453560387014*^9}, {
   3.780453639011162*^9, 3.7804536565626183`*^9}, {3.7804928879423428`*^9, 
   3.7804928905923853`*^9}, {3.7804929229647856`*^9, 3.780492923177938*^9}, {
   3.7804939288466125`*^9, 3.7804939449142914`*^9}, 3.780500823400428*^9, {
   3.780501407847386*^9, 3.780501418418017*^9}, {3.7805016699321213`*^9, 
   3.7805016700701904`*^9}, {3.7805018635993156`*^9, 
   3.7805018637152615`*^9}, {3.780508569822581*^9, 3.7805085763371105`*^9}, {
   3.7805086101206827`*^9, 3.78050861033994*^9}, {3.7805094443501773`*^9, 
   3.7805094445221596`*^9}, {3.7805094756413755`*^9, 3.780509475818198*^9}, {
   3.780510582701596*^9, 3.780510583391487*^9}, {3.7805142864136987`*^9, 
   3.780514286760807*^9}, {3.780515314094839*^9, 3.780515315227845*^9}, {
   3.780527315957329*^9, 3.7805273164609485`*^9}, {3.780534698307191*^9, 
   3.7805346984174433`*^9}, {3.780535529324477*^9, 3.7805355565408087`*^9}, {
   3.7805358312749357`*^9, 3.7805358417798185`*^9}, {3.780536085174992*^9, 
   3.780536127484544*^9}, 3.780542182756344*^9, {3.7805422428555765`*^9, 
   3.780542270523621*^9}, {3.7805717670488415`*^9, 3.7805717745975103`*^9}, {
   3.7805727185908847`*^9, 3.780572739283765*^9}, {3.780573449070488*^9, 
   3.780573493150141*^9}, {3.780573524620677*^9, 3.7805735303529205`*^9}, {
   3.7805753978789096`*^9, 3.7805754020776873`*^9}, {3.780575589474058*^9, 
   3.780575591224747*^9}, {3.7805757878301616`*^9, 3.7805757879681435`*^9}, {
   3.7805761725811777`*^9, 3.780576181513686*^9}, 3.780576811352572*^9, {
   3.7805770201616535`*^9, 3.7805770227988424`*^9}, {3.7805772026592865`*^9, 
   3.78057720936343*^9}, 3.780578069675277*^9, {3.7805781830434527`*^9, 
   3.780578186804682*^9}, {3.7805783626831474`*^9, 3.7805783788043003`*^9}, {
   3.780578552034584*^9, 3.780578552149544*^9}, {3.7805939740729904`*^9, 
   3.7805939763510933`*^9}, {3.7805958297534447`*^9, 3.780595830077115*^9}, 
   3.780596557342059*^9, {3.780597390011056*^9, 3.7805973901307354`*^9}, 
   3.780600857542925*^9, {3.7806008965017853`*^9, 3.780600921679203*^9}, {
   3.7806017913793573`*^9, 3.780601791713497*^9}, {3.780601913677452*^9, 
   3.780601914756578*^9}, {3.780602084487878*^9, 3.7806020909745417`*^9}, {
   3.7806021850620823`*^9, 3.7806021874028215`*^9}, 3.7806027684103785`*^9, 
   3.780604790698841*^9, 3.780605232108374*^9, {3.7806229306653323`*^9, 
   3.7806229308155017`*^9}, {3.7806602449203405`*^9, 3.780660269902335*^9}, {
   3.780660337386682*^9, 3.7806603423643885`*^9}, {3.78066112126309*^9, 
   3.7806611225299635`*^9}, {3.7806613014898148`*^9, 3.780661309709567*^9}, {
   3.7806615012465067`*^9, 3.7806615022331*^9}, {3.7806617757732134`*^9, 
   3.7806617786183677`*^9}, {3.7806618905911207`*^9, 
   3.7806618907320976`*^9}, {3.7806625626647882`*^9, 3.780662565171033*^9}, {
   3.7806633464833174`*^9, 3.7806633468519936`*^9}, {3.7806638247316523`*^9, 
   3.7806638255664268`*^9}, {3.7806639305302467`*^9, 
   3.7806639315190473`*^9}, {3.7806654838662844`*^9, 3.780665484029739*^9}, {
   3.780665829113824*^9, 3.7806658302056336`*^9}, {3.780677254852899*^9, 
   3.780677255171609*^9}, {3.7806773834820623`*^9, 3.780677411265581*^9}, 
   3.780678912804103*^9, {3.780680284192199*^9, 3.780680284517541*^9}, 
   3.7806809361165247`*^9, 3.780683702251604*^9, {3.7806858613514724`*^9, 
   3.780685865688034*^9}, 3.780690661238715*^9, {3.780690898072857*^9, 
   3.7806909093030033`*^9}, {3.7807067546789083`*^9, 3.780706758489109*^9}, {
   3.7807451805783205`*^9, 3.7807451828865905`*^9}, {3.7807637783739586`*^9, 
   3.780763778467944*^9}, 3.780797998478874*^9, {3.780798031121086*^9, 
   3.780798031368472*^9}, {3.7807981012316685`*^9, 3.780798101464279*^9}, {
   3.7807981321937313`*^9, 3.7807981325488024`*^9}, 3.7808819647291813`*^9, {
   3.780882064707729*^9, 3.7808820661763797`*^9}, 3.781022345862075*^9, {
   3.7810223825879064`*^9, 3.7810223828556376`*^9}, {3.781024939097582*^9, 
   3.781024943526224*^9}, {3.781025877224036*^9, 3.781025888447236*^9}, {
   3.781027713914467*^9, 3.7810277304231653`*^9}, {3.781028029424652*^9, 
   3.7810280304715023`*^9}, {3.781030623148692*^9, 3.78103062510245*^9}, {
   3.781805626237545*^9, 3.781805641589557*^9}, {3.7818113417913127`*^9, 
   3.781811342274887*^9}, {3.781820330689641*^9, 3.7818203390786686`*^9}, {
   3.781820573532629*^9, 3.7818205831327105`*^9}, {3.7820057685264344`*^9, 
   3.7820057719642525`*^9}, {3.782005805157473*^9, 3.7820058084238534`*^9}, 
   3.7832184957164307`*^9, {3.7836516036937356`*^9, 3.7836516120080175`*^9}, {
   3.783689772519551*^9, 3.7836898188329473`*^9}, 3.7838061991886387`*^9, {
   3.784165528791295*^9, 3.784165528885971*^9}, {3.784946508254901*^9, 
   3.784946514998931*^9}, 3.785171553869345*^9, 3.785680135219801*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"dfda4340-ca95-43c3-9086-46c0562dcaa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780418832993057*^9, 3.7804188556977067`*^9}, {
  3.7830125936404877`*^9, 3.783012596259305*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"a8f1ede6-76fd-4367-b0ca-247b369410af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnnGood", "=", "rnn"}], ";"}]], "Input",
 CellChangeTimes->{{3.7804220820632734`*^9, 3.7804220862576056`*^9}, 
   3.7804455941927633`*^9, 3.780488170404359*^9, {3.7805290766031265`*^9, 
   3.780529076823745*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"286ee3cd-a8cb-4921-a4b0-41af82142d63"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7472486563148904`*^9, 3.7472486571249285`*^9}, {
  3.842708648858299*^9, 
  3.842708649595812*^9}},ExpressionUUID->"7890ef9b-a4e0-4975-b50a-\
48b124a5935f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Test", " ", "and", " ", 
   RowBox[{"comparison", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.842708700770461*^9, 
  3.842708706494192*^9}},ExpressionUUID->"b6a2d9ee-129a-40c3-80d3-\
db6fd387d554"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.842708699267015*^9},ExpressionUUID->"e6316f62-74dc-4a0d-8ad3-\
0d7ff1409b3a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataSamples", "=", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"200", ";;", "260"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rnn0", "/@", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rnn", "/@", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rnnGood", "/@", 
         RowBox[{"testDataSamples", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"meraCone", "/@", 
         RowBox[{"testDataSamples", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7428300884771223`*^9, 3.74283008965408*^9}, {
   3.7433572263515654`*^9, 3.743357232330047*^9}, {3.7443848932608423`*^9, 
   3.74438489837434*^9}, {3.746999107803512*^9, 3.746999126317477*^9}, {
   3.746999158787953*^9, 3.746999273610677*^9}, {3.747000166833166*^9, 
   3.7470001746766663`*^9}, {3.747045200850813*^9, 3.7470452028514395`*^9}, {
   3.7472586350925913`*^9, 3.7472586370614667`*^9}, {3.7472608170071273`*^9, 
   3.747260819709656*^9}, {3.7472699680226316`*^9, 3.7472699752440567`*^9}, {
   3.747270019324958*^9, 3.747270022606331*^9}, {3.74947461935322*^9, 
   3.7494746212739058`*^9}, {3.749477955216999*^9, 3.7494779613705316`*^9}, {
   3.757618150153696*^9, 3.7576181555195074`*^9}, {3.7804091632809772`*^9, 
   3.780409163551667*^9}, {3.780409310215252*^9, 3.780409310495195*^9}, {
   3.7804097082104874`*^9, 3.7804097099340143`*^9}, {3.7804212904956136`*^9, 
   3.780421290777774*^9}, {3.7804437775524592`*^9, 3.780443783880851*^9}, 
   3.7804450909055605`*^9, {3.7804475108800173`*^9, 3.7804475149549108`*^9}, {
   3.7804481726335335`*^9, 3.780448215419916*^9}, {3.7804490206340227`*^9, 
   3.780449020755685*^9}, {3.7804491305166006`*^9, 3.7804491758949537`*^9}, {
   3.7804909642835317`*^9, 3.7804909665951123`*^9}, {3.7804910346526127`*^9, 
   3.780491044587137*^9}, {3.7805026078947363`*^9, 3.7805026220215626`*^9}, {
   3.7805080579814987`*^9, 3.780508058092639*^9}, {3.780508088286552*^9, 
   3.780508103567936*^9}, {3.780508153613721*^9, 3.7805081537127285`*^9}, {
   3.7805122520121756`*^9, 3.7805122521717577`*^9}, {3.780512300177803*^9, 
   3.7805123013211737`*^9}, {3.7805148054839487`*^9, 3.780514808456045*^9}, {
   3.7807645823492985`*^9, 3.7807646421437006`*^9}, {3.7807647698204527`*^9, 
   3.7807647700133133`*^9}, {3.7807766882679124`*^9, 3.780776734461067*^9}, {
   3.7809154776685*^9, 3.780915478371462*^9}, {3.7818194870924606`*^9, 
   3.781819488232834*^9}, {3.781820804478859*^9, 3.7818208514565334`*^9}, 
   3.783289208837235*^9, {3.783290335935872*^9, 3.783290336366623*^9}, {
   3.783625651120913*^9, 3.783625652255864*^9}, {3.783811817256467*^9, 
   3.783811820903463*^9}, {3.783817139347107*^9, 3.7838171548813763`*^9}, {
   3.783817185067377*^9, 3.783817217265415*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"744c8641-dce6-4360-b049-ad854c21df4a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[1]], 
        PointBox[CompressedData["
1:eJw1kw1IU1EUx1+zbGjgXGZDy9Q0V/QxTW1quqNTN7+XmiK5mqt02CqyZRQi
ozAqKZ6wSitJk0rx22SmiRmGumlNF9ZCaZEfxBIZGIa1MmPnPng8fvfHOf9z
73vPR342/SSDoqjI1fv/035ZBcW6y3S51iTABVBleoUo86aQmUAV8RmCvlPI
LNA4RjzXKD8gu0Gbg0jmP/ECmQMljEL5SJ0ReQvw3AMW3CSPX9nZG85ccLQe
rSH9feHpiea+KadB9H7Aa5HaxEF96HeAQniYKYlvR8+FNscKs/PfWuRdkHgz
18VVT/rths9cuiezleTvBT+ulyJDo0PmgXW6a+0tA5k3EKJUi9YB7wnkIFA+
8TxmyPiIvB9slwbrcktI/2DYILu2cL1pFPNDQHuRNZCu+4Q+FJZCnzUr6Dfo
D4DS9qtZryL9+MBWNLRmH5lEDoPVJWXVCo0cDlwLhz1sHkOOAGvme//SopfI
B4FxO6fVo5zMEwkt90LaikWkfxSAryRvjVMj5guAW7O+wKeM5AEk3Kme2eM5
ZvdqAJPntJHaTOaPhvm6UYVUO2RndTRYGVUyxb4e9DFQP5t1rtdhAOtjoCPJ
OGe8T/KFMLY8abtB5lMLoXLrF7Ylogt9LLgE0GVD7iQ/FujfsvDqyHH0cVDP
ufLg0Sy+H3Uc0G9p3bjrKPp4eCgVNIx3G7A+HphuwspFFTIlAr1SHpy9jOen
FgF/zmzNWyHziYEpye7UWvB7UIshvyCmoCsN90MlwF22KYsThd+3OgFM+Yri
n9vbsT4RwnM3bQtLG8L8ROg9lNJoZrxGnwT9w93Hd5bWYn0SzPc7WzYacL9U
8ur/kj8y8/0d+mRgrfNo/PZHj/UpAPWs0MDOq+hToOO89OuSmLyfVOD/kJ9u
8iLnlwo8qT6nsGJK8A9zWhzg
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[1]], 
        PointBox[CompressedData["
1:eJw10k9I02EYB/CfQSgdXKAHqR2mqaiIlWWblW3LzT+ZHdpQCfEQ8xAdog7i
KX6DpEPSITw60xAG6sF/k4lgiX+Q1nIuzH8LlopoXnZRvKW/7/t9Br+Nz77v
8z7P+265z189bb+gaVrV+WN8qlfKbrx3VGza+YXDeN40bdEZhrXRP+/py4Z1
n/k3nY08o2GCzoGPvXHaDGf+6/6qbMH+WV3bzPOQ5wcXmOfDifkZ5oVw4O0w
8yLYMRmgS+DUicxbivnevZD+ZfDA/nf6Bta37Mi8N+HXfb/ocqwPu9bpW5jX
5E3Qt7He3Rph/wrD3w5X5P7uIF8LLTK3Yr+jkNyXDU56ZH2lOs9QN30X9qTF
6HvwQWKKvg/bnsk8VZhvOirzPlB5f5D97eiXuiL37YB3ildVritv+DaYO1H/
5e+ysq6cypX+D9Gv/mie9bDWsy79q3Efex/5e+iw7h+eZe6CXwZirFfutcp5
3djPFebvoyvvWn4yr4HXBmV+5f+mFZ63Fv395lXW16r9u+R8dVif1SznU77e
Ocf6evjTNZ5HV+79HGb9I3j64hL7KxeMzDFvgMcvyfzKZVfj3P8x5kmPRJnD
2ljyB+sb4dO9Huawo6lN/i9PUO8ckvuDtQ/xLfsZLUy4hw==
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[1]], 
        PointBox[CompressedData["
1:eJw10k9Ik2EcB/B3XTZMpCRBJXAu0cgWZn9sW2tvrqlt00EXvTlyHTrUgm6e
ng7BujioSx0G204hBC6C/ANu9taGGm0JW4sWmDt5iy6Fl/T5vt9nsPfls+/z
+/2eZ+/bezd+594xTdO8R195Nz+/ffKaeFP38QddXqyzDdoGd56cok9Ii/1H
NfqUdMFiLNOd8M/XO/Rp6bR3KZM3bYeHH6v+Dml7cPkT8z7U273rzPth/1qO
+VnUO/9k6XPIgyXV7zzyng01/4L0bltzkx6S1gO2Ffoi6ouhKj2M8zYi3+hL
WN94ovpfRr+tZ585/wrs+fed+VWc59fYR+Yj0tH8gup3Df0Scz9oF+YfWF7Q
bsw/s1ehPVgf9q/R13G+bFLtxwu/fKj634BnWhY534f91ISap6O/q6ti5gK2
fxlU+7+J+mK8ZFrABUd0lfkozpuvfmA9rL9Nqfl+rHc/5f4ELN5Nv2d+C/XT
f8ush/V9z1fmAbhwnM9HwNGmsc18DPX/H6h6ON0ap7VxnKdlgP0ELJ471fs9
gX7JMt8HAWvtHQbrb8P3Y3y/hemsI8f6IOa9spQ4Hy5YAxvMQ+gfXc+wHtZj
Bv9vLYz9pwbKzGGtvrjF+knY2J1nDuvduno+U6gft6rnB4vIXMN3CHW3wO4=

         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[1]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 61.}, {-0.28290891647338867`, 0.4498331689848426}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.780508081779887*^9, 3.7805081543385324`*^9, 3.78051220448368*^9, 
   3.780512245732458*^9, 3.7805122821931753`*^9, 3.7805147067951193`*^9, 
   3.7805148059666567`*^9, 3.780514837330819*^9, 3.7805273804568844`*^9, 
   3.7805312802743173`*^9, 3.7805321147433805`*^9, 3.7805341906956997`*^9, 
   3.780606535112013*^9, 3.780615345637692*^9, 3.780624106384904*^9, 
   3.7806259337833557`*^9, 3.78065880540647*^9, 3.7806605116991515`*^9, 
   3.7806617431762543`*^9, 3.780661998409175*^9, 3.7806622855493417`*^9, 
   3.7806629783613367`*^9, 3.7806632986032352`*^9, 3.7806634870764666`*^9, 
   3.7806645050265985`*^9, 3.7806649171988893`*^9, 3.7806650270889378`*^9, 
   3.7806657309993596`*^9, 3.780675157766445*^9, 3.78067602588933*^9, 
   3.7806813261345325`*^9, 3.780681772843689*^9, 3.780681880626878*^9, 
   3.7806831924482603`*^9, 3.7806834094256625`*^9, 3.7806858185131907`*^9, 
   3.780686073267209*^9, 3.78068639539914*^9, 3.7806866375638857`*^9, 
   3.7806872203881683`*^9, 3.7806877367948384`*^9, 3.780688686462711*^9, 
   3.7806893454621363`*^9, 3.780691107495985*^9, 3.7807402022926044`*^9, 
   3.780751759066472*^9, 3.780763204962099*^9, 3.7807635598255644`*^9, 
   3.780764092366573*^9, 3.780764530272296*^9, 3.780764606311199*^9, 
   3.7807646587547913`*^9, 3.7807766670643873`*^9, {3.7807767279678354`*^9, 
   3.780776752890698*^9}, 3.780828371744666*^9, 3.7809154407228575`*^9, 
   3.7809154995054827`*^9, 3.7809158293647385`*^9, 3.780916497712556*^9, 
   3.7809166926080465`*^9, 3.7810246239630604`*^9, 3.781027256600649*^9, 
   3.781027398334038*^9, 3.7810285390118628`*^9, 3.7810313753421354`*^9, 
   3.7818051533700533`*^9, 3.7818118627305045`*^9, 3.7818122743273664`*^9, 
   3.7818196180958805`*^9, 3.781820623031584*^9, 3.7818208084746695`*^9, 
   3.781820838757277*^9, 3.781820869626298*^9, 3.781821343854446*^9, 
   3.7818237649501348`*^9, 3.7818246309989295`*^9, 3.7818725446778984`*^9, 
   3.781872614713702*^9, 3.7818738991966066`*^9, 3.781874065927801*^9, 
   3.7818771145451336`*^9, 3.7818788371207657`*^9, 3.781883459945854*^9, 
   3.7818841391120324`*^9, 3.781885266203284*^9, 3.7818863873101425`*^9, 
   3.781888560960946*^9, 3.781892494965167*^9, 3.781893012360749*^9, 
   3.781894020911907*^9, 3.781894388031208*^9, 3.7819000046774416`*^9, 
   3.7819723686708193`*^9, 3.7820423344857073`*^9, 3.7827490097626486`*^9, 
   3.7830269418802447`*^9, 3.7831895287637153`*^9, 3.783190497785849*^9, 
   3.783191873045822*^9, 3.7831937708154774`*^9, 3.7831952190005417`*^9, 
   3.783203093324189*^9, {3.783280218300015*^9, 3.7832802318190947`*^9}, 
   3.783281434730484*^9, 3.7832829115251837`*^9, 3.783283069468389*^9, 
   3.783284201734367*^9, 3.783285454945586*^9, 3.783290238423407*^9, {
   3.7832903277609463`*^9, 3.783290337912609*^9}, 3.78329230921208*^9, 
   3.7833944647039967`*^9, 3.7834657285540047`*^9, 3.783468666942972*^9, 
   3.783472827620826*^9, 3.783476472989812*^9, 3.7835113950955*^9, 
   3.783565239992857*^9, 3.783599537000742*^9, 3.783600164566571*^9, 
   3.7836008496882772`*^9, 3.78360874120852*^9, {3.783625643835704*^9, 
   3.783625655372983*^9}, 3.783652752624673*^9, {3.783692100802902*^9, 
   3.7836921157449627`*^9}, 3.783692562297387*^9, 3.7837718650280447`*^9, 
   3.783797385036855*^9, 3.78379788546697*^9, {3.783809749669073*^9, 
   3.783809765969473*^9}, 3.78380995941536*^9, 3.783810766291988*^9, 
   3.7838115925514307`*^9, 3.783813126297675*^9, 3.783817081200186*^9, {
   3.7838171412488947`*^9, 3.783817155618002*^9}, {3.783817187006208*^9, 
   3.783817218178904*^9}, 3.7838189365466022`*^9, 3.7838205363640623`*^9, 
   3.783820576545801*^9, 3.7838206900649557`*^9, {3.78382190544258*^9, 
   3.7838219170839443`*^9}, 3.7838219477309103`*^9, {3.78382218370739*^9, 
   3.783822208140459*^9}, 3.783822394465225*^9, 3.783822696014213*^9, 
   3.783822792116761*^9, 3.78382306913669*^9, 3.783823281316636*^9, 
   3.783823632391824*^9, 3.7838627383855658`*^9, 3.783863574269486*^9, 
   3.7838644854393253`*^9, 3.783864569876856*^9, 3.7839813931914663`*^9, 
   3.783982034959791*^9, 3.783982328869144*^9, 3.784148945629313*^9, 
   3.784149036028812*^9, 3.784149080075552*^9, 3.784149223564515*^9, 
   3.78415421943327*^9, 3.784154937295784*^9, 3.784161087245179*^9, 
   3.784161798473547*^9, 3.784164225084841*^9, 3.7841650666286383`*^9, 
   3.784314959122437*^9, 3.7843426597934847`*^9, 3.784344602876165*^9, 
   3.784346295909424*^9, 3.784348958156007*^9, 3.784920368788671*^9, 
   3.784922362494295*^9, 3.784922972010819*^9, 3.784924167362417*^9, 
   3.7849255765865383`*^9, 3.784927328475193*^9, 3.784928454679203*^9, 
   3.784934189877178*^9, 3.7850089127328653`*^9, 3.785172316640649*^9, 
   3.78517239058932*^9, 3.785180766402348*^9, 3.7851839312832994`*^9, 
   3.785680213299467*^9, 3.7856818705468273`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"85cc0513-9a70-4a6a-be34-1854bb50b98a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataSamples", "=", 
   RowBox[{"testData", "[", 
    RowBox[{"[", ";;", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"x", ",", 
           RowBox[{"Subtract", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "#", "]"}], ",", "x"}], "]"}]}], "]"}], "/@",
          "#"}], ")"}], "&"}], "@", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rnn0Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rnn0Predict", "=", 
        RowBox[{"ParallelMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rnn0", "[", 
            RowBox[{"#", ",", 
             RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"testDataSamples", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}]}], ")"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rnnErr", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rnnPredict", "=", 
        RowBox[{"ParallelMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rnn", "[", 
            RowBox[{"#", ",", 
             RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"testDataSamples", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}]}], ")"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.742832059292176*^9, 3.7428321267930546`*^9}, {
   3.743008826261402*^9, 3.7430088296128097`*^9}, {3.7430094495549855`*^9, 
   3.7430094576647916`*^9}, {3.7432712712668495`*^9, 
   3.7432712989471564`*^9}, {3.74697380882503*^9, 3.7469738375104055`*^9}, 
   3.7469983841657796`*^9, 3.7469985560602083`*^9, {3.747002723186751*^9, 
   3.7470027358940887`*^9}, 3.747011841942584*^9, {3.747054693713693*^9, 
   3.747054742749811*^9}, {3.747054840829033*^9, 3.7470548944495277`*^9}, {
   3.7576181783549566`*^9, 3.757618184441922*^9}, {3.7804213069664373`*^9, 
   3.7804213075363398`*^9}, {3.7804229191716256`*^9, 
   3.7804229293245373`*^9}, {3.7804230851120715`*^9, 3.780423085805438*^9}, 
   3.7804235849682603`*^9, 3.7804240041229553`*^9, {3.7804244597679124`*^9, 
   3.7804244691520386`*^9}, {3.7804482432783127`*^9, 3.780448322382769*^9}, {
   3.780449079279601*^9, 3.7804491087054825`*^9}, {3.780481343678317*^9, 
   3.7804813438588705`*^9}, {3.780491132626562*^9, 3.7804911896221685`*^9}, {
   3.780491251128665*^9, 3.780491251294057*^9}, {3.7805026976715546`*^9, 
   3.780502701022111*^9}, {3.7805038938679457`*^9, 3.780503949159858*^9}, 
   3.7805048757573285`*^9, {3.780531481234687*^9, 3.780531481536728*^9}, 
   3.780624189029458*^9, {3.7806649285993433`*^9, 3.780664928869653*^9}, {
   3.780686649635618*^9, 3.7806866498689933`*^9}, {3.780688700391389*^9, 
   3.7806887019863944`*^9}, {3.7807524332175856`*^9, 3.780752433619773*^9}, 
   3.7809168798235397`*^9, {3.78181919548625*^9, 3.781819195824751*^9}, {
   3.781819461515336*^9, 3.7818194784056473`*^9}, 3.7818215050459695`*^9, {
   3.781821976689081*^9, 3.781821984257045*^9}, {3.781874114081623*^9, 
   3.7818741158693633`*^9}, {3.781878765273875*^9, 3.7818787769329834`*^9}, {
   3.781879068780299*^9, 3.7818790722273564`*^9}, {3.781888275545754*^9, 
   3.781888292690154*^9}, {3.78189997931756*^9, 3.781899981722642*^9}, {
   3.781963219344328*^9, 3.7819632196098895`*^9}, {3.781991866847372*^9, 
   3.781991884507857*^9}, {3.7820059797485867`*^9, 3.78200598190491*^9}, {
   3.782767093034711*^9, 3.7827671087590885`*^9}, {3.782774662171137*^9, 
   3.782774662975456*^9}, {3.7828402416203365`*^9, 3.7828402744277763`*^9}, {
   3.783817167098508*^9, 3.783817258898217*^9}, {3.783817318483542*^9, 
   3.7838173186574802`*^9}, {3.783822194291051*^9, 3.78382220108117*^9}, {
   3.783822406435102*^9, 3.783822407793828*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"00eb7707-af28-4c03-9817-9e827839b0eb"],

Cell[BoxData["0.05259722588876529`"], "Output",
 CellChangeTimes->{
  3.7428320786981044`*^9, {3.7428321112266865`*^9, 3.7428321573201013`*^9}, 
   3.7428323261443157`*^9, {3.7428328240541463`*^9, 3.7428328486945677`*^9}, 
   3.742833517086095*^9, 3.7428336572274623`*^9, 3.742833702248206*^9, 
   3.7428337768560915`*^9, {3.7428338112190075`*^9, 3.74283382745376*^9}, 
   3.7428347184435015`*^9, {3.7428347663050747`*^9, 3.7428347711287966`*^9}, {
   3.742834809067525*^9, 3.742834838261005*^9}, {3.7428348878860993`*^9, 
   3.742834917785855*^9}, {3.742840586612617*^9, 3.7428405962333*^9}, 
   3.7428407006736445`*^9, {3.7428407847308455`*^9, 3.742840790201316*^9}, 
   3.742840877797854*^9, {3.742840909017849*^9, 3.742840937880236*^9}, {
   3.7428429604596853`*^9, 3.742842978930967*^9}, 3.7428430218804054`*^9, 
   3.742843056830038*^9, {3.7428430885499177`*^9, 3.742843123653192*^9}, {
   3.7428542219580355`*^9, 3.742854248727624*^9}, {3.7428542938174963`*^9, 
   3.742854488435213*^9}, {3.742854541056284*^9, 3.7428545692828894`*^9}, 
   3.7428546242171774`*^9, {3.7428548598297977`*^9, 3.7428548798491306`*^9}, 
   3.7428553574154043`*^9, 3.7428590675379653`*^9, 3.742889616011071*^9, 
   3.742911470116192*^9, 3.742912336329378*^9, 3.7429136407731676`*^9, 
   3.742913898120455*^9, 3.7429139283176622`*^9, 3.742914008480151*^9, 
   3.7429141326238155`*^9, {3.742914165266943*^9, 3.7429142405658646`*^9}, 
   3.743007466478134*^9, 3.743007505418644*^9, {3.7430075792498646`*^9, 
   3.743007607360137*^9}, 3.743007723092636*^9, 3.7430077721134343`*^9, 
   3.743007888394087*^9, 3.7430080179282765`*^9, 3.7430080517084994`*^9, 
   3.743008133820435*^9, 3.7430083208439665`*^9, 3.7430084914692783`*^9, 
   3.7430085613002424`*^9, 3.743008627901597*^9, 3.743008671172493*^9, 
   3.743008703911129*^9, 3.7430087404352264`*^9, {3.7430088072265043`*^9, 
   3.743008830083434*^9}, 3.743008958448408*^9, 3.743009039752055*^9, 
   3.7430091109322524`*^9, 3.7430091494025927`*^9, {3.743009430211282*^9, 
   3.7430094867607813`*^9}, 3.7430095226411533`*^9, 3.7430096348252654`*^9, 
   3.7430096650751443`*^9, 3.7430097305635996`*^9, 3.7430100165731077`*^9, 
   3.7430100889334197`*^9, 3.7430102105330777`*^9, 3.743271259083024*^9, 
   3.743271299410102*^9, 3.743356616962653*^9, 3.743357207843689*^9, 
   3.7433577196232486`*^9, 3.7433597801026163`*^9, 3.743416460473564*^9, 
   3.7469646824469185`*^9, 3.7469649863133125`*^9, {3.74697379574397*^9, 
   3.746973837946822*^9}, 3.746977868610015*^9, 3.7469974133113604`*^9, 
   3.7469983776035757`*^9, 3.746998552730006*^9, 3.747000185896922*^9, 
   3.747000287139346*^9, 3.747000376424178*^9, {3.7470004637710457`*^9, 
   3.7470004660847692`*^9}, 3.7470006481560664`*^9, 3.7470021673781767`*^9, 
   3.747002211028577*^9, 3.7470023835448694`*^9, 3.7470024466235857`*^9, {
   3.7470027100486555`*^9, 3.7470027367899475`*^9}, 3.7470031642691984`*^9, 
   3.7470034429844656`*^9, 3.7470035838292913`*^9, 3.747004381086877*^9, 
   3.747005381886915*^9, 3.747011842677211*^9, 3.7470410699710236`*^9, {
   3.747054670912089*^9, 3.7470546741141977`*^9}, {3.7470547152323685`*^9, 
   3.747054735639282*^9}, 3.7470548974203005`*^9, 3.747055055371196*^9, 
   3.7470552009834566`*^9, 3.7470553245405664`*^9, 3.747055519511251*^9, 
   3.747129009908922*^9, 3.747129139893778*^9, 3.747131764853055*^9, 
   3.7471388541180277`*^9, 3.7471389293787127`*^9, 3.747139377846814*^9, 
   3.7471398073423257`*^9, 3.747139925652749*^9, 3.747241248008071*^9, 
   3.7472414112618756`*^9, 3.7472416039197426`*^9, 3.7472436247746305`*^9, 
   3.747246375641159*^9, 3.7472467676701717`*^9, 3.7472471764918523`*^9, 
   3.7472478991898084`*^9, 3.747248409755107*^9, 3.7472505226018686`*^9, 
   3.7472518467738295`*^9, 3.747252273608699*^9, 3.7472549547567053`*^9, 
   3.7472586551930723`*^9, 3.7472589515996604`*^9, 3.7472632293132877`*^9, 
   3.747263927519483*^9, 3.7472648182906656`*^9, 3.7472657122375154`*^9, 
   3.747267553675435*^9, 3.74726982796452*^9, 3.747298527454444*^9, 
   3.7473173709098835`*^9, 3.747388057060449*^9, 3.748886751065493*^9, 
   3.7488868591361046`*^9, 3.7488869707572174`*^9, 3.748887052299697*^9, 
   3.7488873453555794`*^9, 3.748888301723154*^9, 3.7488885205075235`*^9, 
   3.7494789525161657`*^9, 3.7494792227655973`*^9, {3.7576181702760515`*^9, 
   3.757618184871952*^9}, 3.7576185127646484`*^9, 3.771292605517477*^9, 
   3.7713447059603443`*^9, 3.771432964431427*^9, 3.7714398688417273`*^9, 
   3.771445971165625*^9, 3.7714537524406023`*^9, 3.771606345262189*^9, 
   3.7716691113516293`*^9, 3.77168503735707*^9, 3.771694212263785*^9, 
   3.7803974022310057`*^9, 3.780399908631223*^9, 3.780408963695055*^9, 
   3.7804213110871882`*^9, 3.7804221036123033`*^9, 3.780422933624851*^9, 
   3.7804230557440004`*^9, 3.780423089738576*^9, 3.7804236000976906`*^9, 
   3.7804240127928534`*^9, 3.7804244784028425`*^9, {3.780448294925724*^9, 
   3.7804483249633727`*^9}, {3.7804490837409086`*^9, 3.780449109271162*^9}, 
   3.7804813517058525`*^9, {3.7804911642862844`*^9, 3.780491220162655*^9}, 
   3.7804912516431575`*^9, 3.7804919660253077`*^9, 3.7804921943392115`*^9, 
   3.780502701386387*^9, 3.7805038464341526`*^9, {3.7805039077220526`*^9, 
   3.780503930960761*^9}, 3.780531482716979*^9, 3.7805321253619223`*^9, 
   3.7805342135002785`*^9, 3.7806099603425183`*^9, 3.780610161173131*^9, 
   3.7806151085171127`*^9, 3.7806171345088778`*^9, 3.7806241225929127`*^9, 
   3.7806241958224726`*^9, 3.7806253692869964`*^9, 3.7806259481553183`*^9, 
   3.780658817094096*^9, 3.7806593925773306`*^9, 3.780659933024104*^9, 
   3.7806605134740686`*^9, 3.780661449150361*^9, 3.780661723113056*^9, 
   3.780662034142479*^9, 3.780662294228222*^9, 3.7806629853458853`*^9, 
   3.780663302823126*^9, 3.7806634958476562`*^9, 3.7806645146113815`*^9, 
   3.7806649294681773`*^9, 3.7806657610477233`*^9, 3.780675157882308*^9, 
   3.7806756809639416`*^9, 3.7806760311177654`*^9, 3.7806813338141365`*^9, 
   3.7806818981016183`*^9, 3.780681931878346*^9, 3.780683426928124*^9, 
   3.7806860867149377`*^9, 3.7806864062710524`*^9, {3.7806866447885747`*^9, 
   3.7806866531861277`*^9}, 3.780687236316719*^9, 3.780687745922633*^9, 
   3.7806887026837034`*^9, 3.7806893456210012`*^9, 3.780691033361664*^9, 
   3.780740261900279*^9, 3.7807517592044716`*^9, 3.780751931669099*^9, 
   3.7807520766572075`*^9, 3.7807521546620955`*^9, 3.7807522711285515`*^9, 
   3.7807523482081003`*^9, 3.780752434484371*^9, 3.780752580887312*^9, 
   3.780752798601512*^9, 3.780761469411579*^9, 3.7807616127536182`*^9, 
   3.7807635986919994`*^9, 3.780763920561092*^9, 3.7807767530534306`*^9, 
   3.780915499617256*^9, 3.780915829474088*^9, 3.7809164978375254`*^9, 
   3.780916880980544*^9, 3.78102726276639*^9, 3.7810285405583754`*^9, 
   3.781031381671939*^9, 3.7818051536941123`*^9, 3.7818064579254956`*^9, 
   3.7818118628621564`*^9, 3.781812274439417*^9, 3.781815905670745*^9, 
   3.7818194792112246`*^9, 3.7818206231162043`*^9, 3.7818213739109664`*^9, 
   3.7818219771381226`*^9, 3.781823765019139*^9, 3.781824631099169*^9, 
   3.7818741164888163`*^9, 3.7818771146453767`*^9, 3.7818786136050572`*^9, 
   3.7818788383083663`*^9, 3.781879087319892*^9, 3.78188346007734*^9, 
   3.7818841392656655`*^9, 3.7818852663503947`*^9, 3.781886387410383*^9, 
   3.7818885661861*^9, 3.7818924951826873`*^9, 3.781893012505045*^9, 
   3.781894025692685*^9, 3.7818943881807528`*^9, 3.781900005020112*^9, 
   3.781972369233184*^9, 3.7820423358957615`*^9, 3.7825683391652193`*^9, 
   3.7827490453761487`*^9, 3.7827671123202295`*^9, 3.782774668659416*^9, 
   3.7828402773327417`*^9, 3.7828456019844685`*^9, 3.782871341213192*^9, 
   3.7829975572530403`*^9, 3.7830051472616615`*^9, 3.7830065114323807`*^9, 
   3.783008777409887*^9, 3.783010179538063*^9, 3.7830130737805786`*^9, 
   3.7830133859071493`*^9, 3.783013935809978*^9, 3.7830256888025036`*^9, 
   3.7830269434725027`*^9, 3.783189528974514*^9, 3.783190497892408*^9, 
   3.7831918731941285`*^9, 3.783193771147303*^9, 3.783195219084367*^9, 
   3.783203093404045*^9, 3.7832063229027267`*^9, 3.7832160850331073`*^9, 
   3.783217930195201*^9, 3.783274325716092*^9, 3.7832749719068336`*^9, 
   3.783275805349277*^9, 3.783276574832025*^9, 3.783277484396265*^9, 
   3.7832802339111967`*^9, 3.78328143478224*^9, 3.783282911576038*^9, 
   3.783284203958561*^9, 3.783285454995739*^9, 3.783290238474257*^9, 
   3.7832923140974293`*^9, 3.783339958172806*^9, 3.783394468840373*^9, 
   3.783429047965355*^9, 3.7834657285959806`*^9, 3.783472828113741*^9, 
   3.783476475332807*^9, 3.783479188656959*^9, 3.783514985073275*^9, 
   3.783521926941571*^9, 3.7835652422244663`*^9, 3.783599539686101*^9, 
   3.783600851968689*^9, 3.783608743450491*^9, 3.78361709343112*^9, 
   3.783618722532311*^9, 3.783619048593931*^9, 3.783620458194933*^9, 
   3.7836377741043653`*^9, 3.783652763643114*^9, 3.7837020239483504`*^9, 
   3.7837027030732594`*^9, 3.7837373963936596`*^9, 3.783739238173441*^9, 
   3.783739684619857*^9, 3.783774246570846*^9, 3.783795257089269*^9, 
   3.7837961138793316`*^9, 3.783797402962779*^9, 3.7837978450143037`*^9, 
   3.7838002709067783`*^9, 3.7838097500512123`*^9, 3.7838107693202057`*^9, 
   3.7838110283336153`*^9, 3.783811597467391*^9, 3.7838116758762074`*^9, 
   3.7838131263844433`*^9, 3.783817085523794*^9, {3.783817169236467*^9, 
   3.783817259802602*^9}, 3.783817319506277*^9, 3.7838189419895678`*^9, 
   3.783820536455228*^9, 3.783822018662622*^9, {3.7838221855952473`*^9, 
   3.783822201471464*^9}, {3.783822398230764*^9, 3.783822408409926*^9}, 
   3.783822696053084*^9, 3.783822796059976*^9, 3.783823083929163*^9, 
   3.78382328402523*^9, 3.783823386619578*^9, 3.7838236415608892`*^9, 
   3.783823890448958*^9, 3.7838242158441277`*^9, 3.783824540650481*^9, 
   3.783824849549325*^9, 3.783863253596566*^9, 3.783863574296879*^9, {
   3.783864565695217*^9, 3.783864578375381*^9}, 3.783864706624742*^9, 
   3.783981396725079*^9, 3.783982328939129*^9, 3.7841490824015007`*^9, 
   3.7841492236764297`*^9, 3.784154940225196*^9, 3.784159828536028*^9, 
   3.784161087308139*^9, 3.7841617985248137`*^9, 3.784164225136133*^9, 
   3.7841650666783123`*^9, 3.784255173346922*^9, 3.7842554232050753`*^9, 
   3.784257769843094*^9, 3.784312714596064*^9, 3.784314959260643*^9, 
   3.784315214927891*^9, 3.7843154693270082`*^9, 3.784316584071929*^9, 
   3.78431693462967*^9, 3.7843172999249907`*^9, 3.784317714454157*^9, 
   3.784318128342412*^9, 3.7843185413937187`*^9, 3.784319017775721*^9, 
   3.7843195429881687`*^9, 3.784320091142756*^9, 3.784321003724556*^9, 
   3.7843215311896067`*^9, 3.784322057180472*^9, 3.784322661651723*^9, 
   3.784323247353689*^9, 3.7843238406787252`*^9, 3.784342664226441*^9, 
   3.784344602937422*^9, 3.7843462959452457`*^9, 3.784348958197027*^9, 
   3.784355568985696*^9, 3.784922362548717*^9, 3.784924054064742*^9, 
   3.784924171310759*^9, 3.784925576729862*^9, 3.784927328531355*^9, 
   3.7849284547383738`*^9, 3.7849341899346857`*^9, 3.7850089128006144`*^9, 
   3.785172395157998*^9, 3.7851807731978292`*^9, 3.7851839313944035`*^9, 
   3.785680215659679*^9, 3.785681870643779*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"e0346299-a75a-4bca-95e1-81c88858eedf"],

Cell[BoxData["0.0002369894571762221`"], "Output",
 CellChangeTimes->{
  3.7428320786981044`*^9, {3.7428321112266865`*^9, 3.7428321573201013`*^9}, 
   3.7428323261443157`*^9, {3.7428328240541463`*^9, 3.7428328486945677`*^9}, 
   3.742833517086095*^9, 3.7428336572274623`*^9, 3.742833702248206*^9, 
   3.7428337768560915`*^9, {3.7428338112190075`*^9, 3.74283382745376*^9}, 
   3.7428347184435015`*^9, {3.7428347663050747`*^9, 3.7428347711287966`*^9}, {
   3.742834809067525*^9, 3.742834838261005*^9}, {3.7428348878860993`*^9, 
   3.742834917785855*^9}, {3.742840586612617*^9, 3.7428405962333*^9}, 
   3.7428407006736445`*^9, {3.7428407847308455`*^9, 3.742840790201316*^9}, 
   3.742840877797854*^9, {3.742840909017849*^9, 3.742840937880236*^9}, {
   3.7428429604596853`*^9, 3.742842978930967*^9}, 3.7428430218804054`*^9, 
   3.742843056830038*^9, {3.7428430885499177`*^9, 3.742843123653192*^9}, {
   3.7428542219580355`*^9, 3.742854248727624*^9}, {3.7428542938174963`*^9, 
   3.742854488435213*^9}, {3.742854541056284*^9, 3.7428545692828894`*^9}, 
   3.7428546242171774`*^9, {3.7428548598297977`*^9, 3.7428548798491306`*^9}, 
   3.7428553574154043`*^9, 3.7428590675379653`*^9, 3.742889616011071*^9, 
   3.742911470116192*^9, 3.742912336329378*^9, 3.7429136407731676`*^9, 
   3.742913898120455*^9, 3.7429139283176622`*^9, 3.742914008480151*^9, 
   3.7429141326238155`*^9, {3.742914165266943*^9, 3.7429142405658646`*^9}, 
   3.743007466478134*^9, 3.743007505418644*^9, {3.7430075792498646`*^9, 
   3.743007607360137*^9}, 3.743007723092636*^9, 3.7430077721134343`*^9, 
   3.743007888394087*^9, 3.7430080179282765`*^9, 3.7430080517084994`*^9, 
   3.743008133820435*^9, 3.7430083208439665`*^9, 3.7430084914692783`*^9, 
   3.7430085613002424`*^9, 3.743008627901597*^9, 3.743008671172493*^9, 
   3.743008703911129*^9, 3.7430087404352264`*^9, {3.7430088072265043`*^9, 
   3.743008830083434*^9}, 3.743008958448408*^9, 3.743009039752055*^9, 
   3.7430091109322524`*^9, 3.7430091494025927`*^9, {3.743009430211282*^9, 
   3.7430094867607813`*^9}, 3.7430095226411533`*^9, 3.7430096348252654`*^9, 
   3.7430096650751443`*^9, 3.7430097305635996`*^9, 3.7430100165731077`*^9, 
   3.7430100889334197`*^9, 3.7430102105330777`*^9, 3.743271259083024*^9, 
   3.743271299410102*^9, 3.743356616962653*^9, 3.743357207843689*^9, 
   3.7433577196232486`*^9, 3.7433597801026163`*^9, 3.743416460473564*^9, 
   3.7469646824469185`*^9, 3.7469649863133125`*^9, {3.74697379574397*^9, 
   3.746973837946822*^9}, 3.746977868610015*^9, 3.7469974133113604`*^9, 
   3.7469983776035757`*^9, 3.746998552730006*^9, 3.747000185896922*^9, 
   3.747000287139346*^9, 3.747000376424178*^9, {3.7470004637710457`*^9, 
   3.7470004660847692`*^9}, 3.7470006481560664`*^9, 3.7470021673781767`*^9, 
   3.747002211028577*^9, 3.7470023835448694`*^9, 3.7470024466235857`*^9, {
   3.7470027100486555`*^9, 3.7470027367899475`*^9}, 3.7470031642691984`*^9, 
   3.7470034429844656`*^9, 3.7470035838292913`*^9, 3.747004381086877*^9, 
   3.747005381886915*^9, 3.747011842677211*^9, 3.7470410699710236`*^9, {
   3.747054670912089*^9, 3.7470546741141977`*^9}, {3.7470547152323685`*^9, 
   3.747054735639282*^9}, 3.7470548974203005`*^9, 3.747055055371196*^9, 
   3.7470552009834566`*^9, 3.7470553245405664`*^9, 3.747055519511251*^9, 
   3.747129009908922*^9, 3.747129139893778*^9, 3.747131764853055*^9, 
   3.7471388541180277`*^9, 3.7471389293787127`*^9, 3.747139377846814*^9, 
   3.7471398073423257`*^9, 3.747139925652749*^9, 3.747241248008071*^9, 
   3.7472414112618756`*^9, 3.7472416039197426`*^9, 3.7472436247746305`*^9, 
   3.747246375641159*^9, 3.7472467676701717`*^9, 3.7472471764918523`*^9, 
   3.7472478991898084`*^9, 3.747248409755107*^9, 3.7472505226018686`*^9, 
   3.7472518467738295`*^9, 3.747252273608699*^9, 3.7472549547567053`*^9, 
   3.7472586551930723`*^9, 3.7472589515996604`*^9, 3.7472632293132877`*^9, 
   3.747263927519483*^9, 3.7472648182906656`*^9, 3.7472657122375154`*^9, 
   3.747267553675435*^9, 3.74726982796452*^9, 3.747298527454444*^9, 
   3.7473173709098835`*^9, 3.747388057060449*^9, 3.748886751065493*^9, 
   3.7488868591361046`*^9, 3.7488869707572174`*^9, 3.748887052299697*^9, 
   3.7488873453555794`*^9, 3.748888301723154*^9, 3.7488885205075235`*^9, 
   3.7494789525161657`*^9, 3.7494792227655973`*^9, {3.7576181702760515`*^9, 
   3.757618184871952*^9}, 3.7576185127646484`*^9, 3.771292605517477*^9, 
   3.7713447059603443`*^9, 3.771432964431427*^9, 3.7714398688417273`*^9, 
   3.771445971165625*^9, 3.7714537524406023`*^9, 3.771606345262189*^9, 
   3.7716691113516293`*^9, 3.77168503735707*^9, 3.771694212263785*^9, 
   3.7803974022310057`*^9, 3.780399908631223*^9, 3.780408963695055*^9, 
   3.7804213110871882`*^9, 3.7804221036123033`*^9, 3.780422933624851*^9, 
   3.7804230557440004`*^9, 3.780423089738576*^9, 3.7804236000976906`*^9, 
   3.7804240127928534`*^9, 3.7804244784028425`*^9, {3.780448294925724*^9, 
   3.7804483249633727`*^9}, {3.7804490837409086`*^9, 3.780449109271162*^9}, 
   3.7804813517058525`*^9, {3.7804911642862844`*^9, 3.780491220162655*^9}, 
   3.7804912516431575`*^9, 3.7804919660253077`*^9, 3.7804921943392115`*^9, 
   3.780502701386387*^9, 3.7805038464341526`*^9, {3.7805039077220526`*^9, 
   3.780503930960761*^9}, 3.780531482716979*^9, 3.7805321253619223`*^9, 
   3.7805342135002785`*^9, 3.7806099603425183`*^9, 3.780610161173131*^9, 
   3.7806151085171127`*^9, 3.7806171345088778`*^9, 3.7806241225929127`*^9, 
   3.7806241958224726`*^9, 3.7806253692869964`*^9, 3.7806259481553183`*^9, 
   3.780658817094096*^9, 3.7806593925773306`*^9, 3.780659933024104*^9, 
   3.7806605134740686`*^9, 3.780661449150361*^9, 3.780661723113056*^9, 
   3.780662034142479*^9, 3.780662294228222*^9, 3.7806629853458853`*^9, 
   3.780663302823126*^9, 3.7806634958476562`*^9, 3.7806645146113815`*^9, 
   3.7806649294681773`*^9, 3.7806657610477233`*^9, 3.780675157882308*^9, 
   3.7806756809639416`*^9, 3.7806760311177654`*^9, 3.7806813338141365`*^9, 
   3.7806818981016183`*^9, 3.780681931878346*^9, 3.780683426928124*^9, 
   3.7806860867149377`*^9, 3.7806864062710524`*^9, {3.7806866447885747`*^9, 
   3.7806866531861277`*^9}, 3.780687236316719*^9, 3.780687745922633*^9, 
   3.7806887026837034`*^9, 3.7806893456210012`*^9, 3.780691033361664*^9, 
   3.780740261900279*^9, 3.7807517592044716`*^9, 3.780751931669099*^9, 
   3.7807520766572075`*^9, 3.7807521546620955`*^9, 3.7807522711285515`*^9, 
   3.7807523482081003`*^9, 3.780752434484371*^9, 3.780752580887312*^9, 
   3.780752798601512*^9, 3.780761469411579*^9, 3.7807616127536182`*^9, 
   3.7807635986919994`*^9, 3.780763920561092*^9, 3.7807767530534306`*^9, 
   3.780915499617256*^9, 3.780915829474088*^9, 3.7809164978375254`*^9, 
   3.780916880980544*^9, 3.78102726276639*^9, 3.7810285405583754`*^9, 
   3.781031381671939*^9, 3.7818051536941123`*^9, 3.7818064579254956`*^9, 
   3.7818118628621564`*^9, 3.781812274439417*^9, 3.781815905670745*^9, 
   3.7818194792112246`*^9, 3.7818206231162043`*^9, 3.7818213739109664`*^9, 
   3.7818219771381226`*^9, 3.781823765019139*^9, 3.781824631099169*^9, 
   3.7818741164888163`*^9, 3.7818771146453767`*^9, 3.7818786136050572`*^9, 
   3.7818788383083663`*^9, 3.781879087319892*^9, 3.78188346007734*^9, 
   3.7818841392656655`*^9, 3.7818852663503947`*^9, 3.781886387410383*^9, 
   3.7818885661861*^9, 3.7818924951826873`*^9, 3.781893012505045*^9, 
   3.781894025692685*^9, 3.7818943881807528`*^9, 3.781900005020112*^9, 
   3.781972369233184*^9, 3.7820423358957615`*^9, 3.7825683391652193`*^9, 
   3.7827490453761487`*^9, 3.7827671123202295`*^9, 3.782774668659416*^9, 
   3.7828402773327417`*^9, 3.7828456019844685`*^9, 3.782871341213192*^9, 
   3.7829975572530403`*^9, 3.7830051472616615`*^9, 3.7830065114323807`*^9, 
   3.783008777409887*^9, 3.783010179538063*^9, 3.7830130737805786`*^9, 
   3.7830133859071493`*^9, 3.783013935809978*^9, 3.7830256888025036`*^9, 
   3.7830269434725027`*^9, 3.783189528974514*^9, 3.783190497892408*^9, 
   3.7831918731941285`*^9, 3.783193771147303*^9, 3.783195219084367*^9, 
   3.783203093404045*^9, 3.7832063229027267`*^9, 3.7832160850331073`*^9, 
   3.783217930195201*^9, 3.783274325716092*^9, 3.7832749719068336`*^9, 
   3.783275805349277*^9, 3.783276574832025*^9, 3.783277484396265*^9, 
   3.7832802339111967`*^9, 3.78328143478224*^9, 3.783282911576038*^9, 
   3.783284203958561*^9, 3.783285454995739*^9, 3.783290238474257*^9, 
   3.7832923140974293`*^9, 3.783339958172806*^9, 3.783394468840373*^9, 
   3.783429047965355*^9, 3.7834657285959806`*^9, 3.783472828113741*^9, 
   3.783476475332807*^9, 3.783479188656959*^9, 3.783514985073275*^9, 
   3.783521926941571*^9, 3.7835652422244663`*^9, 3.783599539686101*^9, 
   3.783600851968689*^9, 3.783608743450491*^9, 3.78361709343112*^9, 
   3.783618722532311*^9, 3.783619048593931*^9, 3.783620458194933*^9, 
   3.7836377741043653`*^9, 3.783652763643114*^9, 3.7837020239483504`*^9, 
   3.7837027030732594`*^9, 3.7837373963936596`*^9, 3.783739238173441*^9, 
   3.783739684619857*^9, 3.783774246570846*^9, 3.783795257089269*^9, 
   3.7837961138793316`*^9, 3.783797402962779*^9, 3.7837978450143037`*^9, 
   3.7838002709067783`*^9, 3.7838097500512123`*^9, 3.7838107693202057`*^9, 
   3.7838110283336153`*^9, 3.783811597467391*^9, 3.7838116758762074`*^9, 
   3.7838131263844433`*^9, 3.783817085523794*^9, {3.783817169236467*^9, 
   3.783817259802602*^9}, 3.783817319506277*^9, 3.7838189419895678`*^9, 
   3.783820536455228*^9, 3.783822018662622*^9, {3.7838221855952473`*^9, 
   3.783822201471464*^9}, {3.783822398230764*^9, 3.783822408409926*^9}, 
   3.783822696053084*^9, 3.783822796059976*^9, 3.783823083929163*^9, 
   3.78382328402523*^9, 3.783823386619578*^9, 3.7838236415608892`*^9, 
   3.783823890448958*^9, 3.7838242158441277`*^9, 3.783824540650481*^9, 
   3.783824849549325*^9, 3.783863253596566*^9, 3.783863574296879*^9, {
   3.783864565695217*^9, 3.783864578375381*^9}, 3.783864706624742*^9, 
   3.783981396725079*^9, 3.783982328939129*^9, 3.7841490824015007`*^9, 
   3.7841492236764297`*^9, 3.784154940225196*^9, 3.784159828536028*^9, 
   3.784161087308139*^9, 3.7841617985248137`*^9, 3.784164225136133*^9, 
   3.7841650666783123`*^9, 3.784255173346922*^9, 3.7842554232050753`*^9, 
   3.784257769843094*^9, 3.784312714596064*^9, 3.784314959260643*^9, 
   3.784315214927891*^9, 3.7843154693270082`*^9, 3.784316584071929*^9, 
   3.78431693462967*^9, 3.7843172999249907`*^9, 3.784317714454157*^9, 
   3.784318128342412*^9, 3.7843185413937187`*^9, 3.784319017775721*^9, 
   3.7843195429881687`*^9, 3.784320091142756*^9, 3.784321003724556*^9, 
   3.7843215311896067`*^9, 3.784322057180472*^9, 3.784322661651723*^9, 
   3.784323247353689*^9, 3.7843238406787252`*^9, 3.784342664226441*^9, 
   3.784344602937422*^9, 3.7843462959452457`*^9, 3.784348958197027*^9, 
   3.784355568985696*^9, 3.784922362548717*^9, 3.784924054064742*^9, 
   3.784924171310759*^9, 3.784925576729862*^9, 3.784927328531355*^9, 
   3.7849284547383738`*^9, 3.7849341899346857`*^9, 3.7850089128006144`*^9, 
   3.785172395157998*^9, 3.7851807731978292`*^9, 3.7851839313944035`*^9, 
   3.785680215659679*^9, 3.785681875517157*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"6be6b620-ece5-42ca-8a7a-3f8564ef459d"],

Cell[BoxData["3.7370628184750955`*^-6"], "Output",
 CellChangeTimes->{
  3.7428320786981044`*^9, {3.7428321112266865`*^9, 3.7428321573201013`*^9}, 
   3.7428323261443157`*^9, {3.7428328240541463`*^9, 3.7428328486945677`*^9}, 
   3.742833517086095*^9, 3.7428336572274623`*^9, 3.742833702248206*^9, 
   3.7428337768560915`*^9, {3.7428338112190075`*^9, 3.74283382745376*^9}, 
   3.7428347184435015`*^9, {3.7428347663050747`*^9, 3.7428347711287966`*^9}, {
   3.742834809067525*^9, 3.742834838261005*^9}, {3.7428348878860993`*^9, 
   3.742834917785855*^9}, {3.742840586612617*^9, 3.7428405962333*^9}, 
   3.7428407006736445`*^9, {3.7428407847308455`*^9, 3.742840790201316*^9}, 
   3.742840877797854*^9, {3.742840909017849*^9, 3.742840937880236*^9}, {
   3.7428429604596853`*^9, 3.742842978930967*^9}, 3.7428430218804054`*^9, 
   3.742843056830038*^9, {3.7428430885499177`*^9, 3.742843123653192*^9}, {
   3.7428542219580355`*^9, 3.742854248727624*^9}, {3.7428542938174963`*^9, 
   3.742854488435213*^9}, {3.742854541056284*^9, 3.7428545692828894`*^9}, 
   3.7428546242171774`*^9, {3.7428548598297977`*^9, 3.7428548798491306`*^9}, 
   3.7428553574154043`*^9, 3.7428590675379653`*^9, 3.742889616011071*^9, 
   3.742911470116192*^9, 3.742912336329378*^9, 3.7429136407731676`*^9, 
   3.742913898120455*^9, 3.7429139283176622`*^9, 3.742914008480151*^9, 
   3.7429141326238155`*^9, {3.742914165266943*^9, 3.7429142405658646`*^9}, 
   3.743007466478134*^9, 3.743007505418644*^9, {3.7430075792498646`*^9, 
   3.743007607360137*^9}, 3.743007723092636*^9, 3.7430077721134343`*^9, 
   3.743007888394087*^9, 3.7430080179282765`*^9, 3.7430080517084994`*^9, 
   3.743008133820435*^9, 3.7430083208439665`*^9, 3.7430084914692783`*^9, 
   3.7430085613002424`*^9, 3.743008627901597*^9, 3.743008671172493*^9, 
   3.743008703911129*^9, 3.7430087404352264`*^9, {3.7430088072265043`*^9, 
   3.743008830083434*^9}, 3.743008958448408*^9, 3.743009039752055*^9, 
   3.7430091109322524`*^9, 3.7430091494025927`*^9, {3.743009430211282*^9, 
   3.7430094867607813`*^9}, 3.7430095226411533`*^9, 3.7430096348252654`*^9, 
   3.7430096650751443`*^9, 3.7430097305635996`*^9, 3.7430100165731077`*^9, 
   3.7430100889334197`*^9, 3.7430102105330777`*^9, 3.743271259083024*^9, 
   3.743271299410102*^9, 3.743356616962653*^9, 3.743357207843689*^9, 
   3.7433577196232486`*^9, 3.7433597801026163`*^9, 3.743416460473564*^9, 
   3.7469646824469185`*^9, 3.7469649863133125`*^9, {3.74697379574397*^9, 
   3.746973837946822*^9}, 3.746977868610015*^9, 3.7469974133113604`*^9, 
   3.7469983776035757`*^9, 3.746998552730006*^9, 3.747000185896922*^9, 
   3.747000287139346*^9, 3.747000376424178*^9, {3.7470004637710457`*^9, 
   3.7470004660847692`*^9}, 3.7470006481560664`*^9, 3.7470021673781767`*^9, 
   3.747002211028577*^9, 3.7470023835448694`*^9, 3.7470024466235857`*^9, {
   3.7470027100486555`*^9, 3.7470027367899475`*^9}, 3.7470031642691984`*^9, 
   3.7470034429844656`*^9, 3.7470035838292913`*^9, 3.747004381086877*^9, 
   3.747005381886915*^9, 3.747011842677211*^9, 3.7470410699710236`*^9, {
   3.747054670912089*^9, 3.7470546741141977`*^9}, {3.7470547152323685`*^9, 
   3.747054735639282*^9}, 3.7470548974203005`*^9, 3.747055055371196*^9, 
   3.7470552009834566`*^9, 3.7470553245405664`*^9, 3.747055519511251*^9, 
   3.747129009908922*^9, 3.747129139893778*^9, 3.747131764853055*^9, 
   3.7471388541180277`*^9, 3.7471389293787127`*^9, 3.747139377846814*^9, 
   3.7471398073423257`*^9, 3.747139925652749*^9, 3.747241248008071*^9, 
   3.7472414112618756`*^9, 3.7472416039197426`*^9, 3.7472436247746305`*^9, 
   3.747246375641159*^9, 3.7472467676701717`*^9, 3.7472471764918523`*^9, 
   3.7472478991898084`*^9, 3.747248409755107*^9, 3.7472505226018686`*^9, 
   3.7472518467738295`*^9, 3.747252273608699*^9, 3.7472549547567053`*^9, 
   3.7472586551930723`*^9, 3.7472589515996604`*^9, 3.7472632293132877`*^9, 
   3.747263927519483*^9, 3.7472648182906656`*^9, 3.7472657122375154`*^9, 
   3.747267553675435*^9, 3.74726982796452*^9, 3.747298527454444*^9, 
   3.7473173709098835`*^9, 3.747388057060449*^9, 3.748886751065493*^9, 
   3.7488868591361046`*^9, 3.7488869707572174`*^9, 3.748887052299697*^9, 
   3.7488873453555794`*^9, 3.748888301723154*^9, 3.7488885205075235`*^9, 
   3.7494789525161657`*^9, 3.7494792227655973`*^9, {3.7576181702760515`*^9, 
   3.757618184871952*^9}, 3.7576185127646484`*^9, 3.771292605517477*^9, 
   3.7713447059603443`*^9, 3.771432964431427*^9, 3.7714398688417273`*^9, 
   3.771445971165625*^9, 3.7714537524406023`*^9, 3.771606345262189*^9, 
   3.7716691113516293`*^9, 3.77168503735707*^9, 3.771694212263785*^9, 
   3.7803974022310057`*^9, 3.780399908631223*^9, 3.780408963695055*^9, 
   3.7804213110871882`*^9, 3.7804221036123033`*^9, 3.780422933624851*^9, 
   3.7804230557440004`*^9, 3.780423089738576*^9, 3.7804236000976906`*^9, 
   3.7804240127928534`*^9, 3.7804244784028425`*^9, {3.780448294925724*^9, 
   3.7804483249633727`*^9}, {3.7804490837409086`*^9, 3.780449109271162*^9}, 
   3.7804813517058525`*^9, {3.7804911642862844`*^9, 3.780491220162655*^9}, 
   3.7804912516431575`*^9, 3.7804919660253077`*^9, 3.7804921943392115`*^9, 
   3.780502701386387*^9, 3.7805038464341526`*^9, {3.7805039077220526`*^9, 
   3.780503930960761*^9}, 3.780531482716979*^9, 3.7805321253619223`*^9, 
   3.7805342135002785`*^9, 3.7806099603425183`*^9, 3.780610161173131*^9, 
   3.7806151085171127`*^9, 3.7806171345088778`*^9, 3.7806241225929127`*^9, 
   3.7806241958224726`*^9, 3.7806253692869964`*^9, 3.7806259481553183`*^9, 
   3.780658817094096*^9, 3.7806593925773306`*^9, 3.780659933024104*^9, 
   3.7806605134740686`*^9, 3.780661449150361*^9, 3.780661723113056*^9, 
   3.780662034142479*^9, 3.780662294228222*^9, 3.7806629853458853`*^9, 
   3.780663302823126*^9, 3.7806634958476562`*^9, 3.7806645146113815`*^9, 
   3.7806649294681773`*^9, 3.7806657610477233`*^9, 3.780675157882308*^9, 
   3.7806756809639416`*^9, 3.7806760311177654`*^9, 3.7806813338141365`*^9, 
   3.7806818981016183`*^9, 3.780681931878346*^9, 3.780683426928124*^9, 
   3.7806860867149377`*^9, 3.7806864062710524`*^9, {3.7806866447885747`*^9, 
   3.7806866531861277`*^9}, 3.780687236316719*^9, 3.780687745922633*^9, 
   3.7806887026837034`*^9, 3.7806893456210012`*^9, 3.780691033361664*^9, 
   3.780740261900279*^9, 3.7807517592044716`*^9, 3.780751931669099*^9, 
   3.7807520766572075`*^9, 3.7807521546620955`*^9, 3.7807522711285515`*^9, 
   3.7807523482081003`*^9, 3.780752434484371*^9, 3.780752580887312*^9, 
   3.780752798601512*^9, 3.780761469411579*^9, 3.7807616127536182`*^9, 
   3.7807635986919994`*^9, 3.780763920561092*^9, 3.7807767530534306`*^9, 
   3.780915499617256*^9, 3.780915829474088*^9, 3.7809164978375254`*^9, 
   3.780916880980544*^9, 3.78102726276639*^9, 3.7810285405583754`*^9, 
   3.781031381671939*^9, 3.7818051536941123`*^9, 3.7818064579254956`*^9, 
   3.7818118628621564`*^9, 3.781812274439417*^9, 3.781815905670745*^9, 
   3.7818194792112246`*^9, 3.7818206231162043`*^9, 3.7818213739109664`*^9, 
   3.7818219771381226`*^9, 3.781823765019139*^9, 3.781824631099169*^9, 
   3.7818741164888163`*^9, 3.7818771146453767`*^9, 3.7818786136050572`*^9, 
   3.7818788383083663`*^9, 3.781879087319892*^9, 3.78188346007734*^9, 
   3.7818841392656655`*^9, 3.7818852663503947`*^9, 3.781886387410383*^9, 
   3.7818885661861*^9, 3.7818924951826873`*^9, 3.781893012505045*^9, 
   3.781894025692685*^9, 3.7818943881807528`*^9, 3.781900005020112*^9, 
   3.781972369233184*^9, 3.7820423358957615`*^9, 3.7825683391652193`*^9, 
   3.7827490453761487`*^9, 3.7827671123202295`*^9, 3.782774668659416*^9, 
   3.7828402773327417`*^9, 3.7828456019844685`*^9, 3.782871341213192*^9, 
   3.7829975572530403`*^9, 3.7830051472616615`*^9, 3.7830065114323807`*^9, 
   3.783008777409887*^9, 3.783010179538063*^9, 3.7830130737805786`*^9, 
   3.7830133859071493`*^9, 3.783013935809978*^9, 3.7830256888025036`*^9, 
   3.7830269434725027`*^9, 3.783189528974514*^9, 3.783190497892408*^9, 
   3.7831918731941285`*^9, 3.783193771147303*^9, 3.783195219084367*^9, 
   3.783203093404045*^9, 3.7832063229027267`*^9, 3.7832160850331073`*^9, 
   3.783217930195201*^9, 3.783274325716092*^9, 3.7832749719068336`*^9, 
   3.783275805349277*^9, 3.783276574832025*^9, 3.783277484396265*^9, 
   3.7832802339111967`*^9, 3.78328143478224*^9, 3.783282911576038*^9, 
   3.783284203958561*^9, 3.783285454995739*^9, 3.783290238474257*^9, 
   3.7832923140974293`*^9, 3.783339958172806*^9, 3.783394468840373*^9, 
   3.783429047965355*^9, 3.7834657285959806`*^9, 3.783472828113741*^9, 
   3.783476475332807*^9, 3.783479188656959*^9, 3.783514985073275*^9, 
   3.783521926941571*^9, 3.7835652422244663`*^9, 3.783599539686101*^9, 
   3.783600851968689*^9, 3.783608743450491*^9, 3.78361709343112*^9, 
   3.783618722532311*^9, 3.783619048593931*^9, 3.783620458194933*^9, 
   3.7836377741043653`*^9, 3.783652763643114*^9, 3.7837020239483504`*^9, 
   3.7837027030732594`*^9, 3.7837373963936596`*^9, 3.783739238173441*^9, 
   3.783739684619857*^9, 3.783774246570846*^9, 3.783795257089269*^9, 
   3.7837961138793316`*^9, 3.783797402962779*^9, 3.7837978450143037`*^9, 
   3.7838002709067783`*^9, 3.7838097500512123`*^9, 3.7838107693202057`*^9, 
   3.7838110283336153`*^9, 3.783811597467391*^9, 3.7838116758762074`*^9, 
   3.7838131263844433`*^9, 3.783817085523794*^9, {3.783817169236467*^9, 
   3.783817259802602*^9}, 3.783817319506277*^9, 3.7838189419895678`*^9, 
   3.783820536455228*^9, 3.783822018662622*^9, {3.7838221855952473`*^9, 
   3.783822201471464*^9}, {3.783822398230764*^9, 3.783822408409926*^9}, 
   3.783822696053084*^9, 3.783822796059976*^9, 3.783823083929163*^9, 
   3.78382328402523*^9, 3.783823386619578*^9, 3.7838236415608892`*^9, 
   3.783823890448958*^9, 3.7838242158441277`*^9, 3.783824540650481*^9, 
   3.783824849549325*^9, 3.783863253596566*^9, 3.783863574296879*^9, {
   3.783864565695217*^9, 3.783864578375381*^9}, 3.783864706624742*^9, 
   3.783981396725079*^9, 3.783982328939129*^9, 3.7841490824015007`*^9, 
   3.7841492236764297`*^9, 3.784154940225196*^9, 3.784159828536028*^9, 
   3.784161087308139*^9, 3.7841617985248137`*^9, 3.784164225136133*^9, 
   3.7841650666783123`*^9, 3.784255173346922*^9, 3.7842554232050753`*^9, 
   3.784257769843094*^9, 3.784312714596064*^9, 3.784314959260643*^9, 
   3.784315214927891*^9, 3.7843154693270082`*^9, 3.784316584071929*^9, 
   3.78431693462967*^9, 3.7843172999249907`*^9, 3.784317714454157*^9, 
   3.784318128342412*^9, 3.7843185413937187`*^9, 3.784319017775721*^9, 
   3.7843195429881687`*^9, 3.784320091142756*^9, 3.784321003724556*^9, 
   3.7843215311896067`*^9, 3.784322057180472*^9, 3.784322661651723*^9, 
   3.784323247353689*^9, 3.7843238406787252`*^9, 3.784342664226441*^9, 
   3.784344602937422*^9, 3.7843462959452457`*^9, 3.784348958197027*^9, 
   3.784355568985696*^9, 3.784922362548717*^9, 3.784924054064742*^9, 
   3.784924171310759*^9, 3.784925576729862*^9, 3.784927328531355*^9, 
   3.7849284547383738`*^9, 3.7849341899346857`*^9, 3.7850089128006144`*^9, 
   3.785172395157998*^9, 3.7851807731978292`*^9, 3.7851839313944035`*^9, 
   3.785680215659679*^9, 3.785681880296159*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"46790318-0eec-4545-8b38-b8e355047eb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"netTrainResultsObjectBenchmark0", "\[IndentingNewLine]", \
"netTrainResultsObjectBenchmark"}], "Input",
 CellChangeTimes->{
  3.781819656994856*^9, {3.7818197977628937`*^9, 3.7818198152121944`*^9}, {
   3.782586678480845*^9, 3.7825866954807887`*^9}, {3.7825899362700696`*^9, 
   3.782589947864274*^9}, {3.782590318273917*^9, 3.782590318375225*^9}, {
   3.7825930512170486`*^9, 3.782593051435772*^9}, {3.782593828048547*^9, 
   3.782593853630477*^9}, {3.782870204806568*^9, 3.7828702224474506`*^9}, {
   3.782907740353192*^9, 3.7829077491269355`*^9}, {3.7830098613320456`*^9, 
   3.7830098758963375`*^9}, {3.7830258288424025`*^9, 3.783025830062467*^9}, {
   3.78415597596769*^9, 3.7841559824956913`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5dc4d15d-e332-4108-b180-501261738d98"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "25000"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "200"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"46s\""}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "34894"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "8000"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"validation examples:\"", "2048"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "1600000"},
                "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "64"}, 
               "RowWithSeparators"],"\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"2.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], 0.000275141263607015, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            
            TemplateBox[{
             TemplateBox[{5}, "Spacer1"],StyleBox["\"validation\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"2.64\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], 0.00026441504798643334`,
                   AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJwtlgs4VPkbx0nJzDm5lls3RbW6F7abzZtLLuWScRsMM2MudlkitRKrFLVW
kcqGtqvu0d1qu5w3CdFKbGtr02xok1T4G6Mi/3POzDwzzzwz55zf5X2/38/3
N00c7y8dpaWlVUt/mO9+23erCuWvnAZ29tU+jOqn1L+VTi1/nvVJa+6nflAk
9F4ZpwWVg73K0RZKKiEpOj/9Lhf0dpiP+rhKSZXvuGhx6ndjWJuzl++VqtQ8
PwFq+P8lxj9UUosfzf4uZ7w5vPHaGJhpN0Bdou9OjJsM+RuOJXakDlCmV/Iy
50qmgWX5h2rLBwOa8abDXO/4vD5tFRUY3FA61cgGRPt5ibmzVNS+IeIv4zsz
ISq2+vZTFxXVdMzzy5gYW5h/ccTnsJ9Ks77ZYFz8oXKBVEUZuu+c+dFsLhQ7
dAY9z1VRvt1VPt1V86Eb9YxOHVJRNR7bbn6oWAhdcalH66+qNOtZBOPDXv6j
bFFRsolHfb81WAwe/acVYYMqasz7O+1tUjv4PFjkd2XeIFWCrT+E37KHlY9X
teRtHdTs3wEuytPv+nQOUq7sgr+G4hm7R57HfKTapcyAS+CZ2VmHvUMfqYyl
y+0fUEshwshCWnTmk2Y/y+Anr4OBm7w+U9MIfq2z6XKoeP54n0JviLrLTBe7
AjD/DNx8MkQJLxX0ONxzhKEYHT7vzLCmvt+A561JryuSvlAjGdfpiq6EHstf
PKf/PEIdDvzT3Ha9E7Ree1K400sLp+7fHLQuCqBvvv0a3w4tVNcDoKv88NFH
GdoYN7zLao/+Kjgee7BaOHUU3pEd7Kq7sQrcFleWCMbooH7j6Wtjpc7QuiE3
7dxvOqjunzOkbPjUaZM7GgXLfvvR1dAFkhd6mIa4j8HS49X0DC4Q3TvBKblq
DA4z7ZS5wh2X8w2PY3RRXU9XcLyi+HqfShfXbnz1/JORG6RsdH8xJ34sHnrR
f2rJbTeYUVs50TB3LL51H023fDU0TVCYGxJ6qNbHapAt3j/qsrMerrhsQr/d
4dIvAWNsj+jhz5bWdAvd4V2NfqbBr3r4bDujUA+wM5V+m/BSD9X98ADq3bGC
mmY9nM3K2ROmX8su8OVwMIWuVgl6QtJCX6c0Bw4+oITzXsZ4wbKSIJHhZA6q
9ecFs3YFXe7ZxkEL2/WqyWZrgNdIel7fz0HmamjlGkgVJFv3beZgxec9P//y
/Vqw8e2xsivmoLqfa0FllaZ0OsdBPSnTMW+QV9nXrcziIGuHKm/44SHfg4zm
4Oklt994x/vAIwNZUgzFQbW+feCPHmsPWRkHVUcfXs229IWW4o9xo+jrq7nP
02ru+4KkZV6+tJqD9TeU1hlL/SC9YuhCwlGORg9+cMt/iWXKEw5uYAXgBzmc
TFGoERcnMuVr94PkWqGHvikXK1tInmDZOpjrdWnbSzMuqv2zDpydM4z9dLhI
m5/e4jpwLTWZl+TNReNVkyYXdayDSePslZa+XPydmX65PzzvHLxam83V6Mkf
dB13r7c6wkXxuTmv/8r1h1QeNE3czEVOpB0tCX9oDRTnuBZykW3vCh4Iyx32
1JdwUe1PHriU9w4dX8ZFxj1X8nhwU9/7rkEBF7XTvLb4/ceD0hurrSN6uHh2
kf+/71cEQFXcBesvR7kaPQaAQc6SW9ZVXPT7j++2e28AyE0zobaJi4NFInpF
AcCLs9Fe8JyLDB3qHAPBu2+oaLsrgWr/B8LNq3YZB4a56MHIMz8QCsoeFe1w
IrCnIvmpbmcgRPpbWhUKCTz4/daVJ78Jgn876mLSOYRGz0Hg+arrXrsNgU7T
d51w2RcEDTv8ZnobEEgXQ6+tMwhsyhSvndYSmEurZ+vKYAg6nTW8IZlANV+C
4dHJUbxpzgQugSNNU/YHwx1/zqKyJAIVjH3eBMMVrQRZ6y4Cs86WHQpzCoGT
tfWmlhGExg8hcC+9ool7jsD5EeXan/aHQGbE/dDHbgQy1TnYFQK7bGOq7wgI
/LHmfv3XwIfYsakNHw4TqOYXH7rHax/48p7Amal/LHxygA9az/ISy+j5mF8b
3vLBdKaT87s6All7rwqF7si2JtcCQuOnUFj8YbkkL4tAWiyRlwpCYWT9ysTW
GgLvM+ruDoXlVw+UG34k8HsdpuJhsOD0dxc20eOr+RgGkl2gHM4kcAJrsDCY
/WyaaXE7gbdimQfCYJP1/P5bBwmUsIANB1+Ru4R4S2j8GA4X+D8tenudQJLd
cDhUtXPMyNcEXstmABIOh+x9djs0ERjONkgAmefqPfPfEKjmrwDucwPeeCKB
7PIKBWDT0uu/7gqB588wghPAK/MBnfMmJPJYQEZAUpaJ4EQvofFzBIxXPI1U
3SbwsxFjmAi4992dGV709RMMPj9EwLgKCdeOfp5RM98tEvhaT3NufEWimu+R
UOhyrG5RJ4F9C0LWDBZFwqubu6eX0v1ny9kTCYGqvoEzKgKPMXiwFoLN4R23
ji4nNTwQwiPL0Tbmk0hUMnLxFoL36RfujUYkejLxkCyEF4Ybxn5YTOKvYUwB
hEBdLv17kgepyQ8hKGsVIsMJJPY63AsIbhDCPlnCDp0pJLqygSyEuWERXYnW
JDJporQWwYvfH7SdqCI0PBHBEZ0S+cAiEtU4E0F0CcEfpu9n5bxZBNqx2v1z
uglkcVUigtZqk3+AHl+dTyL4YhyTP/VfAjt5jKJFUCuIt/AYRaIjK2gRKB7e
eL2pnMA82k2NNmKIuvjgnRU9vppHYgiT8nLj15LY0cYYSgzynYLOdHq/S5n2
pIihe/tni5llBOYw9jsphnDj/f3NXYQm/8RQPm9hVmoCiezxqVEM/IiC7M7V
JNqxgSaGwlzTolZXEpnTyYUZUWD8co+iiR5fzbMoMG2O4Zr4kfiPFgOsKLj7
Js12C13PBewfUdB75FiBkQuJ25l4PxUFXffFm74Yk5p8jQJR7E3HnXR/Wxhc
NEaBbvmKa1ZaJM5hgRwFbm2Ha7YISExnGyKBhqIFQzPo9al5KIGo2W8UL+1I
bJ7CVFgCXYeiLt71JXEWs9xUCbwXJ5UeqCcwpbmYTmQJbBz4lDLnPqHJbwlQ
29fodviQyMbVYwmY7RyxmsIhkcXZkATqtf8WJkwncZN4Fv2WQpbieKA1fb+a
p1LwMbmrJ9Insc6RcYwUkg42KKYEkzjFjKmAFFaM8JZFR5KYyJT3tBTKCc8X
s8NJzflACp/gdeoU+no1TacjTVKIq6zeszWWREvGnsNSmHtSmNY2k8Q4Br9f
ycAGhsRXaf2reSwDQX7nUJYBiXRY04qUgVuTRW8KzYcJDkyCyuCh583URhmJ
zGrPn5HBBauKxa9ovajPHzIwt89I1l5JIiuXZhn4Wf9vfexfBNLFoAkpg0rH
S4+d95LIxrutHKKN/N9O5ZEansvhQn9qdii93htMXPDkENu4xsEtjMRxLDDk
EG6W+eDVjySKaFpmnZVD9oQ5fUMKQnO+kdPnm2u++q0EXh/LzCCH92+l8rMh
JHIYuY/IYY3FtIu5XiSGs0CMhspDa//WdSM1eRANu5Y+ba/fQSJ7HAmIBl1o
pspSSWTjLD0aik064kMKSGToIjoXDXWFJ89cbSA056doyKP8Zyhnk0iLhUZ+
NDwy/iPTiNazFvv6FsyvvbOv20Li/wF44eVn
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1:eJwtlglcTOsbx4vSzJzXWiSkm1yULFlKqeZpM0LatdfMNDNlC8lSN6RQuApx
kaVkiZKlv1KkeSrbDUn5l2u7tNmS+Mskqf85Z858znzm885Z3vc8z+/3/b3G
0lVe8n4aGhr36C/z+830k8ORiBbhGqvNgz3efFOqx53Ch99/05ni2Knc8O+a
LwUDNeCLflr/B4pO5ZqYyP1bygWwJyxfNGh7p7Jo2yWDs9eHwY5khdaPd53c
/cMhxZ03+YDzd+WMR2bL/tQbCXBh0soBp78rL9NXR0cZQk5NmY123XfliIK9
281lxpC91/fzPGMV97xxsNHQvDF2skrp61edbzR0PCTOlZRFuqiU6T1U/bCy
CZClq+1xPFylrD3p2qu93BTKe+Jz9lmpuPWZgU7gRfGFkyrlEFHyhB/65jBk
nWPFmE0qpXvbrcVtt6bCNWGJblCVSnl3/tYbn4unQ2/U+NeCNypuPRaQ0f1Q
f2avSqkYneW+dPAMuK9681fhxC6ldntZU6N8JlhAUuyr0C7laXy5Ibh0FiyN
a/fdXNjFvf9s6LkSH12j90PpzC7YErL2LV/ZEvND2SRnHmgFylHBbQ7Tu5WJ
c2xm/a2cA6ambXLLpm7ufawhLukteSn+qTSmAu45jrCBWokLMZjfoyxnplsx
FxTyO+RrXo9SfPmvjtmVtlAwKNXA8ssvrr52cKIy49/hTb3KvsRCuqL2YJu2
LP3joz7lCd8nI01XC0FnaPRzr1QNNDoQu8QzHOBbWdHXX79poroeAJPkJ3Zd
qNfEqF8pv6UOcoCoG4ckxuv6YZni8IeqEgfYbR5Xsce5Pw6qybmqI3cED35f
e+IgLVT3zxEOvjC8Qmq0MMT62mbnIU4Qn2Q5eomLNuZn36FncAKrtRc3nG7T
xl9MOxXOoJnSsFCuNQDV9XQGHOW8ubpkAC5a1/Kie6gLGPqbqHLEOnjs1bez
VjddQGf/rtQAPR38KNKiWz4PEprMptW/0kG1PuaBbf8avCrg4dwruvQhgrln
KvxLI3i4e5QJ3UIRHHute/+PKB4+S2IUOh+OHH6/zuMjD9X9mA83ZvR+sjPj
oRkrZ1eofrTzcWUPD+Poap1GV+jrrosNbuPh30rxlDfLF8BOt/JtW4byUa2/
BTDjXY51ywI+GpiuVhnqL4SUirPOX47ykTkbWLEQRMuWhVaE87H4Z+ruQysX
gXZa3aiyx3xU93MRpI83qtdx5CNPznTMDe5evCk7Y8hH1g633KCweXd9VCkf
c6xuvndbtRjM1tfLbft4qNb3YjANW36wvZePqqwH/9k1yh0kW8vGycfzcJ7g
xaa7t93h5LDW1LjLfLxf0mmSOMcDqtz2NBUbCTg9eMDX8ihNtxo+rmUF4AFJ
K7JaGujxaKZ8TfT59dKkJ9f4WNFAvEOsPcGi7tzl+EY+qv3jCdd1U2WJMQKk
zU+/oifEZh/9aLBBgMMcxhhmNHvCmWPGU2VrBHidmd7GC0Qde5OaBwo4PXnB
uf1bDT+gAKW5k9/Wp3nBbav7do5OAuSHzaQl4QX6Thc8jDoFyLZ3rjecDb37
LClbgGp/ekPX8s57n2sFyLinYK83HB1cOs01Q4Camxb84dHqDW+vuJW5m1B4
3sLrdftcH3i+SFzTncDj9OgD1em/gk99F6BHa4DLnn0+sCXpfL+8l3zsypDQ
K/KBvJg7E5o8KWToUGXrC9T0poMLB1Oo9r8v5E58mn/EgsL5jDz3+4JR3RPv
hFgKO4o3/jPgnS/YNUb7TE2n8PDKBPszdkvgdd48az0hxel5CSyWvo9d5Uih
cFzKKaf0JbBg+lLhh3wB0sXgNb5bAsFDvfOTqilMo9WTYO8H8y1PP3LcSqGa
L37wz/iw7CcPKbSCzNqxB/ygpm3wnpxfFP7L2Oe9Hxyv8nfLa6Rwx/mLx4KE
/jA0xj0/LZji/OAPlwzSYxL0KJwaWqTZfcAfDC7OODm7gEKmOoc/+INGi51I
t4vCzXdv37eEAPhcsDvJ8ZQA1fwKgClvb69zdadwQvzD6f89GEDX47FFXi+F
zGjtxwD4r6Vo7vlpFLL2dgiE2HFyh2caFOenQGjaPiKZOAqQFkvY5b8C4YyG
wzVDf4K3GXW3BULtvXOrKmcTXNmfqXgQ6LU2TWycTqGaj0GQbGAnCU8V4HDW
YEFgKdIcrmVJsHQFc0MQNOzQz8xaJ0AZC9hgqIo0WhpbQnF+DIY2M5H+BBlB
wr5wMEy8IgzT7KDw6i4GIMHQ6vX14Ka3FAazDQqBQ1duWW5eRFDN3xCYavp1
2dokguzyjoRAxDZdrYjfKcw7xwguBHRFKd95Gwl6s4AMBQ/LYV0P/Qjn51B4
0LTb1/A6hT+HMoYJhf3fEzLbFQRPMfj8HApVC2c//WJFkFFzgEsY2Fw8ABab
Car5HgY7Ax97F50g+HWa/8KujDD4lvyTH0Jfz5azI4z2Y+aMM+UUnmTwYCKG
ZZ8m2RSNJxwPxCCbKSxpNiHYycjFTQzC19bChj8IujLxsFEMRy4tvemgQfB4
EFMAMYwRtrb3XSZcfoghZc3N8mK6P19mV/r4VYtBq7UNRfsJOrOBLIbKc/OK
+n+i9U+nSaeJBFa3jAwfEk1xPJGAOM55CnlNoRpnEtgW8E9EfCKFrJxjJZC5
/K1rRRpBFlenJdAxrWOdbCvh8kkCGqHjpm8zpvCdN6NoCUhjs7PiLSm0ZQUt
gfNN4aJDxyjcS7upZrwUREcf7ZhEr1fNIynMP5nr3LCBYHMjYygpHMmdavDj
FYVzmPbESaFfy+KeWz4E/2Tsd0YKg9z68yZFEy7/pKC67uS2gr6e3T7VSCFQ
KureJ6dwJhtoUsDc1UX2GQSZ3cmF38NB0ibU8XxBcTwLh8rsZydueVH4XIMB
VjjENE45Lh9IcBr7Rzi4NjoZDEmgMImJ97PhkAVnzTeVEy5fw8G40P7Htj0E
Gxhc1IRDa8udMcvjCE5mgRwOgV7aozfmUriFbYgMBtc0P2woIhwPZZBdlmO9
9QHBurFMhWUQU2Z8I+EdhROZ5cbL4HS6yc8nVXyMqztKJ7KM9t8zSqeGcPkt
g93Pp3zJfUkhG1ePZaChYeOsY06QxVmPDMYeyCv9mExwvXQifcjBTHayYO8p
wvFUDv9rsLs35jbBKlvGMXJIE04rNdlCcKw+UwE5tJfapI7RIxjNlDdHDlXF
Hc56ZoTbH8jBaEedhybthzs0nTJr5RDkZDogYDvBUYw9f9HjeTqOiYEEoxj8
TlKAddyNvZuyCMdjBSS/ak6Uu9A8CWQUqYCofts7e9cSHD6bSVAFpChGK9am
E2RWm3dOAZWXxvG7aT+p9x8KiLbrfn31FUFWLnUKqB84Syh5SJAuBk1IBTQH
Gr1YT/uTjXfTCLg52OhDZBDheB4BD76RwrG6BEuYuPCOAHP7AS+WNRAcyAIj
AswKDtw3pPNBQtNyx/kIyH9aPevnaD63v4mA1OJT8jVTCRbqMDNEwMjkXvuC
nQT5jNz7IsBxzFrPrEKCwSwQI+HpoNFjV1URLg8i4ZDHj1FFtJ7Y7YhPJJjM
sTWvtSDIxtmWSLAIBq8Ua4IMXSS5kZBjY2/qS59X758iQbMnKvFSH4W0WGjk
R0J6/XbB0xEDUYP9LAWrNkHUpEyC/wdTj9vn
                    "]]}, {}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 GridLines->{{50., 100., 150., 200., 250., 300.}, {{-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-3.6989700043360187`, 
                    GrayLevel[0.8501]}, {-3.397940008672037, 
                    GrayLevel[0.8501]}, {-3.2218487496163557`, 
                    GrayLevel[0.8501]}, {-3.096910013008056, 
                    GrayLevel[0.8501]}, {-2.6989700043360183`, 
                    GrayLevel[0.8501]}, {-2.397940008672037, 
                    GrayLevel[0.8501]}, {-2.221848749616356, 
                    GrayLevel[0.8501]}, {-2.0969100130080562`, 
                    GrayLevel[0.8501]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 
                 PlotRange->{{
                   0, 200.004}, {-3.8270000000000004`, -1.0730000000000002`}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{-2, -2}, {50., -1.0730000000000002`}], {1., 1.}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{-2, -2}, {100., -1.0730000000000002`}], {1., 1.}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    Offset[{-2, -2}, {150., -1.0730000000000002`}], {1., 1.}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, -2}, {200., -1.0730000000000002`}], {1., 1.}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    Offset[{-2, -2}, {250., -1.0730000000000002`}], {1., 1.}], 
                    InsetBox[
                    FormBox["300", TraditionalForm], 
                    Offset[{-2, -2}, {300., -1.0730000000000002`}], {1., 
                    1.}]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox[
             StyleBox[
              RowBox[{
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.083, 1., 1.],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.59, 0.7, 0.75],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
              FontFamily->"Verdana",
              FontSize->8,
              FontColor->GrayLevel[0.4]],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.781819657591014*^9, {3.781819798164522*^9, 3.78181981575238*^9}, 
   3.781820734692082*^9, 3.7818209338606186`*^9, 3.7818214572880297`*^9, 
   3.7818726662812767`*^9, 3.7818739530858765`*^9, 3.781883543745262*^9, {
   3.781884218429228*^9, 3.781884230155255*^9}, {3.781885347096342*^9, 
   3.7818853549781847`*^9}, 3.7818864698359127`*^9, 3.781888623368956*^9, 
   3.7818926180516825`*^9, 3.781893059367241*^9, 3.7818941247908187`*^9, 
   3.781894314075241*^9, 3.7818961486191683`*^9, 3.781900780211514*^9, 
   3.781974302725628*^9, 3.7820452354160023`*^9, 3.7825675836646304`*^9, 
   3.7825676634859147`*^9, {3.782586679023322*^9, 3.7825866962271957`*^9}, 
   3.78258903582844*^9, {3.7825899242321377`*^9, 3.782589948273139*^9}, {
   3.7825903137384124`*^9, 3.782590319790265*^9}, 3.7825912427057147`*^9, 
   3.782593051952277*^9, {3.7825938304703355`*^9, 3.7825938541147256`*^9}, 
   3.782749320501437*^9, {3.7828456512502036`*^9, 3.7828456791633854`*^9}, {
   3.7828702051901426`*^9, 3.78287022288227*^9}, {3.782907741147286*^9, 
   3.7829077496174793`*^9}, {3.7829113829819937`*^9, 3.7829114148063183`*^9}, 
   3.782997626816538*^9, 3.7829978532891693`*^9, 3.782998971261459*^9, 
   3.782999584352995*^9, 3.783001170054304*^9, 3.783002154648147*^9, 
   3.7830057261935964`*^9, 3.783005982148239*^9, 3.7830069276351843`*^9, 
   3.783009048001927*^9, 3.7830097551280003`*^9, {3.783009861680696*^9, 
   3.7830098762633357`*^9}, 3.783010144286972*^9, 3.7830105404234*^9, 
   3.783010763507625*^9, 3.783011552725809*^9, 3.7830128432004967`*^9, 
   3.7830130678017416`*^9, 3.7830133744728284`*^9, 3.783013497995615*^9, 
   3.7830258330085354`*^9, 3.7830260176070385`*^9, 3.783027011564155*^9, 
   3.783190081817548*^9, 3.783191059595582*^9, 3.78319246968909*^9, 
   3.783193157977416*^9, 3.783194484156207*^9, {3.7831973189719696`*^9, 
   3.7831973213987117`*^9}, 3.7832036907437887`*^9, 3.7832037638336115`*^9, 
   3.7832048779524264`*^9, 3.78320751984641*^9, 3.783217926028*^9, 
   3.783218142414867*^9, 3.78321839294759*^9, {3.78327362324121*^9, 
   3.7832736249666443`*^9}, {3.783274424414266*^9, 3.7832744270357323`*^9}, 
   3.7832750705312862`*^9, 3.7832752518293056`*^9, 3.783277639991094*^9, 
   3.783280296023542*^9, 3.7832814954583693`*^9, 3.783281757072729*^9, 
   3.7832829726749*^9, 3.783283058669615*^9, {3.783284264946699*^9, 
   3.783284277884034*^9}, 3.783285515573213*^9, 3.783287117489002*^9, 
   3.7832902986228943`*^9, 3.783290344413975*^9, {3.783293311079661*^9, 
   3.783293324667001*^9}, 3.7833409610550203`*^9, 3.783394892176585*^9, 
   3.783465746125546*^9, 3.783468672573711*^9, 3.783472864249618*^9, 
   3.783477011353147*^9, 3.7834771592898808`*^9, 3.783480239439871*^9, 
   3.78351137204666*^9, 3.7835189996500893`*^9, 3.783562992042324*^9, 
   3.7835657575648403`*^9, 3.7836001102380342`*^9, 3.7836001678021708`*^9, 
   3.7836080979051523`*^9, 3.783619034047523*^9, 3.783649194272547*^9, 
   3.7836561100007267`*^9, 3.783692562425047*^9, {3.783701991948495*^9, 
   3.7837020199880147`*^9}, 3.783703688979797*^9, 3.78372515243003*^9, 
   3.783737019837025*^9, 3.783737431216527*^9, 3.783738670867242*^9, 
   3.7837397178404226`*^9, 3.7837742255904474`*^9, 3.783795317389064*^9, 
   3.7837960671941366`*^9, 3.7837969243175898`*^9, 3.783797460555337*^9, 
   3.78379797016588*^9, 3.7838002659536085`*^9, 3.783804672522829*^9, 
   3.7838089186366673`*^9, 3.7838107497075043`*^9, 3.783811609072607*^9, {
   3.783811678458809*^9, 3.783811689544629*^9}, 3.783817092448333*^9, 
   3.783817127294243*^9, 3.783819079135426*^9, 3.783820539823944*^9, 
   3.7838206490443487`*^9, 3.783822034078039*^9, 3.7838226970592527`*^9, 
   3.783822797716889*^9, 3.783823093313999*^9, 3.783823396162393*^9, 
   3.783823649609913*^9, 3.783862850839457*^9, 3.783863252202148*^9, 
   3.783863417941271*^9, 3.783863576146488*^9, 3.7838645803811197`*^9, 
   3.783864702069891*^9, 3.783981447044896*^9, 3.7839818533996468`*^9, 
   3.783982398581468*^9, 3.784149112920105*^9, 3.784149245432629*^9, 
   3.7841493259707527`*^9, 3.784154228543049*^9, 3.784154925203323*^9, {
   3.784155975995377*^9, 3.784155982873434*^9}, 3.78415984947371*^9, 
   3.784161108369577*^9, 3.784161174677672*^9, 3.784161552912733*^9, 
   3.784165087002655*^9, 3.7841651855878773`*^9, {3.784165224151989*^9, 
   3.784165237136322*^9}, 3.784165399510785*^9, 3.7842551031267653`*^9, 
   3.7842552027863073`*^9, 3.784255462273888*^9, 3.784312221746174*^9, 
   3.784315049465148*^9, 3.784315305735365*^9, 3.7843163037393084`*^9, 
   3.784316678620257*^9, 3.7843211028168287`*^9, 3.784342694366539*^9, 
   3.7843463049587727`*^9, 3.78434896724144*^9, 3.7849229807594347`*^9, 
   3.784928498423119*^9, 3.784934409520994*^9, 3.785009212802827*^9, 
   3.785172447433838*^9, 3.7851810141721044`*^9, 3.7851839823399715`*^9, 
   3.785680225174706*^9, 3.785681880395076*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"fcecb093-bfab-4a5f-be8f-45063a99ed20"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "25000"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "200"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"time:\"", "\"4.4min\""}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "6096"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "8000"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"validation examples:\"", "2048"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "1600000"},
                "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "64"}, 
               "RowWithSeparators"],"\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"4.1\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], 0.00004098008859766142, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            
            TemplateBox[{
             TemplateBox[{5}, "Spacer1"],StyleBox["\"validation\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"5.17\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], 5.1688916644839565`*^-6,
                   AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJw1lgtYTGkYx7tQGlNzzpnIrdwSFV2RbnrTXbrXdJVmmqkR5S5JSiiUpdiQ
W4jWsiiXrdC8Soo2281l1VpLupC7tlhpzzmdnWfmmefMnJnv/d73///9v8mS
Ff4yFSUlpVr6xbx/NnzjeCj2pcMd18G8Yds+KYauex3cIAP1jD4rEv9a9aFE
UwmO/5D528k5nxWr1spzU2/xYIvNhux3qz8rrm27OPZMOQVuW6viE55+5n4/
CkSv2l9un9CnsPjdKC5bewz05O7szS7vV1yi716doAtx2+YRxh0DitEle7fP
lE6Gt/78eneeEg793xRYf/352wpNZQwKvv/LRFIfTnqWBgYnKOO+byMfUhUG
UBeUPk1aooxNJzy+D19mCIbyuDGCdmUcqs8IXEb/bNVCqCDhlmnwRWcmCDac
Upi7qKBPz23vntsm8MmmQslQpoI17luuvys1g85Vl85936aCQ/WYg8PsxNCj
B1UwZnyBz1KBBXwNS7EdUamCw99WvHgus4Rjs3cmvRmrioX4Z2LEjdng7VFR
YGKmikP7nwNVNy7+aLdKFZ3ZgucCWJTHG7eq4gsZ84dWEJz60ES1SxXT59nM
vquYBxcby1yDpg3j9mMNJ+xVfZZmDMPJI0NrF4y2gSt5sbctg4bjLWa55bbA
O1FQZ9Q0HKMu5b2fU2UHLz099MaXq+NQf+0h9wpp31KpjoPpV+mOzofJ/zgl
FZRp4LGgljGGKx2gJYVXnhrMw4n7k0R+0QAmF3SCc27zuH4A3LhFyBskfEwY
2DHpBy1HKE48cSPBaSRWxBx8da/MEcZQpjxeAh+1GoquqMsWgM3pqJRHhiO5
+S0A4Qz1+vK7WrjY+tfNzoQT9B/8nGZvrYW/nLxDr+AEE97kHqwxFOAAM84Y
ZzCK7jRuVdPi+ukMYt2RbyZ6ELho3cu2r6QLJN3NdHGs18QjTz+fsbrpAq0L
rNsV9QJ87TaMHrkrNI8oyWxLJjh9uMJc6yt9lVEk2hYL6acbzODnbSJbBZg1
bio9QjcodfKdnKrHxydbGYW6Q8/MLGlji4CbhzukqVsXry8i0IiVsweYxLZ5
6h4icCPdrUL0ABu5897ZfiTeVUTN+nvZQhitcY8gVQlOfwvB7IWDz7UmAsca
ruzT1fGEjOpvfO1HAmS+Dav0BOWUfQt27tLC0n9/yDoQvwjW8hTV3VKCm+ci
cFYyrlloT+IIGTMxLyioubipQZ9A1g63vSDw4IB3SC6JRVY3u71WeIPo1NrO
dWokp29vqAz85i2YS2JfwW+Xd43zAak+/9+yJ5roymtLqan2AcO+tDeZVzWx
rqx3avo8X8hM7c7t2kNwevAFe7362BPaFK5hBeALD1ojPp2SCHE8074XvrBs
rO7O9EISKx/xAxZb+0HrzeKK7a9Jzj9+sOH7A1/lFQTS5qe36Adf1sjfoTaB
lOME3fx2P3iU/9acBySWM8vb+MPNr0pk0yyC05M/bCtS/Z6+m0TJz8adD/f4
Aynz8E88RqDGEktaEvT9e7Y8NsnSQna8tgHw+sj96QmeFOfPAIjXL67NEVHI
uKdkbwA0DZoklT7VQuWUhcm+HQGgrOj98qeMxLPm/s/e2gbCHNu1A5/6KU6P
gVCnKCzqvkqgb0eoy+6cQIg0Sywe95MA+/PFdEWB8GdYXfjmUAoZOtyzC4K+
C+KL2RNIzv9BcPvVpRadOyS6M/LMDYL1nZtTRQZCfF+64Q+1riC4u8a0+aMa
gQfj0+aftheBdOJGzTZnktOzCIqydhRl0PtzmLLjlNM+ETx72NVm7qaJdDNG
PO8SgWWGlZZXsxD30OpJmx8M7xNqDX9cL+T4Egx7hbaD+1SEaAXHm/T2B8Py
Gkus2E7hX4x9uoNBr6rhyZxiAjPOXjgS7hACyTnKDfHJAs4PIXC2XX55OaGN
JpHXlL/uDwF/rXDjxylCZLpz8FUIGOeZbl9hTuLmmuq6uRAKw0XGjTM3Czh+
hcK1Z1Pt3jtRaLCp3uzBj6EgzrSLrJ0sQOZqzetQaPdx77Kn62Ht7RgG2Ulb
5fG/Cjk/hcEwnbsdjwMppMWy5FJeGKTeGzQ/biPEakbdPWGgJqq6ft6MwHhV
puPh8LixZbkoTZPjYzh0dIxB8S4KR7EGCweDTwF9vQUU3ljO/CAc1IRjO9br
UShlARsBTlbrbD42UZwfI2CRRcL3zBZN5LMbjoAJLXUl4QkEXtnFACQCphye
N75GjcIIdkCLYbCwblJYsZDj72Jw9Fpa+PtqIbLlHVoMO0Jfn69fp4XnfmIE
txgmvaTm/24hxAAWkJHgllxA7CwScn6OhOFxu66XN5H4L8kYJhJW7H5dk8wj
8BSDz3eRUDMlL6tLhURGzaEuSyD48uAySRfJ8X0JBC6rfvCblgA/moZ49ucv
gaxv9ZMalYTItvP9EmhUPdr9vprEEwwepkaBfVrNpXHuFMeDKOBHChu3jKOw
l5GLVxRYfSv78DJegB5MPGyIAmrZL/wXeSQeDWcaEAUp8zX0DmsLufyIgpzi
aTk8Vwo/zKkKDL4fBZXNWWvHZxHozAZyFBgU7VyuQ++HSZPeqWLoy80cm+9N
cTwRw1vPj1pjRgpxCGdiGO44jZwQRyEr5yQxGOSmzgxOopDFVaEYZoBp99Ll
BJdPYnAwUjyxSiOwK4BRtBjOTPp1d+koEu1YQYshmfAcYUYRuJd2U4O+BKY6
rTLzDPyfRxIwyki3G7WaxPbnjKEkIHlp6/94L4XzmPFslIBXYlz14x4Ksxn7
nZZA5IVE8jLNg6H8k4B2T1jkKlov7PGpQQIBK5RndLqTaMkGmgQsxyzmr6wh
kTmdnJ8WDaJr4+r0ppMcz6Kh07b/dXYJia1KDLCiYfOHW7UVASSash9Eg7bT
U/7fiwjcysT7mWjg3fx42ojm5VC+RgNfpkYkPxDgIwYXDdHwT9N+zbhzFBqz
QI6G8zcdLEJiBJjKDkQKX8TufNJRyPFQChHVCQ8bbIXYrMd0WAr+8m5NHZ4Q
pzPlbpLCd6OLs/zi+Lix+TCdyFIoTIy+qX+L4PJbCuEDpzQu/iVENq4apXDo
j5M5ZaCNLM6+SaHjUJtnML3eesl0+imD2ob03n/wf57KIN/IO/iQNYn37BjH
yKD9+sTmZ5FC1NNhOiAD3gG/+zECElcz7S2SgUP//FUEQXLnAxmIRVNnvZlE
4h2aTsebZODxJDnyOM37cYw9B2SwUPUIWeIpxAQGvzNiIE2j9ugRC5LjcQx8
Ej2p119JIR3WtCJjYJPXYc0DHjRP5jAJGgNupTn1D/oJZKo991MMqDsRispO
Te78QV+7kqYhBhSycmmOgT2Gn3IjD1BIN4MmZAy0DvxhRDpQyMa7YSwsfTKs
TrDtf57HgkX+/qve/UIsY+IiIBbU29567jajUJMFRixkrfGpT/5IoJimZcbZ
WFiob7lmTy3JnW9iofBYnuNYJPGqOrNCLJxWHPK57qyFGozcB2OhS9dOcHud
ECNYIMrBpL1HY+cakssDOTzbnbxtppRE9jgSKAf/qvyGPQVCZOMsVQ5l8/Te
6LZSyNBF/LMcqlrshpnaktz5SQ6LFi7IGllHIi0WGvlyML/yIfaEmEQl9rEU
HhSOKC7LJvE/CAW+lA==
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1:eJw1lgtcTHkbx6dSqaZm5pwZ5VIuFUXoRheph+6odL9Mt5lmuiktdjcsJbZ4
N7tKiYgVtlBIkrJdHhtS1mXrpbUuUSvdCYkS7zmn887nzGc+Z2bO//I8v9/3
958tTfKRK3I4nFvUm/58bzywIj/mpcM+80Id0/539RP3ww4XTh8Mq3rzrj65
fcNQuSYHMP7m2S3E+/oN38buT72mDr98iEpsTHxfX/njhalFVwkwqvvibVQ3
zD4vgoIr6RmOBSP15vfmx+8V6oAX525gr81YfRn1743rdaFmXnakAo+DU8qz
0k1ks4FjlZ5x7A0HJ8abAxb9DeDnqYD+gXfPzRQYgNmrGX0bKxUw57PGQ6Ju
LryY2zSnuE8BWwrdvyivM4btC1Tapjkq4sT65oN5dOH4yShF5LvunvtJ2wQU
X+5Nw32K6NV/3bP/+iLwPNxjnV2liI1uab+/rjIFwaB56aVbiux6zKDV57FJ
4QwljJ5+3CuOZw7zx5VEB98qovJgXWeH3AKyjHY+eGSkhKfwaXJojSXMPGdp
qtuhhBP7XwK5pq3iIsEkdGIWvBTIimbTu3aTsFNOD2gFOtlNcbFvlHCnta1l
U701KFlVz+BsnsTuxwZcQm3s6k2VcbZG8K2VU2zhVYU80C5cGa/R0yUsg+yW
H7bfuqqCkWV5b5Y02IFapkxHlj8ZJ+q7HM7L3OfGrVDHrzsvUxW1hymGCXMa
/1bHY/7/1TH+xgG+mLXfybHXwJm5WwK8owB2HJx1Y85FDbYeAK8+d8nfnufi
+vE9s37RWgEvBjJSSxu5WBd9qLe5egW8hoZNa9KUUet+cYWqfCW8O1XsqcPh
sf1bCSHxj9ps5RoYZnMlxYnvCL3NsWscjLl47sRNagZHmDrgeuTELD6O0+2M
dgL7qrSBTFsuW08nMIztIw228XHNdy+fjAqc4ZyyuHh/uiYWPHtfZFXrDDfl
FwZ9UwTY5zqJarkLvOyJdleNFLD6cIGMY6OFp9UJXHaRpC5X2NZdbSVz5mLm
NH2qha7Q8Ul6oalSE//ZRSvUDYoPTpYUlvPZfrhBmd7oxyExgfMZObtDhH3Z
AWUU4FaqWqfQHZy/mvF3KXKxqT5y4Yt1q6DvsK7FoiM8Vn+rwH/QOOe4Ch+n
Gn8zoqu9Gi7WDunvTuYi/WvIH6vB28c7wbqTh1Vjv2QeTFwDldklXSHtPLaf
ayDyecurOQE8nCynO+YBulvGA9WvCJCxw3UPKL1SosOfRWCxVW2PR5In2IR+
Hv/7jIDVtydkO5R+FStp4sjxPy/9NM0L2k+63k96q4Eu6k+2N97wgrzhweH5
FgTerh7W32m9Foz3f9At0iZZPawFuwDV9NdeQtzECGAtLB0ud+62JnE6Xb7O
tTBenUlkxBH4RxvXN8zGGzhkbYuhv4D1jzcsaGpUc8zQQMr81Ba94ZpVqXnJ
CwKJFTN0D//rDZ2VCmYaDgRepae39YHbWr9mGacQrJ58IPPG2ZrycwRKzy54
9XCfD+h31F+vdyNQLcKCkoQPqKXlixZfIJBp7zJfMBp3Uk34Tsj60xfiFl65
OHaNRNo95Vm+INtUfD7uWy4qbF/1w9ouX7hc67j5d64Qz5j5PB9c5gcLfHM6
nwpJVo9+UKSd/fDvHB6u7Qp2/jnbD5TXPZs5minCj4cl1Ir8wEdoJO3KJZGm
Q7OdPwz9nrS47FsB639/6C+e2tVqQqAbLc/9/pD3MNAsJ5HEN1WbH6l0+8PL
hNNdSgI+HkrcYf/b8gBorHzXSu4lWD0HQPzukiUqqzXQYc6ek445AeAbr3bx
7EIRUsWY3NEdADaebf/JtSJxH6WeHfaB4H16B5dvLWL5Egg+LStrRzcI0Ap+
bdHLDQS4PjZ6tIvAdto+PYGQNbW/p3sXDzPOnC8QOwQBuGil8TtJ1g9B8LL0
+XRZJYmLwisVRnODIHdrkmbVISHS1TnUGwTtDdlf/tHWwJTGG7eXQjD89nzl
/Uv9PJZfwfB01kpJwlsBzt12x/TBgWAocWn4olcgQPpuU18wJGpn7j6WIULG
3itCIC93bvmzjSLWTyHQm/vMSLmWREosEWV5IbDKUd9a14nEG7S6+0PAzeut
/8lMLUxUoisuhvUd4fW33UUsH8UgEgcabG3go4gxmBi09dIrVGQCrEmgHxCD
j3uFbNN5EmUMYENhWoOlghflpwk/hkL+Y+nDsjw+cpkNh8LSzi2r9wiEWPET
DZBQmH7Uf43TAxJDmQaFwd2YzEeOT0Qsf8NAuVVPfaumFjLLyw+D9gKVnw2o
+UtO04ILg09JbVXHqH74MoAMh6fKKfmf+kjWz+FwN+3Hvz7mEjgmoA0TDrO+
fyxe9l4LT9L4fB0OFs92qmUmk0irOdg5Apq5kx11U/gs3yPg1Jg8faCah28X
B63+eDgCgu3PxVXvEyJTzjcREOr+5bDeKgEW0njQj4R42wDLz09IlgeR8Ffk
9jGFewIcpuXiEQmhppcqrJJ56E7Hw+ZICOkeMVy4SYhHxXQBIqGw+si2JkM+
mx+RYHXjOdGzjsChJQ1+gXcjQZXT1L7YRoBOTCBHQrlBk13on5T+qTQZ1peA
54EmD4UAIcsTCQzx94XUThfhBM4k8GLkw4eROhIZOW+RgHdVbUqQH4EMrk5J
gFRNDfO1ErD5JIHu2kf3a77ysduXVrQE/Ff3nLBKJtCOEbQEKp72Lw86qoVZ
lJvuG0hhtvSmefQyIcsjKdiJPx3P9yLw3w7aUFJoDUvKPXCdQGu6PVul0P4h
+8s8yg97afv9JoUTYRE2d24RbP5JwWbmAbElj4/M8em+FDbPbT/u5USgBRNo
UghI6bM8VyRA+nRSahgFNSWpP5W9/j/PouBruvcl3lIRPubQwIqC2N7el3Wu
JC5mvogCTY/Zsn//IXEXHe9FUXBh1WDBsUk8Nl+j4EPQ2nfjJwlso3FxPwqW
tF93q8vj4QIGyFHws+rFUQMlElOZhshAd1OhqeUkEctDGeS3RqwuuUdgqx5d
YRmEnE6SNZkIcB693G0yuGZp+qQ2WQ23th6hElkGHdusP46kC9n8lkGOZPOC
iBYhMnH1lwxcDt/ycJ0tQgZnn2XQraxkfzOJxO+l86hLDvJnpWP2IUKWp3JI
cxlexHEksdmOdowclsQ/4YqKRainTVdADmdv/mmid0mAG+nyFstBb29l5eM2
gj0fyGHa7ssZARmaeJOi068tcujzyLK0vEPiNNqe43JYWrenhnTm43oav0bR
8GyvuV54DcnyOBrSsk0edD8VIBXWlCKjYU/QE6vv5whQtIRO0Gg4sW9k6Tu+
BtKrLTkdDVuL1mUlP+Sz549ocOt94MDZKURGLq3RcG9gSOtYAYFUMShCUuNz
54V9ukogE+/GMZDVmzhuf1HI8jwGGlO1fS11Saym48I3BjxwPU9/P4GaDDBi
4PiUjXqfeAKUULTMOBMD01vaFzWbC9nzTQzErywdt3igjpdV6RliYP7MBo3l
JiSq0XL/GgOKZQ0xB8KEGMoAMRZSu3TXn03QZPMgFtp3L+8YUKJ4Rh9H/GJh
h9jMqNyWQCbOUmNhb3VJzvYNBNJ0kZyNBUnbWPWGMoI9P8XCqxd2KovnkUiJ
hUJ+LNj61q9xqyKQw7ziQDn2lcEPhiL8H6ld1Bs=
                    "]]}, {}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 GridLines->{{50., 100., 150., 200., 250., 300.}, {{-6., 
                    GrayLevel[0.3001]}, {-5., 
                    GrayLevel[0.3001]}, {-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 PlotRange->{{0, 200.004}, {-5.747, -0.953}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{-2, -2}, {50., -0.953}], {1., 1.}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{-2, -2}, {100., -0.953}], {1., 1.}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    Offset[{-2, -2}, {150., -0.953}], {1., 1.}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, -2}, {200., -0.953}], {1., 1.}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    Offset[{-2, -2}, {250., -0.953}], {1., 1.}], 
                    InsetBox[
                    FormBox["300", TraditionalForm], 
                    Offset[{-2, -2}, {300., -0.953}], {1., 1.}]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox[
             StyleBox[
              RowBox[{
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.083, 1., 1.],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.59, 0.7, 0.75],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
              FontFamily->"Verdana",
              FontSize->8,
              FontColor->GrayLevel[0.4]],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.781819657591014*^9, {3.781819798164522*^9, 3.78181981575238*^9}, 
   3.781820734692082*^9, 3.7818209338606186`*^9, 3.7818214572880297`*^9, 
   3.7818726662812767`*^9, 3.7818739530858765`*^9, 3.781883543745262*^9, {
   3.781884218429228*^9, 3.781884230155255*^9}, {3.781885347096342*^9, 
   3.7818853549781847`*^9}, 3.7818864698359127`*^9, 3.781888623368956*^9, 
   3.7818926180516825`*^9, 3.781893059367241*^9, 3.7818941247908187`*^9, 
   3.781894314075241*^9, 3.7818961486191683`*^9, 3.781900780211514*^9, 
   3.781974302725628*^9, 3.7820452354160023`*^9, 3.7825675836646304`*^9, 
   3.7825676634859147`*^9, {3.782586679023322*^9, 3.7825866962271957`*^9}, 
   3.78258903582844*^9, {3.7825899242321377`*^9, 3.782589948273139*^9}, {
   3.7825903137384124`*^9, 3.782590319790265*^9}, 3.7825912427057147`*^9, 
   3.782593051952277*^9, {3.7825938304703355`*^9, 3.7825938541147256`*^9}, 
   3.782749320501437*^9, {3.7828456512502036`*^9, 3.7828456791633854`*^9}, {
   3.7828702051901426`*^9, 3.78287022288227*^9}, {3.782907741147286*^9, 
   3.7829077496174793`*^9}, {3.7829113829819937`*^9, 3.7829114148063183`*^9}, 
   3.782997626816538*^9, 3.7829978532891693`*^9, 3.782998971261459*^9, 
   3.782999584352995*^9, 3.783001170054304*^9, 3.783002154648147*^9, 
   3.7830057261935964`*^9, 3.783005982148239*^9, 3.7830069276351843`*^9, 
   3.783009048001927*^9, 3.7830097551280003`*^9, {3.783009861680696*^9, 
   3.7830098762633357`*^9}, 3.783010144286972*^9, 3.7830105404234*^9, 
   3.783010763507625*^9, 3.783011552725809*^9, 3.7830128432004967`*^9, 
   3.7830130678017416`*^9, 3.7830133744728284`*^9, 3.783013497995615*^9, 
   3.7830258330085354`*^9, 3.7830260176070385`*^9, 3.783027011564155*^9, 
   3.783190081817548*^9, 3.783191059595582*^9, 3.78319246968909*^9, 
   3.783193157977416*^9, 3.783194484156207*^9, {3.7831973189719696`*^9, 
   3.7831973213987117`*^9}, 3.7832036907437887`*^9, 3.7832037638336115`*^9, 
   3.7832048779524264`*^9, 3.78320751984641*^9, 3.783217926028*^9, 
   3.783218142414867*^9, 3.78321839294759*^9, {3.78327362324121*^9, 
   3.7832736249666443`*^9}, {3.783274424414266*^9, 3.7832744270357323`*^9}, 
   3.7832750705312862`*^9, 3.7832752518293056`*^9, 3.783277639991094*^9, 
   3.783280296023542*^9, 3.7832814954583693`*^9, 3.783281757072729*^9, 
   3.7832829726749*^9, 3.783283058669615*^9, {3.783284264946699*^9, 
   3.783284277884034*^9}, 3.783285515573213*^9, 3.783287117489002*^9, 
   3.7832902986228943`*^9, 3.783290344413975*^9, {3.783293311079661*^9, 
   3.783293324667001*^9}, 3.7833409610550203`*^9, 3.783394892176585*^9, 
   3.783465746125546*^9, 3.783468672573711*^9, 3.783472864249618*^9, 
   3.783477011353147*^9, 3.7834771592898808`*^9, 3.783480239439871*^9, 
   3.78351137204666*^9, 3.7835189996500893`*^9, 3.783562992042324*^9, 
   3.7835657575648403`*^9, 3.7836001102380342`*^9, 3.7836001678021708`*^9, 
   3.7836080979051523`*^9, 3.783619034047523*^9, 3.783649194272547*^9, 
   3.7836561100007267`*^9, 3.783692562425047*^9, {3.783701991948495*^9, 
   3.7837020199880147`*^9}, 3.783703688979797*^9, 3.78372515243003*^9, 
   3.783737019837025*^9, 3.783737431216527*^9, 3.783738670867242*^9, 
   3.7837397178404226`*^9, 3.7837742255904474`*^9, 3.783795317389064*^9, 
   3.7837960671941366`*^9, 3.7837969243175898`*^9, 3.783797460555337*^9, 
   3.78379797016588*^9, 3.7838002659536085`*^9, 3.783804672522829*^9, 
   3.7838089186366673`*^9, 3.7838107497075043`*^9, 3.783811609072607*^9, {
   3.783811678458809*^9, 3.783811689544629*^9}, 3.783817092448333*^9, 
   3.783817127294243*^9, 3.783819079135426*^9, 3.783820539823944*^9, 
   3.7838206490443487`*^9, 3.783822034078039*^9, 3.7838226970592527`*^9, 
   3.783822797716889*^9, 3.783823093313999*^9, 3.783823396162393*^9, 
   3.783823649609913*^9, 3.783862850839457*^9, 3.783863252202148*^9, 
   3.783863417941271*^9, 3.783863576146488*^9, 3.7838645803811197`*^9, 
   3.783864702069891*^9, 3.783981447044896*^9, 3.7839818533996468`*^9, 
   3.783982398581468*^9, 3.784149112920105*^9, 3.784149245432629*^9, 
   3.7841493259707527`*^9, 3.784154228543049*^9, 3.784154925203323*^9, {
   3.784155975995377*^9, 3.784155982873434*^9}, 3.78415984947371*^9, 
   3.784161108369577*^9, 3.784161174677672*^9, 3.784161552912733*^9, 
   3.784165087002655*^9, 3.7841651855878773`*^9, {3.784165224151989*^9, 
   3.784165237136322*^9}, 3.784165399510785*^9, 3.7842551031267653`*^9, 
   3.7842552027863073`*^9, 3.784255462273888*^9, 3.784312221746174*^9, 
   3.784315049465148*^9, 3.784315305735365*^9, 3.7843163037393084`*^9, 
   3.784316678620257*^9, 3.7843211028168287`*^9, 3.784342694366539*^9, 
   3.7843463049587727`*^9, 3.78434896724144*^9, 3.7849229807594347`*^9, 
   3.784928498423119*^9, 3.784934409520994*^9, 3.785009212802827*^9, 
   3.785172447433838*^9, 3.7851810141721044`*^9, 3.7851839823399715`*^9, 
   3.785680225174706*^9, 3.785681880418922*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"941414f3-caaa-4c8f-9b15-75b2afa2227e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<gauss-cubed_lstm-mera_statistical.mx\>\""}], ",", 
    "\"\<Global`\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.746978389129543*^9, 3.746978474256748*^9}, {
   3.746997509195533*^9, 3.746997511181404*^9}, 3.7470057848337507`*^9, {
   3.7470060399400263`*^9, 3.74700604097127*^9}, {3.747006277995798*^9, 
   3.747006278868507*^9}, {3.7472472876247983`*^9, 3.747247288031706*^9}, {
   3.771436510618305*^9, 3.7714365195470095`*^9}, {3.780423307694572*^9, 
   3.780423322805951*^9}, {3.7809195564710865`*^9, 3.780919556642937*^9}, {
   3.781027332570813*^9, 3.7810273330668187`*^9}, {3.781028872927393*^9, 
   3.781028873787055*^9}, {3.781031556053041*^9, 3.7810315570996647`*^9}, {
   3.781812500697687*^9, 3.7818125011511126`*^9}, 3.7818196321275826`*^9, 
   3.7818214826635537`*^9, {3.7818810265490074`*^9, 3.7818810288383894`*^9}, {
   3.781884239059041*^9, 3.781884242816581*^9}, {3.781885360973466*^9, 
   3.781885361762451*^9}, {3.7818860652071967`*^9, 3.7818860653074455`*^9}, {
   3.7818886763801126`*^9, 3.781888680045033*^9}, {3.781892595718862*^9, 
   3.7818925960532618`*^9}, {3.781893083231637*^9, 3.7818930858743734`*^9}, {
   3.781894147870837*^9, 3.7818941486935396`*^9}, {3.781894707498375*^9, 
   3.781894707795327*^9}, {3.7820465920059757`*^9, 3.7820466055793657`*^9}, 
   3.7825676702367306`*^9, {3.7825692291606455`*^9, 3.7825692402808466`*^9}, {
   3.782590022127113*^9, 3.782590024511178*^9}, 3.782593047372823*^9, {
   3.782593092919603*^9, 3.7825931182106867`*^9}, {3.7827495178232255`*^9, 
   3.782749523569257*^9}, 3.782772796767874*^9, 3.7828398651909223`*^9, {
   3.7828456903415775`*^9, 3.7828456916752715`*^9}, {3.782870614718022*^9, 
   3.7828706256548243`*^9}, 3.782871604437188*^9, 3.7829978245723333`*^9, {
   3.7830069199398146`*^9, 3.783006923067314*^9}, {3.783009749130859*^9, 
   3.7830097500936317`*^9}, {3.7830105936889825`*^9, 3.7830105940248933`*^9}, 
   3.7830108540029097`*^9, 3.783013147907347*^9, 3.7830135042855234`*^9, {
   3.783026008033124*^9, 3.7830260137549853`*^9}, {3.7830270893019094`*^9, 
   3.7830271036578684`*^9}, {3.7831900994058933`*^9, 3.783190099878585*^9}, {
   3.7831913203488383`*^9, 3.7831913205070944`*^9}, {3.7831924791603184`*^9, 
   3.783192479573965*^9}, 3.783194487898596*^9, {3.7831973244744706`*^9, 
   3.783197324589389*^9}, {3.7832023168466053`*^9, 3.7832023175737395`*^9}, 
   3.7832050924353056`*^9, {3.783216094464547*^9, 3.783216095666851*^9}, 
   3.783218156731564*^9, {3.783273879036089*^9, 3.783273881227353*^9}, {
   3.783274508669754*^9, 3.783274509651095*^9}, 3.78327775093044*^9, {
   3.7832802572366333`*^9, 3.7832802647630167`*^9}, {3.78328176070045*^9, 
   3.783281760906749*^9}, 3.783283076716517*^9, {3.783284229742874*^9, 
   3.783284229772793*^9}, 3.783287159872096*^9, {3.783289226025072*^9, 
   3.783289226350395*^9}, {3.783337897572549*^9, 3.783337899133939*^9}, {
   3.783391835305357*^9, 3.783391838119873*^9}, {3.783464193751824*^9, 
   3.783464198021817*^9}, {3.783477466991707*^9, 3.7834774682779913`*^9}, {
   3.783564890663208*^9, 3.783564893493416*^9}, 3.7836001797229977`*^9, {
   3.7836081020527763`*^9, 3.783608105265421*^9}, 3.783608183136908*^9, 
   3.783619796729814*^9, 3.7836254436566*^9, {3.7836258717613497`*^9, 
   3.783625874007721*^9}, {3.783650775006461*^9, 3.7836507779662933`*^9}, {
   3.7836516641494727`*^9, 3.78365166447781*^9}, {3.7836922841611576`*^9, 
   3.7836923048735123`*^9}, {3.783702244875139*^9, 3.783702246233276*^9}, {
   3.783738707676876*^9, 3.7837387077866917`*^9}, 3.7837387937771616`*^9, {
   3.7837393681813755`*^9, 3.783739368384453*^9}, {3.7837742713536215`*^9, 
   3.7837742926629386`*^9}, {3.7837949484203763`*^9, 
   3.7837949511215253`*^9}, {3.7837974674067574`*^9, 
   3.7837974707491827`*^9}, {3.783797973973476*^9, 3.7837979752366943`*^9}, {
   3.7838107946434183`*^9, 3.783810799751976*^9}, 3.78381165675189*^9, 
   3.783817101153884*^9, {3.783819107981433*^9, 3.783819134461794*^9}, {
   3.783822811739606*^9, 3.783822816531753*^9}, 3.78382310274824*^9, {
   3.7838233093246307`*^9, 3.78382331077929*^9}, {3.783823659804843*^9, 
   3.783823683813664*^9}, {3.783863461906012*^9, 3.78386346341997*^9}, {
   3.783981412223774*^9, 3.7839814186473217`*^9}, {3.784155014183626*^9, 
   3.784155014598555*^9}, {3.784161582648486*^9, 3.784161584623692*^9}, {
   3.7841648123752947`*^9, 3.7841648125919743`*^9}, 3.7841651748631277`*^9, 
   3.784165410487338*^9, {3.784165551534663*^9, 3.7841655521419373`*^9}, {
   3.784255167463327*^9, 3.784255171079186*^9}, 3.78425524261656*^9, 
   3.784314840126214*^9, 3.784315100430964*^9, {3.784316342368432*^9, 
   3.784316345710204*^9}, 3.7843205215677423`*^9, {3.784342745560227*^9, 
   3.784342750519495*^9}, 3.7843438094674873`*^9, {3.7849230623649282`*^9, 
   3.784923082971925*^9}, {3.784924403324658*^9, 3.784924408364565*^9}, {
   3.784924629876136*^9, 3.784924636633225*^9}, {3.7849263758445272`*^9, 
   3.784926378049727*^9}, {3.7849275244099073`*^9, 3.78492752652734*^9}, {
   3.784933294941127*^9, 3.7849333243974323`*^9}, {3.785009226229772*^9, 
   3.7850092347809687`*^9}, {3.7851714102169075`*^9, 3.7851714247354116`*^9}, 
   3.785172512559836*^9, {3.785181031626651*^9, 3.785181051966179*^9}, {
   3.785183183838769*^9, 3.785183190814502*^9}, {3.785680223196073*^9, 
   3.785680228732244*^9}, {3.7856883302086067`*^9, 3.785688337078121*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"e422a2f9-3b0f-4fdd-9e26-153f0782815c"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<gauss-cubed_lstm-mera.mx\>\""}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7494748243051*^9, 3.749474829643325*^9}, 
   3.7494789668133245`*^9, {3.7714370025068927`*^9, 3.7714370081633453`*^9}, {
   3.781021391581975*^9, 3.7810213919312925`*^9}, {3.7810292269003277`*^9, 
   3.7810292281821814`*^9}, 3.781805129227951*^9, {3.781815641571205*^9, 
   3.781815643663216*^9}, {3.781819871263209*^9, 3.781819871733528*^9}, 
   3.781821485193183*^9, {3.7818810310165815`*^9, 3.781881032841302*^9}, {
   3.781894309195945*^9, 3.7818943095466166`*^9}, {3.781974438944854*^9, 
   3.7819744661724524`*^9}, 3.781991806536101*^9, {3.7820504562728496`*^9, 
   3.7820504596264815`*^9}, 3.782566699202558*^9, {3.78258712743682*^9, 
   3.7825871350337195`*^9}, 3.7825903097659492`*^9, {3.7825903875920515`*^9, 
   3.7825904150500636`*^9}, {3.7825912761626806`*^9, 3.782591282001128*^9}, {
   3.782766999876913*^9, 3.7827670095511146`*^9}, 3.782774599058267*^9, 
   3.782845592243722*^9, {3.782871585763903*^9, 3.7828716007584553`*^9}, 
   3.7829095484657793`*^9, 3.782911379217806*^9, 3.782911410631527*^9, 
   3.782996413433094*^9, 3.782998967078117*^9, {3.783007393993764*^9, 
   3.783007394818615*^9}, 3.7830112217485237`*^9, {3.7830113857622027`*^9, 
   3.783011400537099*^9}, {3.7830132454653587`*^9, 3.783013245781311*^9}, {
   3.783013292746775*^9, 3.783013305675131*^9}, {3.78301391777592*^9, 
   3.783013921839224*^9}, {3.7830140731396484`*^9, 3.7830141246227865`*^9}, {
   3.7831824493333163`*^9, 3.783182466389327*^9}, 3.7831888496792293`*^9, {
   3.7831888816663*^9, 3.7831888817272873`*^9}, {3.783217918934127*^9, 
   3.7832179228594093`*^9}, {3.783218385542884*^9, 3.7832183899408627`*^9}, {
   3.783273617092472*^9, 3.783273619755415*^9}, 3.783275281899152*^9, 
   3.7832776546710157`*^9, {3.78333784250439*^9, 3.783337847845336*^9}, {
   3.7835114557393312`*^9, 3.783511461458289*^9}, {3.783616460609784*^9, 
   3.783616465442177*^9}, {3.783702007626713*^9, 3.7837020150715218`*^9}, {
   3.7837387107403145`*^9, 3.7837387491560683`*^9}, {3.7837732772065964`*^9, 
   3.7837732815042553`*^9}, {3.7837969132685733`*^9, 
   3.7837969156606045`*^9}, {3.7838047955668654`*^9, 
   3.7838048115117345`*^9}, {3.783804844982779*^9, 3.7838048671332273`*^9}, {
   3.7838048984745216`*^9, 3.7838049121088643`*^9}, {3.7838049615922403`*^9, 
   3.7838049866378975`*^9}, {3.783805910669195*^9, 3.7838059131092*^9}, {
   3.783811670390472*^9, 3.7838116848320827`*^9}, {3.783817111761858*^9, 
   3.783817121274068*^9}, {3.783820605041292*^9, 3.783820616470275*^9}, {
   3.7838206801262703`*^9, 3.783820684437255*^9}, 3.783823380176536*^9, {
   3.783863245722127*^9, 3.783863277757576*^9}, {3.7838634148294277`*^9, 
   3.7838634150359793`*^9}, {3.783864557647361*^9, 3.7838645847136993`*^9}, {
   3.783864694203039*^9, 3.783864694877305*^9}, {3.783981846858917*^9, 
   3.783981849685755*^9}, {3.784164827979886*^9, 3.78416484235023*^9}, {
   3.7841651767917557`*^9, 3.7841652449187727`*^9}, {3.7841654199747553`*^9, 
   3.7841654226146183`*^9}, {3.784255096255541*^9, 3.7842550963672523`*^9}, 
   3.7842551865931273`*^9, 3.7842552453764563`*^9, {3.784293010112631*^9, 
   3.784293019545617*^9}, {3.78429759805224*^9, 3.784297598186348*^9}, {
   3.784312197284231*^9, 3.7843122096991453`*^9}, 3.784316300497734*^9, 
   3.7843204973750134`*^9, {3.78518313560142*^9, 3.785183137428417*^9}, 
   3.785688377278241*^9, 3.785699872727909*^9, 3.785699903452034*^9, 
   3.7857215431287055`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e1908a6e-3dce-480e-923c-2ad8fabbe0cf"],

Cell[CellGroupData[{

Cell[BoxData[{"rnn0Err", "\[IndentingNewLine]", "rnnErr"}], "Input",
 CellChangeTimes->{{3.7837387234472456`*^9, 3.7837387299029207`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"e8a6f8db-ba99-4b14-ab61-8580e3f4de51"],

Cell[BoxData["0.0002369894571762221`"], "Output",
 CellChangeTimes->{{3.783738725135785*^9, 3.783738750203477*^9}, {
   3.7837732750179896`*^9, 3.7837732825511074`*^9}, 3.78377337034841*^9, 
   3.783774294866702*^9, 3.7837948537164125`*^9, 3.7837969172601843`*^9, 
   3.783804679040214*^9, {3.7838047986603355`*^9, 3.783804815700655*^9}, {
   3.783804846029379*^9, 3.783804913235539*^9}, {3.783804962591991*^9, 
   3.7838049876689377`*^9}, {3.783811673305614*^9, 3.7838116872054567`*^9}, {
   3.7838171061473627`*^9, 3.783817122145637*^9}, {3.783820607980496*^9, 
   3.78382061760023*^9}, 3.783820686273584*^9, 3.7838233841884212`*^9, 
   3.7838626339589148`*^9, {3.783863250308929*^9, 3.7838632787256308`*^9}, 
   3.783864477042712*^9, {3.783864560564039*^9, 3.783864585713887*^9}, 
   3.78386469675528*^9, 3.7839818511699133`*^9, 3.784161586885861*^9, {
   3.784164829095509*^9, 3.7841648433036222`*^9}, {3.784165177861807*^9, 
   3.784165246069447*^9}, {3.7841654179940042`*^9, 3.784165424094542*^9}, 
   3.784255099756391*^9, {3.784293012370429*^9, 3.784293021187915*^9}, 
   3.784297599493371*^9, 3.78431221794401*^9, 3.7843126717167253`*^9, 
   3.784314815303481*^9, 3.784315062753949*^9, {3.7843163018386507`*^9, 
   3.784316318879857*^9}, 3.7843205000749073`*^9, 3.7843427529989758`*^9, 
   3.7843781280520267`*^9, 3.7856802595466757`*^9, 3.7856843103570766`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"3aedba93-6909-4ed2-8f7c-140a22fb504f"],

Cell[BoxData["3.7370628184750955`*^-6"], "Output",
 CellChangeTimes->{{3.783738725135785*^9, 3.783738750203477*^9}, {
   3.7837732750179896`*^9, 3.7837732825511074`*^9}, 3.78377337034841*^9, 
   3.783774294866702*^9, 3.7837948537164125`*^9, 3.7837969172601843`*^9, 
   3.783804679040214*^9, {3.7838047986603355`*^9, 3.783804815700655*^9}, {
   3.783804846029379*^9, 3.783804913235539*^9}, {3.783804962591991*^9, 
   3.7838049876689377`*^9}, {3.783811673305614*^9, 3.7838116872054567`*^9}, {
   3.7838171061473627`*^9, 3.783817122145637*^9}, {3.783820607980496*^9, 
   3.78382061760023*^9}, 3.783820686273584*^9, 3.7838233841884212`*^9, 
   3.7838626339589148`*^9, {3.783863250308929*^9, 3.7838632787256308`*^9}, 
   3.783864477042712*^9, {3.783864560564039*^9, 3.783864585713887*^9}, 
   3.78386469675528*^9, 3.7839818511699133`*^9, 3.784161586885861*^9, {
   3.784164829095509*^9, 3.7841648433036222`*^9}, {3.784165177861807*^9, 
   3.784165246069447*^9}, {3.7841654179940042`*^9, 3.784165424094542*^9}, 
   3.784255099756391*^9, {3.784293012370429*^9, 3.784293021187915*^9}, 
   3.784297599493371*^9, 3.78431221794401*^9, 3.7843126717167253`*^9, 
   3.784314815303481*^9, 3.784315062753949*^9, {3.7843163018386507`*^9, 
   3.784316318879857*^9}, 3.7843205000749073`*^9, 3.7843427529989758`*^9, 
   3.7843781280520267`*^9, 3.7856802595466757`*^9, 3.785684310358287*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"34513657-5b69-4a01-96f9-619f5e2e3e0d"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8427086948731737`*^9},ExpressionUUID->"bf23b329-a813-4df9-8321-\
5834dccb0475"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Same", " ", "complexity", " ", 
   RowBox[{"test", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.78258879617876*^9, 
  3.782588802648941*^9}},ExpressionUUID->"83e75a6b-e16e-413a-aa1d-\
7cb10d4ae1fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"freeArraysElementCounts", "[", "nn_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"counts", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"NetInformation", "[", 
         RowBox[{"nn", ",", "\"\<ArraysElementCounts\>\""}], "]"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "matches"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matches", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"counts", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "\"\<Scaling\>\""}], "]"}], ")"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"matches", "=", 
      RowBox[{"matches", "~", "Join", "~", 
       RowBox[{"Replace", "[", 
        RowBox[{"matches", ",", 
         RowBox[{"\"\<Scaling\>\"", "\[Rule]", "\"\<Biases\>\""}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "matches", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"counts", ",", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"matches", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7825883600136213`*^9, 3.782588502256527*^9}, {
   3.782588534025682*^9, 3.7825885348749847`*^9}, {3.782588629067424*^9, 
   3.7825886326891346`*^9}, 3.782588728893713*^9, {3.782589836324359*^9, 
   3.7825898387582636`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"3e22feeb-f35e-413a-8bf5-172b83afc991"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"NetInformation", "[", 
    RowBox[{"rnn", ",", "\"\<ArraysTotalElementCount\>\""}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"freeArraysElementCounts", "[", "rnn", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NetInformation", "[", 
     RowBox[{"rnn0", ",", "\"\<ArraysTotalElementCount\>\""}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"freeArraysElementCounts", "[", "rnn0", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NetInformation", "[", 
     RowBox[{"rnn1", ",", "\"\<ArraysTotalElementCount\>\""}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"freeArraysElementCounts", "[", "rnn1", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NetInformation", "[", 
     RowBox[{"rnn2", ",", "\"\<ArraysTotalElementCount\>\""}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"freeArraysElementCounts", "[", "rnn2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7825887609361353`*^9, 3.7825887622887697`*^9}, {
  3.782588807535818*^9, 3.78258881456785*^9}, {3.7831824716384306`*^9, 
  3.7831824722579527`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"530d413a-f76b-469d-bb87-00d963585610"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnn0Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"ParallelMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rnn0", "[", 
           RowBox[{"#", ",", 
            RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"testDataSamples", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
       RowBox[{"testDataSamples", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], ")"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.782593197441952*^9, 3.782593200192176*^9}, {
   3.782767033167782*^9, 3.782767057533512*^9}, 3.7827671486855016`*^9},
 CellLabel->
  "In[223]:=",ExpressionUUID->"21d14c9f-fa7a-4435-ac0b-361cf317f7da"],

Cell[BoxData["0.09401251371489068`"], "Output",
 CellChangeTimes->{3.782593640642435*^9, 3.7827671003462477`*^9, 
  3.7827729558198967`*^9, 3.7828466099247956`*^9, 3.7828726869809465`*^9, 
  3.7828750960741253`*^9, 3.783010811797241*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"f92b8aa7-1a97-4f39-a6f3-7d61ee05779b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnn1Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn1", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7825913770587263`*^9, 3.7825913791284914`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"55c564bc-3d15-4af2-b221-fe5984b5ace6"],

Cell[BoxData["0.00009662003825391289`"], "Output",
 CellChangeTimes->{3.7825917711595106`*^9, 3.7825935158066874`*^9, 
  3.782749393391574*^9, 3.78284662284659*^9, 3.782872655968547*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"443895aa-0485-4a90-826b-92d4c7416ce2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnn2Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn2", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7825893749019756`*^9, 3.7825893768714137`*^9}, {
  3.782589509148985*^9, 3.7825895115484333`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"1314932d-1d23-42fb-8aeb-80c1558f5755"],

Cell[BoxData["0.007830644640474059`"], "Output",
 CellChangeTimes->{3.782589014038333*^9, 3.7825894479761906`*^9, 
  3.782589769873718*^9, 3.7825911582318897`*^9, 3.7825916912305436`*^9, 
  3.782593602374155*^9, 3.782749479096901*^9, 3.782846640729373*^9, 
  3.782872676905203*^9, 3.782875087107437*^9, 3.7830097103414197`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"0a7a6462-100c-4a97-a532-dbddd6cf5582"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.784947186279389*^9, 
  3.784947209663175*^9}},ExpressionUUID->"4d4f94c2-5118-4c25-8cc7-\
2c30eadc4e06"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Tests", " ", "on", " ", "alternative", " ", "positions", " ", "of", " ", 
   "the", " ", "MERA", " ", 
   RowBox[{"layer", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.784947202301566*^9, 3.78494720742712*^9}, {
  3.8427088864602556`*^9, 
  3.8427088956845636`*^9}},ExpressionUUID->"5dda147b-d943-466d-a9c7-\
839c14ad12e4"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",ExpressionUUID->"ac1a0443-8eaa-45e4-851d-df4843b6bf36"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<thomas-1.0_lstm-mera_alternative-2.mx\>\""}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7494748243051*^9, 3.749474829643325*^9}, 
   3.7494789668133245`*^9, {3.7714370025068927`*^9, 3.7714370081633453`*^9}, {
   3.781021391581975*^9, 3.7810213919312925`*^9}, {3.7810292269003277`*^9, 
   3.7810292281821814`*^9}, 3.781805129227951*^9, {3.781815641571205*^9, 
   3.781815643663216*^9}, {3.781819871263209*^9, 3.781819871733528*^9}, 
   3.781821485193183*^9, {3.7818810310165815`*^9, 3.781881032841302*^9}, {
   3.781894309195945*^9, 3.7818943095466166`*^9}, {3.781974438944854*^9, 
   3.7819744661724524`*^9}, 3.781991806536101*^9, {3.7820504562728496`*^9, 
   3.7820504596264815`*^9}, 3.782566699202558*^9, {3.78258712743682*^9, 
   3.7825871350337195`*^9}, 3.7825903097659492`*^9, {3.7825903875920515`*^9, 
   3.7825904150500636`*^9}, {3.7825912761626806`*^9, 3.782591282001128*^9}, {
   3.782766999876913*^9, 3.7827670095511146`*^9}, 3.782774599058267*^9, 
   3.782845592243722*^9, {3.782871585763903*^9, 3.7828716007584553`*^9}, 
   3.7829095484657793`*^9, 3.782911379217806*^9, 3.782911410631527*^9, 
   3.782996413433094*^9, 3.782998967078117*^9, {3.783007393993764*^9, 
   3.783007394818615*^9}, 3.7830112217485237`*^9, {3.7830113857622027`*^9, 
   3.783011400537099*^9}, {3.7830132454653587`*^9, 3.783013245781311*^9}, {
   3.783013292746775*^9, 3.783013305675131*^9}, {3.78301391777592*^9, 
   3.783013921839224*^9}, {3.7830140731396484`*^9, 3.7830141246227865`*^9}, {
   3.7831824493333163`*^9, 3.783182466389327*^9}, 3.7831888496792293`*^9, {
   3.7831888816663*^9, 3.7831888817272873`*^9}, {3.783217918934127*^9, 
   3.7832179228594093`*^9}, {3.783218385542884*^9, 3.7832183899408627`*^9}, {
   3.783273617092472*^9, 3.783273619755415*^9}, 3.783275281899152*^9, 
   3.7832776546710157`*^9, {3.78333784250439*^9, 3.783337847845336*^9}, {
   3.7835114557393312`*^9, 3.783511461458289*^9}, {3.783616460609784*^9, 
   3.783616465442177*^9}, {3.7840339551217384`*^9, 3.7840339682522326`*^9}, {
   3.7840578338767366`*^9, 3.784057839161192*^9}, {3.7848472216432447`*^9, 
   3.784847223066771*^9}, 3.784850522419187*^9, {3.784853864926737*^9, 
   3.784853865717225*^9}, {3.784901875797124*^9, 3.78490187706835*^9}, {
   3.78490785352848*^9, 3.784907855006489*^9}, {3.784917060094254*^9, 
   3.7849170613091288`*^9}, {3.784919482046296*^9, 3.7849194822450047`*^9}, {
   3.784923093701481*^9, 3.784923093963955*^9}, 3.784924641180689*^9, 
   3.7849329382320137`*^9, {3.784933332396366*^9, 3.784933383820322*^9}, 
   3.784933415948353*^9, 3.784933504839542*^9, 3.785008196672325*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"b2fd7ed1-fca4-43b5-b325-9f34af81c8b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{
     RowBox[{"mera", ".", " ", "Alternative"}], " ", "6."}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryMeraUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumbers_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mg\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"{", 
             RowBox[{"physicalLength", ",", 
              RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"NormalizationLayer", "[", 
            RowBox[{
             RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"physicalLength", ",", 
                RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
          "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mera\>\"", "\[Rule]", 
        RowBox[{"mera", "[", 
         RowBox[{
         "physicalLength", ",", "physicalDOF", ",", "meraNumbers", ",", 
          "hiddenVecDim"}], "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"\"\<mg\>\"", "\[Rule]", 
          RowBox[{"\"\<mera\>\"", "\[Rule]", 
           RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7805326315587144`*^9, 3.780532634126464*^9}, 
   3.7805326780907493`*^9, {3.7805327550823574`*^9, 3.780532804126681*^9}, {
   3.7805333155779095`*^9, 3.7805333161319942`*^9}, 3.7805344970358725`*^9, {
   3.7805345337228565`*^9, 3.780534567357093*^9}, {3.7805346080159774`*^9, 
   3.7805346108589344`*^9}, {3.780534949393841*^9, 3.7805349693775735`*^9}, {
   3.7806210287770596`*^9, 3.78062102961255*^9}, 3.780621088855275*^9, 
   3.780621131428459*^9, {3.780621189023926*^9, 3.7806211895879173`*^9}, {
   3.7806213375006466`*^9, 3.780621355378167*^9}, {3.780621409932565*^9, 
   3.780621456136223*^9}, {3.780621495558813*^9, 3.780621496121933*^9}, {
   3.780621574568483*^9, 3.7806215826510224`*^9}, {3.7806216186092987`*^9, 
   3.7806216299756575`*^9}, {3.7806217868816133`*^9, 3.780621790003289*^9}, {
   3.7806232633911314`*^9, 3.7806232635484843`*^9}, {3.7806233037602897`*^9, 
   3.7806233176246443`*^9}, {3.7806233859692793`*^9, 
   3.7806233888681884`*^9}, {3.78065959161256*^9, 3.78065959278436*^9}, {
   3.7806596361569986`*^9, 3.7806596368416295`*^9}, {3.7806639774152007`*^9, 
   3.780664019846652*^9}, {3.784832838860156*^9, 3.784832853258298*^9}, {
   3.7848329052869368`*^9, 3.7848329099942913`*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"b3b7cbb2-b3de-4b4e-8cdf-a17b75ef1042"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{
     RowBox[{"mera", ".", " ", "Alternative"}], " ", "7."}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryMeraUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumbers_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mg\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"{", 
             RowBox[{"physicalLength", ",", 
              RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"NormalizationLayer", "[", 
            RowBox[{
             RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"physicalLength", ",", 
                RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
          "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mera\>\"", "\[Rule]", 
        RowBox[{"mera", "[", 
         RowBox[{
         "physicalLength", ",", "physicalDOF", ",", "meraNumbers", ",", 
          "hiddenVecDim"}], "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "->", 
        RowBox[{"\"\<mg\>\"", "\[Rule]", "\"\<mera\>\""}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<mera\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7805326315587144`*^9, 3.780532634126464*^9}, 
   3.7805326780907493`*^9, {3.7805327550823574`*^9, 3.780532804126681*^9}, {
   3.7805333155779095`*^9, 3.7805333161319942`*^9}, 3.7805344970358725`*^9, {
   3.7805345337228565`*^9, 3.780534567357093*^9}, {3.7805346080159774`*^9, 
   3.7805346108589344`*^9}, {3.780534949393841*^9, 3.7805349693775735`*^9}, {
   3.7806210287770596`*^9, 3.78062102961255*^9}, 3.780621088855275*^9, 
   3.780621131428459*^9, {3.780621189023926*^9, 3.7806211895879173`*^9}, {
   3.7806213375006466`*^9, 3.780621355378167*^9}, {3.780621409932565*^9, 
   3.780621456136223*^9}, {3.780621495558813*^9, 3.780621496121933*^9}, {
   3.780621574568483*^9, 3.7806215826510224`*^9}, {3.7806216186092987`*^9, 
   3.7806216299756575`*^9}, {3.7806217868816133`*^9, 3.780621790003289*^9}, {
   3.7806232633911314`*^9, 3.7806232635484843`*^9}, {3.7806233037602897`*^9, 
   3.7806233176246443`*^9}, {3.7806233859692793`*^9, 
   3.7806233888681884`*^9}, {3.78065959161256*^9, 3.78065959278436*^9}, {
   3.7806596361569986`*^9, 3.7806596368416295`*^9}, {3.7806639774152007`*^9, 
   3.780664019846652*^9}, {3.784832838860156*^9, 3.784832853258298*^9}, {
   3.7848329052869368`*^9, 3.7848329099942913`*^9}, {3.7849456189765043`*^9, 
   3.784945651327612*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"e9840756-f9ef-4833-bd88-e2c5b8181150"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{
     RowBox[{"mera", ".", " ", "Alternative"}], " ", "8."}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryMeraUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumbers_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mg\>\"", "\[Rule]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"{", 
             RowBox[{"physicalLength", ",", 
              RowBox[{"physicalDOF", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"NormalizationLayer", "[", 
            RowBox[{
             RowBox[{"1", ";;", "All"}], ",", "\"\<Same\>\""}], "]"}], ",", 
           RowBox[{"ElementwiseLayer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "0.2", ")"}], "#"}], "&"}], "]"}], ",", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"physicalLength", ",", 
                RowBox[{"physicalDOF", "-", "1"}]}], "}"}]}]}], "]"}]}], 
          "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mera\>\"", "\[Rule]", 
        RowBox[{"mera", "[", 
         RowBox[{
         "physicalLength", ",", "physicalDOF", ",", "meraNumbers", ",", 
          "hiddenVecDim"}], "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<im\>\"", "\[Rule]", 
         RowBox[{"\"\<mg\>\"", "\[Rule]", "\"\<mera\>\""}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<mera\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7805326315587144`*^9, 3.780532634126464*^9}, 
   3.7805326780907493`*^9, {3.7805327550823574`*^9, 3.780532804126681*^9}, {
   3.7805333155779095`*^9, 3.7805333161319942`*^9}, 3.7805344970358725`*^9, {
   3.7805345337228565`*^9, 3.780534567357093*^9}, {3.7805346080159774`*^9, 
   3.7805346108589344`*^9}, {3.780534949393841*^9, 3.7805349693775735`*^9}, {
   3.7806210287770596`*^9, 3.78062102961255*^9}, 3.780621088855275*^9, 
   3.780621131428459*^9, {3.780621189023926*^9, 3.7806211895879173`*^9}, {
   3.7806213375006466`*^9, 3.780621355378167*^9}, {3.780621409932565*^9, 
   3.780621456136223*^9}, {3.780621495558813*^9, 3.780621496121933*^9}, {
   3.780621574568483*^9, 3.7806215826510224`*^9}, {3.7806216186092987`*^9, 
   3.7806216299756575`*^9}, {3.7806217868816133`*^9, 3.780621790003289*^9}, {
   3.7806232633911314`*^9, 3.7806232635484843`*^9}, {3.7806233037602897`*^9, 
   3.7806233176246443`*^9}, {3.7806233859692793`*^9, 
   3.7806233888681884`*^9}, {3.78065959161256*^9, 3.78065959278436*^9}, {
   3.7806596361569986`*^9, 3.7806596368416295`*^9}, {3.7806639774152007`*^9, 
   3.780664019846652*^9}, {3.784832838860156*^9, 3.784832853258298*^9}, {
   3.7848329052869368`*^9, 3.7848329099942913`*^9}, {3.7849456189765043`*^9, 
   3.784945651327612*^9}, {3.78500841791924*^9, 3.7850084338350487`*^9}, {
   3.7851594194782095`*^9, 
   3.7851594199467745`*^9}},ExpressionUUID->"77ff9ec7-f728-41ef-8c7f-\
fa7d1ec08d97"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7856241927352686`*^9, 
  3.7856241937639446`*^9}},ExpressionUUID->"6816a38a-a4ec-44ee-b637-\
d93a94e30e6e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Statistical", " ", 
   RowBox[{"models", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7856241946071143`*^9, 
  3.7856242040449924`*^9}},ExpressionUUID->"1d7f9528-8076-4d54-88f5-\
ae15ace90bac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "ARMA", "*)"}], 
  RowBox[{"(*", 
   RowBox[{"gauss", "-", "cubed_lstm", "-", 
    RowBox[{"mera", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"trainingTS", "=", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "6.2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "6.2"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "6.2"}], 
                    RowBox[{"#", "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], 
                 "^", "2"}]}], "]"}], "-", "0.55"}], ")"}], "^", "2"}]}], 
          "]"}], "-", "0.55"}], "&"}], ",", "0.31", ",", "10000"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"armaProcess", "=", 
    RowBox[{"EstimatedProcess", "[", 
     RowBox[{"trainingTS", ",", 
      RowBox[{"ARMAProcess", "[", 
       RowBox[{"c", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"a", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "7"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"b", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "7"}], "}"}]}], "]"}], ",", "\[Nu]"}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{
       "\"\<ProcessEstimator\>\"", "->", "\"\<MethodOfMoments\>\""}]}], 
      "*)"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"armaProcess", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"TimeSeriesModelFit", "[", "trainingTS", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.78562371044302*^9, 3.7856237369670486`*^9}, {
  3.7856237824684324`*^9, 3.7856237888379617`*^9}, {3.7856238439125156`*^9, 
  3.7856238573368587`*^9}, {3.785623917831725*^9, 3.7856239337375293`*^9}, {
  3.785624150564298*^9, 3.785624154284682*^9}, {3.785624242255231*^9, 
  3.785624291596032*^9}, {3.7856244614641657`*^9, 3.7856245013586655`*^9}, {
  3.7856245445017967`*^9, 3.78562457751647*^9}, {3.7856246315863123`*^9, 
  3.785624675495726*^9}, {3.78562476633755*^9, 3.7856247712057858`*^9}, {
  3.7856884306301603`*^9, 3.7856884962390947`*^9}, {3.785694397487108*^9, 
  3.7856944018014507`*^9}, {3.785694582832549*^9, 3.7856945842400084`*^9}, {
  3.785694736168921*^9, 3.785694736823922*^9}, {3.7856948187073174`*^9, 
  3.785694823266733*^9}, {3.785694953138344*^9, 3.7856949569085693`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e67797ef-6763-401d-9083-0fc5735f22c0"],

Cell[BoxData[
 RowBox[{"ARMAProcess", "[", 
  RowBox[{"0.14435871523376015`", ",", 
   RowBox[{"{", 
    RowBox[{"0.4197863111476428`", ",", 
     RowBox[{"-", "0.20260341378763327`"}], ",", 
     RowBox[{"-", "0.023585817518295322`"}], ",", 
     RowBox[{"-", "0.38016851546280495`"}], ",", 
     RowBox[{"-", "0.029133840577919047`"}], ",", "0.030095184860908137`", 
     ",", "0.08428954329819555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6358951666530321`"}], ",", "0.04191013541444704`", ",", 
     "0.23491820794689686`", ",", "0.29810969250394137`", ",", 
     RowBox[{"-", "0.16252916575594645`"}], ",", 
     RowBox[{"-", "0.02983032261367359`"}], ",", 
     RowBox[{"-", "0.03137464014075144`"}]}], "}"}], ",", 
   "0.04827167208633158`"}], "]"}]], "Output",
 CellChangeTimes->{{3.785688469092966*^9, 3.785688496682311*^9}, 
   3.7856947331917*^9, {3.785694816745446*^9, 3.78569483116042*^9}, {
   3.785694957371414*^9, 3.78569496380403*^9}, 3.785700033371842*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"87c8c7e8-3ada-4bc6-9048-2c4bbdde25e1"],

Cell[BoxData[
 RowBox[{"ARMAProcess", "[", 
  RowBox[{"0.11044178332546432`", ",", 
   RowBox[{"{", 
    RowBox[{"0.017197311088796238`", ",", 
     RowBox[{"-", "0.17593016648493595`"}], ",", "0.3161664392185887`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23456370769930956`"}], ",", 
     RowBox[{"-", "0.07395162222201743`"}], ",", 
     RowBox[{"-", "0.19968292769498014`"}], ",", "0.058032728500300834`"}], 
    "}"}], ",", "0.048288828109232435`"}], "]"}]], "Output",
 CellChangeTimes->{{3.785688469092966*^9, 3.785688496682311*^9}, 
   3.7856947331917*^9, {3.785694816745446*^9, 3.78569483116042*^9}, {
   3.785694957371414*^9, 3.78569496380403*^9}, 3.785700033633171*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"aed8cede-a746-4bf0-bc7e-2decfaceb7b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TimeSeriesForecast", "[", 
     RowBox[{"armaProcess", ",", 
      RowBox[{"Flatten", "[", "#", "]"}], ",", "1", ",", 
      RowBox[{"Method", "->", "\"\<Kalman\>\""}]}], "]"}], "&"}], "/@", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"%", "-", 
     RowBox[{"Flatten", "[", 
      RowBox[{"testData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7856885173509293`*^9, 3.785688537643963*^9}, {
  3.785688658515995*^9, 3.7856887493442307`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"8938a20a-a494-407b-ab43-7f5068c6a519"],

Cell[BoxData["0.06222583283567421`"], "Output",
 CellChangeTimes->{{3.7856885328155737`*^9, 3.785688538068624*^9}, {
   3.78568865579248*^9, 3.785688679838257*^9}, 3.785688775218889*^9, 
   3.785694989733095*^9, 3.785700062529521*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c2f4a10a-f573-4d13-8ae0-bc0fdeb3af5f"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.785695840241591*^9},ExpressionUUID->"1aa39de4-24b7-4895-8565-\
98a2d8533725"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gbt", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"trainingData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "\[Rule]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"trainingData", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GradientBoostedTrees\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}], ",", 
        RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
        RowBox[{"\"\<MaxDepth\>\"", "\[Rule]", "8"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.785695380968302*^9, 3.785695383063881*^9}, {
   3.7856955403042917`*^9, 3.7856955457592382`*^9}, 3.785695666214025*^9, {
   3.785695698369053*^9, 3.785695705399447*^9}, {3.785695753549059*^9, 
   3.785695785055236*^9}, {3.7856958268321447`*^9, 3.78569583026469*^9}, {
   3.785695904850594*^9, 3.7856959485516777`*^9}, {3.785696069896202*^9, 
   3.785696071614801*^9}, 3.785700124615951*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"6a1e3c85-86af-4b16-9aa1-ec22ecdad395"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"gbt", "/@", 
      RowBox[{"testData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "-", 
     RowBox[{"Flatten", "[", 
      RowBox[{"testData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7856960138950367`*^9, 3.785696035950918*^9}, 
   3.785696079583396*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"75289da4-6694-4c1c-9174-5df5519e5bd1"],

Cell[BoxData["0.0009927012462931574`"], "Output",
 CellChangeTimes->{3.7856960407717752`*^9, 3.785700179863452*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"1db40e01-cb84-4bcf-b754-773a3710fd4b"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.785679694744996*^9},ExpressionUUID->"eda33c0c-a958-4d81-9d7d-\
2f80e1c021cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"trainingData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "\[Rule]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"trainingData", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
     RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<NeuralNetwork\>\"", ",", 
        RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
        RowBox[{"ValidationSet", "\[Rule]", 
         RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "\"\<NetworkType\>\"", "\[Rule]", "\"\<FullyConnected\>\""}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"\"\<NumberOfParameters\>\"", "\[Rule]", "500"}], ",", 
           RowBox[{
           "\"\<NetInitializationMethod\>\"", "\[Rule]", "\"\<Random\>\""}], 
           ",", 
           RowBox[{"\"\<OptimizationMethod\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<ADAM\>\"", ",", 
              RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
             "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "8"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<NetTrainOptions\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ValidationSet", "\[Rule]", 
             RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
            RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<ADAM\>\"", ",", 
               RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
              "}"}]}], ",", 
            RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}]}], 
           "}"}]}]}], "*)"}], "\[IndentingNewLine]", "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.785696576543022*^9, 3.785696588824135*^9}, {
  3.7856967907199802`*^9, 3.78569682033484*^9}, {3.785696862465742*^9, 
  3.785696885732497*^9}, {3.7856971324240513`*^9, 3.785697132655073*^9}, {
  3.7856975544232817`*^9, 3.785697599251986*^9}, {3.785697646744534*^9, 
  3.7856976627681093`*^9}, {3.785700182703074*^9, 3.785700308592043*^9}, {
  3.7857006074402647`*^9, 3.785700634599722*^9}, {3.7857088446784153`*^9, 
  3.785708861764277*^9}, {3.7857096802250967`*^9, 3.78570970880821*^9}, {
  3.785709823871872*^9, 3.785709827478475*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c994b76b-d0dc-46b4-a098-b91877e14d59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "\"\<TrainingInformation\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.785710333017024*^9, 3.785710339976377*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"9b58898e-e555-4c25-b571-b986b46ae807"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"PanelCell\"\>", "\[Rule]", 
    TemplateBox[{"184721"},
     "CellObjectMissing"]}], ",", 
   RowBox[{"\<\"TrainingFunction\"\>", "\[Rule]", "Predict"}], ",", 
   RowBox[{"\<\"EMIterations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", 
     RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"EMIterations\"\>"}], "]"}]}], ",", 
   RowBox[{"\<\"ProcessorEntropyShift\"\>", "\[Rule]", 
    RowBox[{"-", "1.44469124635792`"}]}], ",", 
   RowBox[{"\<\"PreprocessingTime\"\>", "\[Rule]", 
    "8.64263`7.388190914294512"}], ",", 
   RowBox[{"\<\"LossName\"\>", "\[Rule]", "\<\"StandardDeviation\"\>"}], ",", 
   RowBox[{"\<\"BestModelInformation\"\>", "\[Rule]", 
    TemplateBox[{TagBox[
       DynamicModuleBox[{
        TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
         Data`UnorderedAssociation[
          "RowCount" -> 20, "Length" -> 13, "InitialType" -> 
           TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory", 
              "Configuration"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType}]}], "Shape" -> 
           TypeSystem`PackageScope`DocumentShape[
             
             Association[{"MeanCrossEntropy"} -> 
              TypeSystem`PackageScope`UnknownShape, {"StandardDeviation"} -> 
              TypeSystem`PackageScope`UnknownShape, {"EvaluationTime"} -> 
              TypeSystem`PackageScope`AtomShape[60], {"TestSize"} -> 
              TypeSystem`PackageScope`AtomShape[34], {"ModelMemory"} -> 
              TypeSystem`PackageScope`AtomShape[34], {"ModelUtility"} -> 
              TypeSystem`PackageScope`AtomShape[60], {"TrainingSize"} -> 
              TypeSystem`PackageScope`AtomShape[34], {"TrainingTime"} -> 
              TypeSystem`PackageScope`AtomShape[60], {"TrainingMemory"} -> 
              TypeSystem`PackageScope`AtomShape[34], {"ExperimentCount"} -> 
              TypeSystem`PackageScope`AtomShape[34], {
               "MeanCrossEntropyHistory"} -> 
              TypeSystem`PackageScope`UnknownShape, {
               "StandardDeviationHistory"} -> 
              TypeSystem`PackageScope`UnknownShape, {"Configuration"} -> 
              TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
           TypeSystem`PackageScope`CacheHandle[973781343], "Type" -> 
           TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory", 
              "Configuration"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`AnyType}]}], "HandleQ" -> True, "RowTarget" -> 20, 
           "Data" -> TypeSystem`PackageScope`CacheHandle[973781343]], 
         TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
         TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
         DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["MeanCrossEntropy"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["MeanCrossEntropy"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"-3.05", "0.04"}, "Around"], 
                    Around[-3.048365434338462, 0.043516440096025163`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["StandardDeviation"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["StandardDeviation"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.020", "0.005"}, "Around"], 
                    Around[0.019997304220410704`, 0.004678202474323924]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["EvaluationTime"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["EvaluationTime"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.000103722"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["TestSize"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TestSize"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1999"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["ModelMemory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ModelMemory"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["ModelUtility"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ModelUtility"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["7.03969"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["TrainingSize"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingSize"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["7994"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["TrainingTime"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingTime"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["31.6228"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["TrainingMemory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingMemory"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["3386752"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["ExperimentCount"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ExperimentCount"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["MeanCrossEntropyHistory"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[-3.048365434338462, 0.030770769884997565`]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[-3.048365434338462, 0.030770769884997565`]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["MeanCrossEntropyHistory"]]], "Mouse"]]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["StandardDeviationHistory"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.019997304220410704`, 0.003307988693358132]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.019997304220410704`, 0.003307988693358132]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["StandardDeviationHistory"]]], "Mouse"]]}, {
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Configuration\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Configuration\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["Configuration"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["Configuration"]]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 15], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 15], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][{
                    Key["Configuration"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    561290289][
                    GeneralUtilities`Slice[
                    Key["Configuration"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                  FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
               LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
               False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
            TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                 If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                   TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               If[GeneralUtilities`$DebugMode, 
                Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                  TypeSystem`NestedGrid`PackagePrivate`formatState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
           DynamicModuleValues :> {}], 
         TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
             TypeSystem`PackageScope`Pathbar[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`updateState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 561290289]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
           Dynamic[
            Replace[
             MouseAnnotation[Null], {
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[561290289][
               Null] -> "", 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[561290289][
                Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                 Blank[]]] :> (
               TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                TypeSystem`NestedGrid`PackagePrivate`path; 
               TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                TypeSystem`NestedGrid`PackagePrivate`path, 
                 TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
              Null :> Spacer[10], Blank[] :> Spacer[10]}], 
            TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
           FrameMargins -> 0, Alignment -> Top, 
           ImageSize -> {Automatic, 14}]}, 
        DynamicBox[
         ToBoxes[
          Column[
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
             0, {{}, {0, 0.05, 0}}]], StandardForm], 
         ImageSizeCache -> {263., {175., 181.}}, 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
        TypeSystem`NestedGrid`PackagePrivate`deleteState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$], 
        DynamicModuleValues :> {}, Initialization :> 
        Block[{$ContextPath = $ContextPath}, 
          Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("Dataset[<>]"& )]}], ",", 
   RowBox[{"\<\"Configurations\"\>", "\[Rule]", 
    TemplateBox[{TagBox[
       DynamicModuleBox[{
        TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
         Data`UnorderedAssociation[
          "RowCount" -> 1, "Length" -> 6, "InitialType" -> TypeSystem`Assoc[
             TypeSystem`Struct[{"Value", "Options"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["NeuralNetwork"]], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
             
             TypeSystem`Struct[{
              "Experiments", "PredictedPerformances", "Index"}, {
               TypeSystem`Tuple[{
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 4], 
                   TypeSystem`Vector[TypeSystem`AnyType, 4]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 7], 
                   TypeSystem`Vector[TypeSystem`AnyType, 7]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1]}]}], 
               
               TypeSystem`Struct[{
                "EvaluationTime", "ModelMemory", "StandardDeviation", 
                 "TrainingMemory", "TrainingTime"}, {
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Atom[Integer]}], 6], "Shape" -> 
           TypeSystem`PackageScope`HeaderShape[
             Association[{All, 
                TypeSystem`PackageScope`KeyDummy[11]} -> 
              3, {All, "Experiments"} -> 60, {All, "PredictedPerformances"} -> 
              Association[{All, "PredictedPerformances", "EvaluationTime"} -> 
                1, {All, "PredictedPerformances", "ModelMemory"} -> 
                1, {All, "PredictedPerformances", "StandardDeviation"} -> 
                1, {All, "PredictedPerformances", "TrainingMemory"} -> 
                1, {All, "PredictedPerformances", "TrainingTime"} -> 1], {
               All, "Index"} -> 1], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`HeaderShape[
                 
                 Association[{Keys, "Value"} -> 1, {Keys, "Options"} -> 
                  Association[{Keys, "Options", All, 
                    TypeSystem`PackageScope`KeyDummy[10]} -> 
                    1, {Keys, "Options", All, "Value"} -> 1]], 
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Value" -> TypeSystem`PackageScope`AtomShape[117.], 
                   "Options" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Value" -> TypeSystem`PackageScope`UnknownShape]]]], 14, {
                    All, "Options"}]]]], 
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Experiments" -> TypeSystem`PackageScope`RowShape[{
                    TypeSystem`PackageScope`HeaderShape[
                    
                    Association[{All, "Experiments", 1, "MeanCrossEntropy"} -> 
                    1, {All, "Experiments", 1, "StandardDeviation"} -> 
                    1, {All, "Experiments", 1, "EvaluationTime"} -> 
                    1, {All, "Experiments", 1, "TestSize"} -> 
                    1, {All, "Experiments", 1, "ModelMemory"} -> 
                    1, {All, "Experiments", 1, "ModelUtility"} -> 
                    1, {All, "Experiments", 1, "TrainingSize"} -> 
                    1, {All, "Experiments", 1, "TrainingTime"} -> 
                    1, {All, "Experiments", 1, "TrainingMemory"} -> 
                    1, {All, "Experiments", 1, "ExperimentCount"} -> 
                    1, {All, "Experiments", 1, "MeanCrossEntropyHistory"} -> 
                    1, {All, "Experiments", 1, "StandardDeviationHistory"} -> 
                    1], 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "MeanCrossEntropy" -> 
                    TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "EvaluationTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TestSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ModelUtility" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ExperimentCount" -> 
                    TypeSystem`PackageScope`AtomShape[34], 
                    "MeanCrossEntropyHistory" -> 
                    TypeSystem`PackageScope`UnknownShape, 
                    "StandardDeviationHistory" -> 
                    TypeSystem`PackageScope`UnknownShape]]], 
                    TypeSystem`PackageScope`HeaderShape[
                    
                    Association[{All, "Experiments", 2, "MeanCrossEntropy"} -> 
                    1, {All, "Experiments", 2, "StandardDeviation"} -> 
                    1, {All, "Experiments", 2, "EvaluationTime"} -> 
                    1, {All, "Experiments", 2, "TestSize"} -> 
                    1, {All, "Experiments", 2, "ModelMemory"} -> 
                    1, {All, "Experiments", 2, "ModelUtility"} -> 
                    1, {All, "Experiments", 2, "TrainingSize"} -> 
                    1, {All, "Experiments", 2, "TrainingTime"} -> 
                    1, {All, "Experiments", 2, "TrainingMemory"} -> 
                    1, {All, "Experiments", 2, "ExperimentCount"} -> 
                    1, {All, "Experiments", 2, "MeanCrossEntropyHistory"} -> 
                    1, {All, "Experiments", 2, "StandardDeviationHistory"} -> 
                    1], 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "MeanCrossEntropy" -> 
                    TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "EvaluationTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TestSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ModelUtility" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ExperimentCount" -> 
                    TypeSystem`PackageScope`AtomShape[34], 
                    "MeanCrossEntropyHistory" -> 
                    TypeSystem`PackageScope`UnknownShape, 
                    "StandardDeviationHistory" -> 
                    TypeSystem`PackageScope`UnknownShape]]], 
                    TypeSystem`PackageScope`HeaderShape[
                    
                    Association[{All, "Experiments", 3, "MeanCrossEntropy"} -> 
                    1, {All, "Experiments", 3, "StandardDeviation"} -> 
                    1, {All, "Experiments", 3, "EvaluationTime"} -> 
                    1, {All, "Experiments", 3, "TestSize"} -> 
                    1, {All, "Experiments", 3, "ModelMemory"} -> 
                    1, {All, "Experiments", 3, "ModelUtility"} -> 
                    1, {All, "Experiments", 3, "TrainingSize"} -> 
                    1, {All, "Experiments", 3, "TrainingTime"} -> 
                    1, {All, "Experiments", 3, "TrainingMemory"} -> 
                    1, {All, "Experiments", 3, "ExperimentCount"} -> 
                    1, {All, "Experiments", 3, "MeanCrossEntropyHistory"} -> 
                    1, {All, "Experiments", 3, "StandardDeviationHistory"} -> 
                    1], 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "MeanCrossEntropy" -> 
                    TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "EvaluationTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TestSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ModelUtility" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ExperimentCount" -> 
                    TypeSystem`PackageScope`AtomShape[34], 
                    "MeanCrossEntropyHistory" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape], 7, {
                    All, "Experiments", 3, "MeanCrossEntropyHistory"}], 
                    "StandardDeviationHistory" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape], 7, {
                    All, "Experiments", 3, "StandardDeviationHistory"}]]]], 
                    TypeSystem`PackageScope`HeaderShape[
                    
                    Association[{All, "Experiments", 4, "MeanCrossEntropy"} -> 
                    1, {All, "Experiments", 4, "StandardDeviation"} -> 
                    1, {All, "Experiments", 4, "EvaluationTime"} -> 
                    1, {All, "Experiments", 4, "TestSize"} -> 
                    1, {All, "Experiments", 4, "ModelMemory"} -> 
                    1, {All, "Experiments", 4, "ModelUtility"} -> 
                    1, {All, "Experiments", 4, "TrainingSize"} -> 
                    1, {All, "Experiments", 4, "TrainingTime"} -> 
                    1, {All, "Experiments", 4, "TrainingMemory"} -> 
                    1, {All, "Experiments", 4, "ExperimentCount"} -> 
                    1, {All, "Experiments", 4, "MeanCrossEntropyHistory"} -> 
                    1, {All, "Experiments", 4, "StandardDeviationHistory"} -> 
                    1], 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "MeanCrossEntropy" -> 
                    TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "EvaluationTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TestSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ModelUtility" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[60], "ExperimentCount" -> 
                    TypeSystem`PackageScope`AtomShape[34], 
                    "MeanCrossEntropyHistory" -> 
                    TypeSystem`PackageScope`UnknownShape, 
                    "StandardDeviationHistory" -> 
                    TypeSystem`PackageScope`UnknownShape]]], 
                    TypeSystem`PackageScope`HeaderShape[
                    
                    Association[{All, "Experiments", 5, "MeanCrossEntropy"} -> 
                    1, {All, "Experiments", 5, "StandardDeviation"} -> 
                    1, {All, "Experiments", 5, "EvaluationTime"} -> 
                    1, {All, "Experiments", 5, "TestSize"} -> 
                    1, {All, "Experiments", 5, "ModelMemory"} -> 
                    1, {All, "Experiments", 5, "ModelUtility"} -> 
                    1, {All, "Experiments", 5, "TrainingSize"} -> 
                    1, {All, "Experiments", 5, "TrainingTime"} -> 
                    1, {All, "Experiments", 5, "TrainingMemory"} -> 
                    1, {All, "Experiments", 5, "ExperimentCount"} -> 
                    1, {All, "Experiments", 5, "MeanCrossEntropyHistory"} -> 
                    1, {All, "Experiments", 5, "StandardDeviationHistory"} -> 
                    1], 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "MeanCrossEntropy" -> 
                    TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "EvaluationTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TestSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelMemory" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ModelUtility" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingSize" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60], "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[34], "ExperimentCount" -> 
                    TypeSystem`PackageScope`AtomShape[34], 
                    "MeanCrossEntropyHistory" -> 
                    TypeSystem`PackageScope`UnknownShape, 
                    "StandardDeviationHistory" -> 
                    TypeSystem`PackageScope`UnknownShape]]]}], 
                  "PredictedPerformances" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "EvaluationTime" -> TypeSystem`PackageScope`AtomShape[60],
                     "ModelMemory" -> TypeSystem`PackageScope`AtomShape[34], 
                    "StandardDeviation" -> 
                    TypeSystem`PackageScope`UnknownShape, "TrainingMemory" -> 
                    TypeSystem`PackageScope`AtomShape[34], "TrainingTime" -> 
                    TypeSystem`PackageScope`AtomShape[60]]], "Index" -> 
                  TypeSystem`PackageScope`AtomShape[34]]]]], 1, {}]], 
           "InitialData" -> TypeSystem`PackageScope`CacheHandle[712954860], 
           "Type" -> TypeSystem`Assoc[
             TypeSystem`Struct[{"Value", "Options"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["NeuralNetwork"]], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
             
             TypeSystem`Struct[{
              "Experiments", "PredictedPerformances", "Index"}, {
               TypeSystem`Tuple[{
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 4], 
                   TypeSystem`Vector[TypeSystem`AnyType, 4]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 7], 
                   TypeSystem`Vector[TypeSystem`AnyType, 7]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength], 
                   TypeSystem`Vector[
                   TypeSystem`AnyType, TypeSystem`AnyLength]}], 
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1]}]}], 
               
               TypeSystem`Struct[{
                "EvaluationTime", "ModelMemory", "StandardDeviation", 
                 "TrainingMemory", "TrainingTime"}, {
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Atom[Integer]}], 6], "HandleQ" -> True, "RowTarget" -> 
           20, "Data" -> TypeSystem`PackageScope`CacheHandle[712954860]], 
         TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
         TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
         DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, Keys}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                  SpanFromLeft, SpanFromLeft, 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Experiments\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Experiments\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[All, "Experiments"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Center, Baseline}], SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PredictedPerformances\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PredictedPerformances\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "PredictedPerformances"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[All, "PredictedPerformances"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Center, Baseline}], SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Index"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[All, "Index"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}]}, {
                 SpanFromAbove, SpanFromBoth, SpanFromBoth, SpanFromAbove, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  SpanFromBoth, SpanFromBoth, SpanFromBoth, 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "PredictedPerformances", "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "PredictedPerformances", "EvaluationTime"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "PredictedPerformances", "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "PredictedPerformances", "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "PredictedPerformances", "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "PredictedPerformances", "StandardDeviation"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "PredictedPerformances", "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "PredictedPerformances", "TrainingMemory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "PredictedPerformances", "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "PredictedPerformances", "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], SpanFromAbove}, {
                  Item[
                   Pane[
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Options\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Options\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Center, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromLeft, 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "MeanCrossEntropy"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "MeanCrossEntropy"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 1, "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "StandardDeviation"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "EvaluationTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "TestSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "TestSize"]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "ModelUtility"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "ModelUtility"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "TrainingSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "TrainingSize"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TrainingTime\"", FontColor -> GrayLevel[0.4]]]
                    , {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "TrainingMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 1, "ExperimentCount"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "ExperimentCount"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 1, "MeanCrossEntropyHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "MeanCrossEntropyHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 1, "StandardDeviationHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 1, "StandardDeviationHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "MeanCrossEntropy"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "MeanCrossEntropy"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 2, "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "StandardDeviation"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "EvaluationTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "TestSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "TestSize"]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "ModelUtility"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "ModelUtility"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "TrainingSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "TrainingSize"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "TrainingMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 2, "ExperimentCount"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "ExperimentCount"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 2, "MeanCrossEntropyHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "MeanCrossEntropyHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 2, "StandardDeviationHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 2, "StandardDeviationHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "MeanCrossEntropy"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "MeanCrossEntropy"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 3, "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "StandardDeviation"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "EvaluationTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "TestSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "TestSize"]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "ModelUtility"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "ModelUtility"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "TrainingSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "TrainingSize"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "TrainingMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 3, "ExperimentCount"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "ExperimentCount"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 3, "MeanCrossEntropyHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "MeanCrossEntropyHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 3, "StandardDeviationHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 3, "StandardDeviationHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "MeanCrossEntropy"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "MeanCrossEntropy"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 4, "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "StandardDeviation"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "EvaluationTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "TestSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "TestSize"]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "ModelUtility"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "ModelUtility"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "TrainingSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "TrainingSize"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "TrainingMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 4, "ExperimentCount"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "ExperimentCount"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 4, "MeanCrossEntropyHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "MeanCrossEntropyHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 4, "StandardDeviationHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 4, "StandardDeviationHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "MeanCrossEntropy"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "MeanCrossEntropy"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 5, "StandardDeviation"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "StandardDeviation"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EvaluationTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "EvaluationTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "EvaluationTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TestSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TestSize\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "TestSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "TestSize"]], "Mouse"], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "ModelMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "ModelMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ModelUtility\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "ModelUtility"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "ModelUtility"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "TrainingSize"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "TrainingSize"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingTime\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "TrainingTime"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "TrainingTime"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingMemory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "TrainingMemory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "TrainingMemory"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{All, "Experiments", 5, "ExperimentCount"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "ExperimentCount"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MeanCrossEntropyHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 5, "MeanCrossEntropyHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "MeanCrossEntropyHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviationHistory\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1748094838][{
                    All, "Experiments", 5, "StandardDeviationHistory"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    All, "Experiments", 5, "StandardDeviationHistory"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.000103722"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["PredictedPerformances"], 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["PredictedPerformances"], 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.020", "0.005"}, "Around"], 
                    Around[0.019997304220410704`, 0.004678202474323924]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["PredictedPerformances"], 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["3386752"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["PredictedPerformances"], 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["40.3248"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["PredictedPerformances"], 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Index"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"1.7", "0.8"}, "Around"], 
                    Around[1.7245881986788483`, 0.8197345203604676]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.296", "0.020"}, "Around"], 
                    Around[0.29583991094925655`, 0.019590934520214476`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.0000390547"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["31556"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1.71639"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.794328"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["628930."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[3.5550179784069003`, 0.10269634755337104`], 
                    Around[0.24356700101043607`, 0.00833539172566694], 
                    Around[2.658487527365747, 0.050233390176104786`], 
                    Around[0.44128028793231006`, 0.015616162383246542`]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[3.5550179784069003`, 0.10269634755337104`], 
                    Around[0.24356700101043607`, 0.00833539172566694], 
                    Around[2.658487527365747, 0.050233390176104786`], 
                    Around[0.44128028793231006`, 0.015616162383246542`]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["MeanCrossEntropyHistory"]]], "Mouse"]], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.34928874977221364`, 0.003755433570879284], 
                    Around[0.2996323619981719, 0.002127880243541693], 
                    Around[0.26072669164118434`, 0.0016165042770803514`], 
                    Around[0.2737118403854564, 0.0017317247835304153`]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.34928874977221364`, 0.003755433570879284], 
                    Around[0.2996323619981719, 0.002127880243541693], 
                    Around[0.26072669164118434`, 0.0016165042770803514`], 
                    Around[0.2737118403854564, 0.0017317247835304153`]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 1, 
                    Key["StandardDeviationHistory"]]], "Mouse"]], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.7", "0.4"}, "Around"], 
                    Around[0.7191712199364394, 0.35780901120200564`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2604", "0.0034"}, "Around"], 
                    Around[0.2604032312511848, 0.003355945915624007]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.0000294562"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["59538"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1.99273"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.941237"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["892197."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.170081176607578, 0.010145781620327254`], 
                    Around[1.352690466787863, 0.030573310246608153`], 
                    Around[2.2255375032809432`, 0.048911252794542864`], 
                    Around[0.1283644844242774, 0.008190142833979785], 
                    Around[0.12120538030069315`, 0.0071488045187168975`], 
                    Around[0.3171483082172819, 0.01446934193788865]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.170081176607578, 0.010145781620327254`], 
                    Around[1.352690466787863, 0.030573310246608153`], 
                    Around[2.2255375032809432`, 0.048911252794542864`], 
                    Around[0.1283644844242774, 0.008190142833979785], 
                    Around[0.12120538030069315`, 0.0071488045187168975`], 
                    Around[0.3171483082172819, 0.01446934193788865]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["MeanCrossEntropyHistory"]]], "Mouse"]], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.251294334969105, 0.0014411758617947164`], 
                    Around[0.2709406297918701, 0.001663974354570939], 
                    Around[0.2678434239304893, 0.0018435175478250794`], 
                    Around[0.2549949724779034, 0.001399984897672589], 
                    Around[0.2632048212844568, 0.0015404652949819457`], 
                    Around[0.2541412050532841, 0.0015980700206006666`]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.251294334969105, 0.0014411758617947164`], 
                    Around[0.2709406297918701, 0.001663974354570939], 
                    Around[0.2678434239304893, 0.0018435175478250794`], 
                    Around[0.2549949724779034, 0.001399984897672589], 
                    Around[0.2632048212844568, 0.0015404652949819457`], 
                    Around[0.2541412050532841, 0.0015980700206006666`]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 2, 
                    Key["StandardDeviationHistory"]]], "Mouse"]], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.23", "0.13"}, "Around"], 
                    Around[0.22710034982073285`, 0.12668338526780887`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2280", "0.0014"}, "Around"], 
                    Around[0.22798322803819798`, 0.001449314956970383]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.0000362801"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["66858"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["2.26125"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["300"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1.43029"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["972288."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["7"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.616", "0.024"}, "Around"], 
                    Around[0.6156463731603913, 0.023894349644411627`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 1]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2327", "0.0016"}, "Around"], 
                    Around[0.23267659421281514`, 0.0015959441853523415`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 1]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"-1.49", "0.12"}, "Around"], 
                    Around[-1.488704585981165, 0.12455672592395904`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.040", "0.004"}, "Around"], 
                    Around[0.04009274658351542, 0.004370266081434078]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.0000440407"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["25479"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["5.69681"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1500"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["6.718"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1413856."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[-1.6555406658794514`, 0.030518926370232322`], 
                    Around[-1.5622818506180207`, 0.030559384989021107`], 
                    Around[-1.248291241446022, 0.03542155795676443]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[-1.6555406658794514`, 0.030518926370232322`], 
                    Around[-1.5622818506180207`, 0.030559384989021107`], 
                    Around[-1.248291241446022, 0.03542155795676443]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["MeanCrossEntropyHistory"]]], "Mouse"]], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.03316963333326947, 0.0008117450585716938], 
                    Around[0.03898709175363926, 0.0006288977245132053], 
                    Around[0.048121514663637524`, 0.0006963376532827465]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.03316963333326947, 0.0008117450585716938], 
                    Around[0.03898709175363926, 0.0006288977245132053], 
                    Around[0.048121514663637524`, 0.0006963376532827465]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 4, 
                    Key["StandardDeviationHistory"]]], "Mouse"]], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"-3.05", "0.04"}, "Around"], 
                    Around[-3.048365434338462, 0.043516440096025163`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["MeanCrossEntropy"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.020", "0.005"}, "Around"], 
                    Around[0.019997304220410704`, 0.004678202474323924]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["StandardDeviation"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["0.000103722"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["EvaluationTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1999"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["TestSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["177136"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["ModelMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["7.03969"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["ModelUtility"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["7994"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["TrainingSize"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["31.6228"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["TrainingTime"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["3386752"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["TrainingMemory"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["ExperimentCount"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[-3.048365434338462, 0.030770769884997565`]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[-3.048365434338462, 0.030770769884997565`]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["MeanCrossEntropyHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["MeanCrossEntropyHistory"]]], "Mouse"]], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    Around[0.019997304220410704`, 0.003307988693358132]}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Around[0.019997304220410704`, 0.003307988693358132]}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["StandardDeviationHistory"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 5, 
                    Key["StandardDeviationHistory"]]], "Mouse"]], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {
                  Item[
                   Pane[
                    Pane[
                    Annotation["NeuralNetwork", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{117., Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetworkType"]]], "Mouse"], 
                    ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation["FullyConnected", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetworkType"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.005", "0.008"}, "Around"], 
                    Around[0.005211665972482663, 0.00849337395514633]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 2]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2262", "0.0013"}, "Around"], 
                    Around[0.22621839075969985`, 0.0013037604930368496`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 2]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkDepth", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetworkDepth"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.025", "0.009"}, "Around"], 
                    Around[0.02456198856829045, 0.008840605803167423]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 3]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2259", "0.0013"}, "Around"], 
                    Around[0.22593820507928442`, 0.0012609837192496586`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 3]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["NumberOfParameters", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NumberOfParameters"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes["17950"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NumberOfParameters"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.100", "0.011"}, "Around"], 
                    Around[0.10016891912288654`, 0.010824413670935819`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 4]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2314", "0.0014"}, "Around"], 
                    Around[0.23142402064739817`, 0.0013717587974305585`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 4]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["ActivationFunction", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["ActivationFunction"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation["SELU", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["ActivationFunction"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.802", "0.035"}, "Around"], 
                    Around[0.8022529442370938, 0.034850234078282714`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 5]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2236", "0.0019"}, "Around"], 
                    Around[0.22360151220081004`, 0.0019028363253536392`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 5]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["L2Regularization", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["L2Regularization"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.010", "0.009"}, "Around"], 
                    Around[0.010143104498749587`, 0.009125459558532131]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 6]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2252", "0.0013"}, "Around"], 
                    Around[0.22518037703781707`, 0.0013379465858077459`]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 6]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["Dropout", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["Dropout"]]], "Mouse"], 
                    ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["Dropout"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.032", "0.009"}, "Around"], 
                    Around[0.03171745318523557, 0.008588268381063203]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["MeanCrossEntropyHistory"], 7]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    TemplateBox[{"0.2308", "0.0013"}, "Around"], 
                    Around[0.2308434963295612, 0.001316723174602093]], 
                    FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Experiments"], 3, 
                    Key["StandardDeviationHistory"], 7]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetInitializationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetInitializationMethod"]]], "Mouse"], 
                    ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetInitializationMethod"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"ADAM", "L2Regularization" -> None}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"ADAM", "L2Regularization" -> None}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][{
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]]]], 
                    "Mouse"]], ImageSize -> {{60, Full}, Automatic}], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "MaxTrainingRounds", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes["200"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[MaxTrainingRounds], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "ValidationSet", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[ValidationSet]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Scaled", "[", "0.2`", "]"}], FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[ValidationSet], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["EarlyStopping", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["EarlyStopping"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["EarlyStopping"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "TrainingProgressReporting", FontFamily -> 
                    "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                    True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[TrainingProgressReporting]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key[TrainingProgressReporting], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetTrainOptions", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetTrainOptions"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["NetTrainOptions"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {SpanFromAbove, 
                  Item[
                   Pane[
                    Item[
                    Pane[
                    Pane[
                    Annotation["LossFunction", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["LossFunction"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  Item[
                   Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1748094838][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "Value" -> "NeuralNetwork", "Options" -> 
                    Association[
                    "NetworkType" -> Association["Value" -> "FullyConnected"],
                     "NetworkDepth" -> Association["Value" -> 8], 
                    "NumberOfParameters" -> Association["Value" -> 17950], 
                    "ActivationFunction" -> Association["Value" -> "SELU"], 
                    "L2Regularization" -> Association["Value" -> None], 
                    "Dropout" -> Association["Value" -> None], 
                    "NetInitializationMethod" -> 
                    Association["Value" -> Automatic], "OptimizationMethod" -> 
                    Association[
                    "Value" -> {"ADAM", "L2Regularization" -> None}], 
                    MaxTrainingRounds -> Association["Value" -> 200], 
                    ValidationSet -> Association["Value" -> Scaled[0.2]], 
                    "EarlyStopping" -> Association["Value" -> False], 
                    TrainingProgressReporting -> Association["Value" -> None],
                     "NetTrainOptions" -> Association["Value" -> Automatic], 
                    "LossFunction" -> Association["Value" -> Automatic]]]], 
                    Key["Options"], 
                    Key["LossFunction"], 
                    Key["Value"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                   GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
                  SpanFromAbove, SpanFromAbove}, {
                  Item[
                   Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    6 (-1), {1, 6 - -1 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 1, {
                    1, 6 - -1 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 1, " of ", 
                    Style[
                    6, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 1, {
                    1, 6 - 1 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 6 1, {
                    1, 6 - 1 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    6 (-1), {1, 6 - -1 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 1, {
                    1, 6 - -1 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 1, " of ", 
                    Style[6, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 1, {
                    1, 6 - 1 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 6 1, {
                    1, 6 - 1 + 1}])}]}, "   "]]], Background -> 
                   GrayLevel[0.98], Alignment -> {Left, Top}, 
                   BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                  SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                  FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
               LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
               False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
            TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                 If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                   TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               If[GeneralUtilities`$DebugMode, 
                Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                  TypeSystem`NestedGrid`PackagePrivate`formatState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
           DynamicModuleValues :> {}], 
         TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
             TypeSystem`PackageScope`Pathbar[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`updateState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1748094838]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
           Dynamic[
            Replace[
             MouseAnnotation[Null], {
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1748094838][
               Null] -> "", 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1748094838][
                Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                 Blank[]]] :> (
               TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                TypeSystem`NestedGrid`PackagePrivate`path; 
               TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                TypeSystem`NestedGrid`PackagePrivate`path, 
                 TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
              Null :> Spacer[10], Blank[] :> Spacer[10]}], 
            TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
           FrameMargins -> 0, Alignment -> Top, 
           ImageSize -> {Automatic, 14}]}, 
        DynamicBox[
         ToBoxes[
          Column[
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
             0, {{}, {0, 0.05, 0}}]], StandardForm], 
         ImageSizeCache -> {8653., {260., 266.}}, 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
        TypeSystem`NestedGrid`PackagePrivate`deleteState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$], 
        DynamicModuleValues :> {}, Initialization :> 
        Block[{$ContextPath = $ContextPath}, 
          Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("Dataset[<>]"& )]}], ",", 
   RowBox[{"\<\"MaxTrainingSize\"\>", "\[Rule]", "9993"}], ",", 
   RowBox[{"\<\"PreprocessorEvaluationTime\"\>", "\[Rule]", 
    "3.12841796875002516736818947151733`4.*^-6"}], ",", 
   RowBox[{"\<\"PreprocessorMemory\"\>", "\[Rule]", "39264"}], ",", 
   RowBox[{"\<\"InputDimension\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"OutputDimension\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"BaselineLogProbability\"\>", "\[Rule]", 
    RowBox[{"-", "1.4189385332046727`"}]}], ",", 
   RowBox[{"\<\"VariableBudget\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"CheckpointingInfo\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"Checkpointing\"\>", "\[Rule]", "False"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"UserStop\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"NaturalStop\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"AbortStop\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"LastReportingTime\"\>", "\[Rule]", 
    "3.785692263296391`16.330720296678855*^9"}], ",", 
   RowBox[{"\<\"RoundPartitioning\"\>", "\[Rule]", 
    TemplateBox[{TagBox[
       DynamicModuleBox[{
        TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
         Data`UnorderedAssociation[
          "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
               "ExperimentCounts"}, {
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer]}], 5], "Shape" -> 
           TypeSystem`PackageScope`HeaderShape[
             
             Association[{All, "TrainingSizes"} -> 1, {All, "TimeBudgets"} -> 
              1, {All, "ElapsedTimes"} -> 1, {All, "ExperimentCounts"} -> 1], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`RowShape[
                Association[
                "TrainingSizes" -> TypeSystem`PackageScope`AtomShape[34], 
                 "TimeBudgets" -> TypeSystem`PackageScope`AtomShape[60], 
                 "ElapsedTimes" -> TypeSystem`PackageScope`AtomShape[60], 
                 "ExperimentCounts" -> 
                 TypeSystem`PackageScope`AtomShape[34]]]], 5, {}]], 
           "InitialData" -> TypeSystem`PackageScope`CacheHandle[1695504058], 
           "Type" -> TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
               "ExperimentCounts"}, {
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer]}], 5], "HandleQ" -> True, "RowTarget" -> 
           20, "Data" -> TypeSystem`PackageScope`CacheHandle[1695504058]], 
         TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
         TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
         DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSizes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TrainingSizes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1757279037][{All, "TrainingSizes"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[All, "TrainingSizes"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeBudgets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeBudgets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1757279037][{All, "TimeBudgets"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[All, "TimeBudgets"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ElapsedTimes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ElapsedTimes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1757279037][{All, "ElapsedTimes"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[All, "ElapsedTimes"]], "Mouse"], 
                   Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}], 
                  Item[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCounts\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExperimentCounts\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1757279037][{All, "ExperimentCounts"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[All, "ExperimentCounts"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                   Alignment -> {Left, Baseline}]}, {
                  Pane[
                   Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[1, 
                    Key["TrainingSizes"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["21.2914"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[1, 
                    Key["TimeBudgets"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["27.6733"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[1, 
                    Key["ElapsedTimes"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["24"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[1, 
                    Key["ExperimentCounts"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Pane[
                   Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[2, 
                    Key["TrainingSizes"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["35.4857"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[2, 
                    Key["TimeBudgets"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["45.8208"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[2, 
                    Key["ElapsedTimes"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["32"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[2, 
                    Key["ExperimentCounts"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Pane[
                   Annotation[
                    RawBoxes["300"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[3, 
                    Key["TrainingSizes"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["59.1428"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[3, 
                    Key["TimeBudgets"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["74.4641"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[3, 
                    Key["ElapsedTimes"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["42"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[3, 
                    Key["ExperimentCounts"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Pane[
                   Annotation[
                    RawBoxes["1500"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[4, 
                    Key["TrainingSizes"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["98.5713"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[4, 
                    Key["TimeBudgets"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["111.964"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[4, 
                    Key["ElapsedTimes"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["19"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[4, 
                    Key["ExperimentCounts"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}, {
                  Pane[
                   Annotation[
                    RawBoxes["7994"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[5, 
                    Key["TrainingSizes"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["164.285"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[5, 
                    Key["TimeBudgets"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["164.905"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[5, 
                    Key["ElapsedTimes"]]], "Mouse"], 
                   ImageSize -> {{60, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}], 
                  Pane[
                   Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1757279037][
                    GeneralUtilities`Slice[5, 
                    Key["ExperimentCounts"]]], "Mouse"], 
                   ImageSize -> {{34, Full}, Automatic}, 
                   Alignment -> {Left, Baseline}]}}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                  FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
               LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
               False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
            TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                 If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                   TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1757279037][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               If[GeneralUtilities`$DebugMode, 
                Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                  TypeSystem`NestedGrid`PackagePrivate`formatState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
           DynamicModuleValues :> {}], 
         TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
             TypeSystem`PackageScope`Pathbar[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`updateState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1757279037]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
           Dynamic[
            Replace[
             MouseAnnotation[Null], {
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1757279037][
               Null] -> "", 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1757279037][
                Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                 Blank[]]] :> (
               TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                TypeSystem`NestedGrid`PackagePrivate`path; 
               TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                TypeSystem`NestedGrid`PackagePrivate`path, 
                 TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
              Null :> Spacer[10], Blank[] :> Spacer[10]}], 
            TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
           FrameMargins -> 0, Alignment -> Top, 
           ImageSize -> {Automatic, 14}]}, 
        DynamicBox[
         ToBoxes[
          Column[
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
             TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
              TypeSystem`NestedGrid`PackagePrivate`alignBar[
              TypeSystem`NestedGrid`PackagePrivate`$state$$][
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
           If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
             0, {{}, {0, 0.05, 0}}]], StandardForm], 
         ImageSizeCache -> {384., {83., 89.}}, 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
        TypeSystem`NestedGrid`PackagePrivate`deleteState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$], 
        DynamicModuleValues :> {}, Initialization :> 
        Block[{$ContextPath = $ContextPath}, 
          Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("Dataset[<>]"& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.78571099392798*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"4c581b06-5f2c-4aaf-abae-50f5e39910e0"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"nn", "/@", 
      RowBox[{"testData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "-", 
     RowBox[{"Flatten", "[", 
      RowBox[{"testData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.785696713743019*^9, {3.785697083248138*^9, 3.7856970837269*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"39652b51-a198-4ae4-96bf-923a63e4c49a"],

Cell[BoxData["0.00006634067648121641`"], "Output",
 CellChangeTimes->{3.785696715313222*^9, 3.7856970849994926`*^9, 
  3.785700367195736*^9, 3.785701313428136*^9, 3.7857091536758623`*^9, 
  3.7857092574449368`*^9, 3.78570945509523*^9, 3.785710328576311*^9, 
  3.785710383568935*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"0a66b3fa-dc69-4810-9a3b-cf9d80d38dd5"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7856965717634907`*^9},ExpressionUUID->"62453c14-2c72-49c4-a167-\
18f4f4ff0d5e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\"\<Higher-order\>\"", " ", 
   RowBox[{"(", "HO", ")"}], " ", 
   RowBox[{"LSTM", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.785699808600911*^9, 3.785699814029025*^9}, {
  3.842708962567331*^9, 3.842708964398823*^9}, {3.8427090045118046`*^9, 
  3.8427090146263075`*^9}, {3.842709158531748*^9, 
  3.842709159337088*^9}},ExpressionUUID->"e313ef2f-84e3-4c04-ba06-\
473e5e088220"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"LSTM", ".", " ", "Alternative"}], " ", "4."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryUnitLayer", "[", 
    RowBox[{"physicalLength_", ",", "hiddenVecDim_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateHLayer", "[", "hiddenVecDim", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sr\>\"", "\[Rule]", 
        RowBox[{"SequenceRestLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"AppendLayer", "[", "]"}]}]}], "\[IndentingNewLine]", "|>"}], 
     ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<c\>\"", ",", "\"\<Element\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"\"\<sr\>\"", "\[Rule]", " ", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<c\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"\"\<Input_s\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"physicalLength", ",", "hiddenVecDim"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.781089858052827*^9, 3.781089858131581*^9}, {
   3.7810899433452473`*^9, 3.7810899467215223`*^9}, 3.7810921135731573`*^9, {
   3.7810927893797393`*^9, 3.7810927952869067`*^9}, {3.7810928767634907`*^9, 
   3.781092897848489*^9}, {3.781092958915044*^9, 3.781093015601199*^9}, {
   3.7810930483436127`*^9, 3.7810931101804895`*^9}, {3.7811058509960785`*^9, 
   3.7811058566105003`*^9}, {3.7856994049623327`*^9, 3.785699436936433*^9}, 
   3.78569947832316*^9, {3.7856995988077097`*^9, 3.7856996144718657`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a3c5abfe-f788-40d1-a9cc-406bc70e2dfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"longShortTermMemoryLayer", "[", 
   RowBox[{"physicalLength_", ",", "hiddenVecDim_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"longShortTermMemoryUnitLayer", "[", 
     RowBox[{"physicalLength", ",", "hiddenVecDim"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
      RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.785699667255822*^9, 3.7856996828949823`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"16566ca9-7d21-47ca-b768-92c2a70a2ad4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn0", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryLayer", "[", 
         RowBox[{"physicalLength", ",", "hiddenVecDim"}], "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"SequenceLastLayer", "[", 
           RowBox[{"\"\<Input\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "hiddenVecDim"}], "}"}]}], "]"}], 
          ","}], "*)"}], 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"6", "\[Rule]", 
           RowBox[{"NetPort", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"NetPort", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}]}], ",", 
        RowBox[{"2", "\[Rule]", "3"}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7804173132517366`*^9, 3.7804173138842964`*^9}, {
   3.7804174461259093`*^9, 3.7804174576697226`*^9}, {3.7804175436355886`*^9, 
   3.780417604760936*^9}, {3.7804179766286526`*^9, 3.7804179768102226`*^9}, {
   3.7804185710540457`*^9, 3.780418571163679*^9}, {3.780418623554368*^9, 
   3.780418624829462*^9}, {3.780420487606414*^9, 3.7804204877223516`*^9}, 
   3.7804247992670965`*^9, {3.780424920237071*^9, 3.780424921171367*^9}, {
   3.780424966233407*^9, 3.780424966707038*^9}, 3.7804261433513827`*^9, 
   3.7804455742921267`*^9, {3.780578500861972*^9, 3.780578507475133*^9}, {
   3.781093371296123*^9, 3.781093408055897*^9}, {3.7810934555547066`*^9, 
   3.7810934578678894`*^9}, {3.7810937568351097`*^9, 3.781093819112937*^9}, 
   3.785680057741119*^9, {3.7856996898730497`*^9, 3.785699694375977*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c7c1323a-875a-4b9f-9fa4-333ff5f0eeb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark0", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn0", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{"LearningRateMultipliers", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1", ",", "\"\<Net\>\"", ",", "\"\<mera\>\"", ",", "1", ",", "i"}],
            "}"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"learningRateMultipliers", "=", "0.5"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Length", "@", "meraNumbers"}], "+", "1"}]}], "}"}]}], 
        "]"}]}]}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804251457831163`*^9, 3.780425146031452*^9}, {
   3.780425203093649*^9, 3.780425203497569*^9}, {3.780425351438678*^9, 
   3.780425351935858*^9}, {3.7804254101191006`*^9, 3.7804254106018124`*^9}, {
   3.780427121302146*^9, 3.780427121485821*^9}, {3.7804271535215073`*^9, 
   3.7804271541393366`*^9}, {3.7804275285263777`*^9, 3.780427528707263*^9}, 
   3.78042757909974*^9, {3.780427683774827*^9, 3.780427686428179*^9}, {
   3.7804277724456615`*^9, 3.7804277731075335`*^9}, {3.7804280681371365`*^9, 
   3.780428082702261*^9}, {3.7804422537287583`*^9, 3.7804422591345673`*^9}, {
   3.7804423491760654`*^9, 3.780442351228731*^9}, {3.780443873352437*^9, 
   3.7804438746349945`*^9}, {3.7804459168071647`*^9, 3.780445935556423*^9}, {
   3.780446531673748*^9, 3.780446532756975*^9}, {3.7804465922783327`*^9, 
   3.7804465931583986`*^9}, {3.7804468639762063`*^9, 
   3.7804468673113537`*^9}, {3.780448459730441*^9, 3.7804484634016724`*^9}, {
   3.7804516204457626`*^9, 3.78045162135226*^9}, {3.780453020380103*^9, 
   3.780453058660821*^9}, {3.780453550238628*^9, 3.780453560387014*^9}, {
   3.780453639011162*^9, 3.7804536565626183`*^9}, {3.7804928879423428`*^9, 
   3.7804928905923853`*^9}, {3.7804929229647856`*^9, 3.780492923177938*^9}, {
   3.7804939288466125`*^9, 3.7804939449142914`*^9}, 3.780500823400428*^9, {
   3.780501407847386*^9, 3.780501418418017*^9}, {3.7805016699321213`*^9, 
   3.7805016700701904`*^9}, {3.7805018635993156`*^9, 
   3.7805018637152615`*^9}, {3.780508569822581*^9, 3.7805085763371105`*^9}, {
   3.7805086101206827`*^9, 3.78050861033994*^9}, {3.7805094443501773`*^9, 
   3.7805094445221596`*^9}, {3.7805094756413755`*^9, 3.780509475818198*^9}, {
   3.780510582701596*^9, 3.780510583391487*^9}, {3.7805142864136987`*^9, 
   3.780514286760807*^9}, {3.780515314094839*^9, 3.780515315227845*^9}, {
   3.780527315957329*^9, 3.7805273164609485`*^9}, {3.780534698307191*^9, 
   3.7805346984174433`*^9}, {3.780535529324477*^9, 3.7805355565408087`*^9}, {
   3.7805358312749357`*^9, 3.7805358417798185`*^9}, {3.780536085174992*^9, 
   3.780536127484544*^9}, 3.780542182756344*^9, {3.7805422428555765`*^9, 
   3.780542270523621*^9}, {3.7805717670488415`*^9, 3.7805717745975103`*^9}, {
   3.7805727185908847`*^9, 3.780572739283765*^9}, {3.780573449070488*^9, 
   3.780573493150141*^9}, {3.780573524620677*^9, 3.7805735303529205`*^9}, {
   3.7805753978789096`*^9, 3.7805754020776873`*^9}, {3.780575589474058*^9, 
   3.780575591224747*^9}, {3.7805757878301616`*^9, 3.7805757879681435`*^9}, {
   3.7805761725811777`*^9, 3.780576181513686*^9}, 3.780576811352572*^9, {
   3.7805770201616535`*^9, 3.7805770227988424`*^9}, {3.7805772026592865`*^9, 
   3.78057720936343*^9}, 3.780578069675277*^9, {3.7805781830434527`*^9, 
   3.780578186804682*^9}, {3.7805783626831474`*^9, 3.7805783788043003`*^9}, {
   3.780578552034584*^9, 3.780578552149544*^9}, {3.7805939740729904`*^9, 
   3.7805939763510933`*^9}, {3.7805958297534447`*^9, 3.780595830077115*^9}, 
   3.780596557342059*^9, {3.780597390011056*^9, 3.7805973901307354`*^9}, 
   3.780600857542925*^9, {3.7806008965017853`*^9, 3.780600921679203*^9}, {
   3.7806017913793573`*^9, 3.780601791713497*^9}, {3.780601913677452*^9, 
   3.780601914756578*^9}, {3.780602084487878*^9, 3.7806020909745417`*^9}, {
   3.7806021850620823`*^9, 3.7806021874028215`*^9}, 3.7806027684103785`*^9, 
   3.780604790698841*^9, 3.780605232108374*^9, {3.7806229306653323`*^9, 
   3.7806229308155017`*^9}, {3.7806602449203405`*^9, 3.780660269902335*^9}, {
   3.780660337386682*^9, 3.7806603423643885`*^9}, {3.78066112126309*^9, 
   3.7806611225299635`*^9}, {3.7806613014898148`*^9, 3.780661309709567*^9}, {
   3.7806615012465067`*^9, 3.7806615022331*^9}, {3.7806617757732134`*^9, 
   3.7806617786183677`*^9}, {3.7806618905911207`*^9, 
   3.7806618907320976`*^9}, {3.7806625626647882`*^9, 3.780662565171033*^9}, {
   3.7806633464833174`*^9, 3.7806633468519936`*^9}, {3.7806638247316523`*^9, 
   3.7806638255664268`*^9}, {3.7806639305302467`*^9, 
   3.7806639315190473`*^9}, {3.7806654838662844`*^9, 3.780665484029739*^9}, {
   3.780665829113824*^9, 3.7806658302056336`*^9}, {3.780677254852899*^9, 
   3.780677255171609*^9}, {3.7806773834820623`*^9, 3.780677411265581*^9}, 
   3.780678912804103*^9, {3.780680284192199*^9, 3.780680284517541*^9}, 
   3.7806809361165247`*^9, 3.780683702251604*^9, {3.7806858613514724`*^9, 
   3.780685865688034*^9}, 3.780690661238715*^9, {3.780690898072857*^9, 
   3.7806909093030033`*^9}, {3.7807067546789083`*^9, 3.780706758489109*^9}, {
   3.7807451805783205`*^9, 3.7807451828865905`*^9}, {3.7807637783739586`*^9, 
   3.780763778467944*^9}, 3.780797998478874*^9, {3.780798031121086*^9, 
   3.780798031368472*^9}, {3.7807981012316685`*^9, 3.780798101464279*^9}, {
   3.7807981321937313`*^9, 3.7807981325488024`*^9}, 3.7808819647291813`*^9, {
   3.780882064707729*^9, 3.7808820661763797`*^9}, 3.781022345862075*^9, {
   3.7810223825879064`*^9, 3.7810223828556376`*^9}, {3.781024939097582*^9, 
   3.781024943526224*^9}, {3.781025877224036*^9, 3.781025888447236*^9}, {
   3.781027713914467*^9, 3.7810277304231653`*^9}, {3.781028029424652*^9, 
   3.7810280304715023`*^9}, {3.781030623148692*^9, 3.78103062510245*^9}, {
   3.781805626237545*^9, 3.781805641589557*^9}, {3.7818113417913127`*^9, 
   3.781811342274887*^9}, {3.781820330689641*^9, 3.7818203390786686`*^9}, {
   3.781820573532629*^9, 3.7818205831327105`*^9}, {3.7820057685264344`*^9, 
   3.7820057719642525`*^9}, {3.782005805157473*^9, 3.7820058084238534`*^9}, 
   3.7832184957164307`*^9, {3.7836516036937356`*^9, 3.7836516120080175`*^9}, {
   3.783689772519551*^9, 3.7836898188329473`*^9}, 3.7838061991886387`*^9, {
   3.784165528791295*^9, 3.784165528885971*^9}, {3.784946508254901*^9, 
   3.784946514998931*^9}, 3.785171553869345*^9, 3.785680135219801*^9, 
   3.785684700048472*^9, {3.785699701217758*^9, 3.78569970270752*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"68efecd5-be03-4384-97e6-0b237a083865"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn0", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark0", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780418832993057*^9, 3.7804188556977067`*^9}, {
  3.7830125936404877`*^9, 3.783012596259305*^9}, {3.785699710679525*^9, 
  3.785699711733231*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a66c2a3d-6232-4280-b4c2-92a3e941f3b0"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.785721584214323*^9},ExpressionUUID->"8fada771-7afb-466a-b6b2-\
511c66b9a571"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\"\<Higher-order MPS\>\"", " ", 
   RowBox[{"(", "HOT", ")"}], " ", 
   RowBox[{"LSTM", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.785699808600911*^9, 3.785699814029025*^9}, {
  3.8427089482641177`*^9, 3.8427089589524193`*^9}, {3.842708992152771*^9, 
  3.842709026036975*^9}, {3.8427091641257563`*^9, 
  3.842709164333599*^9}},ExpressionUUID->"ada00711-e427-49eb-b444-\
425578e83d4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gateMpsLayer", "[", 
   RowBox[{
   "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
    "meraNumber_"}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Wx\>\"", "->", 
       RowBox[{"LinearLayer", "[", "hiddenVecDim", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<flatten\>\"", "\[Rule]", 
       RowBox[{"FlattenLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<pad\>\"", "\[Rule]", 
       RowBox[{"PaddingLayer", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "}"}], ",", 
         RowBox[{"\"\<Padding\>\"", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"physicalLength", "*", "hiddenVecDim"}], "}"}]}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<rep\>\"", "\[Rule]", 
       RowBox[{"ReplicateLayer", "[", "physicalDOF", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<transpose\>\"", "\[Rule]", 
       RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<mps\>\"", "->", 
       RowBox[{"NetChain", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mpsLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"physicalLength", "*", "hiddenVecDim"}], "+", "1"}], ",",
             "physicalDOF", ",", "meraNumber"}], "]"}], ",", 
          RowBox[{"LinearLayer", "[", "hiddenVecDim", "]"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], "*)"}], "}"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Wx+mps\>\"", "->", 
       RowBox[{"TotalLayer", "[", 
        RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "hiddenVecDim", "}"}], ",", 
           RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<e\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"LogisticSigmoid", "[", "#", "]"}], "&"}], "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<Wx\>\""}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}], "\[Rule]", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", 
        RowBox[{"\"\<pad\>\"", "\[Rule]", 
         RowBox[{"\"\<rep\>\"", "\[Rule]", 
          RowBox[{"\"\<transpose\>\"", "->", "\"\<mps\>\""}]}]}]}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Wx\>\"", ",", "\"\<mps\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<Wx+mps\>\"", "\[Rule]", "\"\<e\>\""}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.785685847919258*^9, 3.785685849203331*^9}, {
   3.78571054985317*^9, 3.7857106837847433`*^9}, {3.785710715393817*^9, 
   3.78571075400062*^9}, {3.785710842507353*^9, 3.7857108748598213`*^9}, 
   3.78571250035707*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"f218bdb6-f6dd-492e-be21-8f2e39285d50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LSTM", "-", 
    RowBox[{
     RowBox[{"mps", ".", " ", "Alternative"}], " ", "4.", " ", "Remember", 
     " ", "to", " ", "use", " ", 
     RowBox[{"LogisticSigmoid", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"longShortTermMemoryMpsUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumber_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumber"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<f\>\"", "\[Rule]", 
        RowBox[{"gateMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumber"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<o\>\"", "\[Rule]", 
        RowBox[{"gateMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumber"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<m\>\"", "\[Rule]", 
        RowBox[{"gateMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumber"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<fc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<im\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "->", 
        RowBox[{"TotalLayer", "[", 
         RowBox[{"\"\<Inputs\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "hiddenVecDim", "}"}], ",", 
            RowBox[{"{", "hiddenVecDim", "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<e\>\"", "->", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<oc\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sr\>\"", "\[Rule]", 
        RowBox[{"SequenceRestLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"AppendLayer", "[", "]"}]}]}], "\[IndentingNewLine]", "|>"}], 
     ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<o\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<f\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<m\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<f\>\"", ",", 
          RowBox[{"NetPort", "[", "\"\<Input_c\>\"", "]"}]}], "}"}], 
        "\[Rule]", "\"\<fc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<m\>\""}], "}"}], "\[Rule]", 
        "\"\<im\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<fc\>\"", ",", "\"\<im\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<fc+im\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<CellState\>\"", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fc+im\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<o\>\"", ",", "\"\<e\>\""}], "}"}], "\[Rule]", 
        RowBox[{"\"\<oc\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<c\>\"", ",", "\"\<Element\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"\"\<sr\>\"", "\[Rule]", " ", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<c\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"\"\<Input_s\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"physicalLength", ",", "hiddenVecDim"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.781089858052827*^9, 3.781089858131581*^9}, {
   3.7810899433452473`*^9, 3.7810899467215223`*^9}, 3.7810921135731573`*^9, {
   3.7810927893797393`*^9, 3.7810927952869067`*^9}, {3.7810928767634907`*^9, 
   3.781092897848489*^9}, {3.781092958915044*^9, 3.781093015601199*^9}, {
   3.7810930483436127`*^9, 3.7810931101804895`*^9}, {3.7811058509960785`*^9, 
   3.7811058566105003`*^9}, {3.785679878997965*^9, 3.785679891049281*^9}, {
   3.785680028572735*^9, 3.785680031245928*^9}, {3.785710799132619*^9, 
   3.785710840627866*^9}, 3.785710919411038*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"eb6e7914-304b-4394-a9ec-32b241301515"],

Cell[BoxData[
 RowBox[{
  RowBox[{"longShortTermMemoryMpsLayer", "[", 
   RowBox[{
   "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
    "meraNumber_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"longShortTermMemoryMpsUnitLayer", "[", 
     RowBox[{
     "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
      "meraNumber"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CellState\>\"", "\[Rule]", "\"\<Input_c\>\""}], ",", 
      RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.785679998612372*^9, 3.7856800253327713`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fac71f14-9153-4595-9ae2-38d2c434fd04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn2", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"longShortTermMemoryMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          RowBox[{"meraNumbers", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"ThreadingLayer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "+", 
             RowBox[{"0", "#2"}]}], ")"}], "&"}], ",", 
          RowBox[{"\"\<Inputs\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"SequenceLastLayer", "[", 
           RowBox[{"\"\<Input\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "hiddenVecDim"}], "}"}]}], "]"}], 
          ","}], "*)"}], 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"6", "\[Rule]", 
           RowBox[{"NetPort", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<CellState\>\""}], "]"}], "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"NetPort", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}]}], ",", 
        RowBox[{"2", "\[Rule]", "3"}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78568478167563*^9, 3.785684810443461*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e4c9d670-c160-40b0-a0c1-3ff7c4508416"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark2", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn2", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804273514076476`*^9, 3.780427353193074*^9}, 
   3.7804893947341003`*^9, {3.7804906995311623`*^9, 3.780490706496707*^9}, {
   3.7804908175382195`*^9, 3.7804908265558786`*^9}, {3.780491509104908*^9, 
   3.780491524256935*^9}, 3.780491609174535*^9, {3.7804917899805727`*^9, 
   3.7804917903658724`*^9}, {3.7804929396786747`*^9, 
   3.7804929407514954`*^9}, {3.780493364525167*^9, 3.7804933686663666`*^9}, {
   3.7804938990301743`*^9, 3.7804938991429605`*^9}, {3.7805076141797066`*^9, 
   3.780507615907699*^9}, {3.7805309552368727`*^9, 3.7805309555091743`*^9}, {
   3.78053290657052*^9, 3.780532906668181*^9}, {3.7805334502429237`*^9, 
   3.7805334504233403`*^9}, {3.780533573266997*^9, 3.7805335735082955`*^9}, {
   3.7805340507664404`*^9, 3.780534069520461*^9}, {3.78102919112496*^9, 
   3.7810292162730722`*^9}, {3.78102985289284*^9, 3.7810298773524027`*^9}, {
   3.7825670446417923`*^9, 3.782567051382013*^9}, {3.7825855054560995`*^9, 
   3.782585507492077*^9}, {3.784946590974534*^9, 3.784946591149658*^9}, 
   3.7856858606912003`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"cdc88bbb-16db-4bc9-b64f-b47bb743a152"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn2", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark2", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.781029210787526*^9, 3.781029215038282*^9}, {
  3.782585510775526*^9, 3.7825855130588565`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ee35f454-5a88-4b14-a1e2-65b80502750d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<Higher-order\>\"", " ", 
    RowBox[{"(", "HO", ")"}], " ", 
    RowBox[{"RNN", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.785685887261505*^9, {3.785712086510612*^9, 3.785712088724503*^9}, {
   3.8427091685517907`*^9, 
   3.8427091707168283`*^9}},ExpressionUUID->"a133c3dc-27c2-48ce-92cb-\
1114553c87c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"recurrentUnitLayer", "[", 
   RowBox[{"physicalLength_", ",", "hiddenVecDim_"}], "]"}], ":=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<i\>\"", "\[Rule]", 
       RowBox[{"gateLayer", "[", "hiddenVecDim", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<sr\>\"", "\[Rule]", 
       RowBox[{"SequenceRestLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<c\>\"", "\[Rule]", 
       RowBox[{"AppendLayer", "[", "]"}]}]}], "\[IndentingNewLine]", "|>"}], 
    ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<i\>\"", "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<c\>\"", ",", "\"\<Element\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
       RowBox[{"\"\<sr\>\"", "\[Rule]", " ", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<c\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<c\>\"", "\[Rule]", 
       RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"\"\<Input_s\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"physicalLength", ",", "hiddenVecDim"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.781089858052827*^9, 3.781089858131581*^9}, {
   3.7810899433452473`*^9, 3.7810899467215223`*^9}, 3.7810921135731573`*^9, {
   3.7810927893797393`*^9, 3.7810927952869067`*^9}, {3.7810928767634907`*^9, 
   3.781092897848489*^9}, {3.781092958915044*^9, 3.781093015601199*^9}, {
   3.7810930483436127`*^9, 3.7810931101804895`*^9}, {3.7811058509960785`*^9, 
   3.7811058566105003`*^9}, {3.785679878997965*^9, 3.785679891049281*^9}, {
   3.785680028572735*^9, 3.785680031245928*^9}, {3.785710799132619*^9, 
   3.785710840627866*^9}, 3.785710919411038*^9, {3.7857110921910133`*^9, 
   3.78571116791151*^9}, 3.785711372023439*^9, {3.785712112488886*^9, 
   3.785712113630731*^9}, {3.785712158331361*^9, 3.7857121625913553`*^9}, 
   3.78571237587983*^9, 
   3.842709066189644*^9},ExpressionUUID->"58bc4d61-0948-4c82-946a-\
b0c4272b0af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"recurrentLayer", "[", 
   RowBox[{"physicalLength_", ",", "hiddenVecDim_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"recurrentUnitLayer", "[", 
     RowBox[{"physicalLength", ",", "hiddenVecDim"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.785679998612372*^9, 3.7856800253327713`*^9}, {
   3.7857113668558903`*^9, 3.785711370927264*^9}, 3.7857114968634872`*^9, {
   3.785712170959352*^9, 3.785712177358842*^9}, 3.7857122115596313`*^9, 
   3.785712383375559*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"e61a5b45-8696-4070-adcb-583fc7e10958"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn00", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"recurrentLayer", "[", 
         RowBox[{"physicalLength", ",", "hiddenVecDim"}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"3", "\[Rule]", "2"}]}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78568478167563*^9, 3.785684810443461*^9}, {
  3.785711388776256*^9, 3.78571140159867*^9}, {3.785711489295589*^9, 
  3.7857115182399*^9}, {3.78571154917836*^9, 3.785711591462928*^9}, {
  3.7857122165989437`*^9, 3.785712221774335*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"5e799699-8058-4c32-a3f4-e11e42a35a06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark00", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn00", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804273514076476`*^9, 3.780427353193074*^9}, 
   3.7804893947341003`*^9, {3.7804906995311623`*^9, 3.780490706496707*^9}, {
   3.7804908175382195`*^9, 3.7804908265558786`*^9}, {3.780491509104908*^9, 
   3.780491524256935*^9}, 3.780491609174535*^9, {3.7804917899805727`*^9, 
   3.7804917903658724`*^9}, {3.7804929396786747`*^9, 
   3.7804929407514954`*^9}, {3.780493364525167*^9, 3.7804933686663666`*^9}, {
   3.7804938990301743`*^9, 3.7804938991429605`*^9}, {3.7805076141797066`*^9, 
   3.780507615907699*^9}, {3.7805309552368727`*^9, 3.7805309555091743`*^9}, {
   3.78053290657052*^9, 3.780532906668181*^9}, {3.7805334502429237`*^9, 
   3.7805334504233403`*^9}, {3.780533573266997*^9, 3.7805335735082955`*^9}, {
   3.7805340507664404`*^9, 3.780534069520461*^9}, {3.78102919112496*^9, 
   3.7810292162730722`*^9}, {3.78102985289284*^9, 3.7810298773524027`*^9}, {
   3.7825670446417923`*^9, 3.782567051382013*^9}, {3.7825855054560995`*^9, 
   3.782585507492077*^9}, {3.784946590974534*^9, 3.784946591149658*^9}, 
   3.7856858606912003`*^9, {3.7857114105059843`*^9, 3.785711411599359*^9}, {
   3.7857122554107447`*^9, 3.785712256503839*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ae503da2-2581-4a3e-bcbf-4e2e3cc70e29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn00", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark00", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.781029210787526*^9, 3.781029215038282*^9}, {
  3.782585510775526*^9, 3.7825855130588565`*^9}, {3.78571141440003*^9, 
  3.785711415632979*^9}, {3.7857122596967173`*^9, 3.785712261230358*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"53457887-8fa8-4946-a161-68d61f5776b4"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.785712107062131*^9},ExpressionUUID->"1d381863-61fe-4f35-a9c9-\
d8333cbf8c46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\"\<Higher-order MPS\>\"", " ", 
    RowBox[{"(", "HOT", ")"}], " ", 
    RowBox[{"RNN", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"recurrentMpsUnitLayer", "[", 
    RowBox[{
    "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
     "meraNumber_"}], "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"gateMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          "meraNumber"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sr\>\"", "\[Rule]", 
        RowBox[{"SequenceRestLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"AppendLayer", "[", "]"}]}]}], "\[IndentingNewLine]", "|>"}], 
     ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<i\>\"", ",", "\"\<State\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<i\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<c\>\"", ",", "\"\<Element\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input_s\>\"", "]"}], "\[Rule]", 
        RowBox[{"\"\<sr\>\"", "\[Rule]", " ", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<c\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<State\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"\"\<Input_s\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"physicalLength", ",", "hiddenVecDim"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.781089858052827*^9, 3.781089858131581*^9}, {
   3.7810899433452473`*^9, 3.7810899467215223`*^9}, 3.7810921135731573`*^9, {
   3.7810927893797393`*^9, 3.7810927952869067`*^9}, {3.7810928767634907`*^9, 
   3.781092897848489*^9}, {3.781092958915044*^9, 3.781093015601199*^9}, {
   3.7810930483436127`*^9, 3.7810931101804895`*^9}, {3.7811058509960785`*^9, 
   3.7811058566105003`*^9}, {3.785679878997965*^9, 3.785679891049281*^9}, {
   3.785680028572735*^9, 3.785680031245928*^9}, {3.785710799132619*^9, 
   3.785710840627866*^9}, 3.785710919411038*^9, {3.7857110921910133`*^9, 
   3.78571116791151*^9}, 3.785711372023439*^9, {3.842709176961664*^9, 
   3.842709182852231*^9}},ExpressionUUID->"0ddf99de-e57a-4e59-8b95-\
ac172eff5305"],

Cell[BoxData[
 RowBox[{
  RowBox[{"recurrentMpsLayer", "[", 
   RowBox[{
   "physicalLength_", ",", "hiddenVecDim_", ",", "physicalDOF_", ",", 
    "meraNumber_"}], "]"}], ":=", 
  RowBox[{"NetFoldOperator", "[", 
   RowBox[{
    RowBox[{"recurrentMpsUnitLayer", "[", 
     RowBox[{
     "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
      "meraNumber"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<State\>\"", "\[Rule]", "\"\<Input_s\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.785679998612372*^9, 3.7856800253327713`*^9}, {
   3.7857113668558903`*^9, 3.785711370927264*^9}, 3.7857114968634872`*^9, 
   3.7857121897517633`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"4de2b702-4781-4d03-80f2-ae03e8654393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn02", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"recurrentMpsLayer", "[", 
         RowBox[{
         "physicalLength", ",", "hiddenVecDim", ",", "physicalDOF", ",", 
          RowBox[{"meraNumbers", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "inputVecDim", "}"}], "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
        RowBox[{"SequenceLastLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"1", ",", "\"\<State\>\""}], "]"}], "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"3", "\[Rule]", "2"}]}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "inputVecDim"}], "}"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78568478167563*^9, 3.785684810443461*^9}, {
  3.785711388776256*^9, 3.78571140159867*^9}, {3.785711489295589*^9, 
  3.7857115182399*^9}, {3.78571154917836*^9, 3.785711591462928*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5f42ad4f-ceef-4c6d-af2f-1d48d0dcce38"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netTrainResultsObjectBenchmark02", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"rnn02", ",", 
     RowBox[{"RandomSample", "@", "trainingData"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"Scaled", "[", "validationSet", "]"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"TargetDevice", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<GPU\>\"", ",", "All"}], "}"}]}], ","}], "*)"}], 
     RowBox[{"BatchSize", "\[Rule]", "batchSize"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "learningRate"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<GradientClipping\>\"", "\[Rule]", "0.1"}]}], "*)"}], 
       "}"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "maxTrainingRounds"}], ",", 
     RowBox[{"TimeGoal", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"24", "*", "60"}], ",", "\"\<Minutes\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7804273514076476`*^9, 3.780427353193074*^9}, 
   3.7804893947341003`*^9, {3.7804906995311623`*^9, 3.780490706496707*^9}, {
   3.7804908175382195`*^9, 3.7804908265558786`*^9}, {3.780491509104908*^9, 
   3.780491524256935*^9}, 3.780491609174535*^9, {3.7804917899805727`*^9, 
   3.7804917903658724`*^9}, {3.7804929396786747`*^9, 
   3.7804929407514954`*^9}, {3.780493364525167*^9, 3.7804933686663666`*^9}, {
   3.7804938990301743`*^9, 3.7804938991429605`*^9}, {3.7805076141797066`*^9, 
   3.780507615907699*^9}, {3.7805309552368727`*^9, 3.7805309555091743`*^9}, {
   3.78053290657052*^9, 3.780532906668181*^9}, {3.7805334502429237`*^9, 
   3.7805334504233403`*^9}, {3.780533573266997*^9, 3.7805335735082955`*^9}, {
   3.7805340507664404`*^9, 3.780534069520461*^9}, {3.78102919112496*^9, 
   3.7810292162730722`*^9}, {3.78102985289284*^9, 3.7810298773524027`*^9}, {
   3.7825670446417923`*^9, 3.782567051382013*^9}, {3.7825855054560995`*^9, 
   3.782585507492077*^9}, {3.784946590974534*^9, 3.784946591149658*^9}, 
   3.7856858606912003`*^9, {3.7857114105059843`*^9, 3.785711411599359*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"792aecc5-e2d1-4ef3-9305-d66ba4496ae3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnn02", "=", 
   RowBox[{
   "netTrainResultsObjectBenchmark02", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.781029210787526*^9, 3.781029215038282*^9}, {
  3.782585510775526*^9, 3.7825855130588565`*^9}, {3.78571141440003*^9, 
  3.785711415632979*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"aa76567f-0b59-4f67-871b-555973f9d1ec"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.785680059581788*^9},ExpressionUUID->"cd9074bc-80f3-4e73-bd82-\
34c124f72be8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rnn0Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn0", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rnn2Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn2", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rnn00Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn00", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rnn02Err", "=", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rnn02", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}], "&"}], ",", 
        RowBox[{"testDataSamples", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"testDataSamples", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "2"], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.785712663558505*^9, 3.785712668351317*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"98b2219d-587b-4c9d-b9e6-b75133796e1e"],

Cell[BoxData["0.0008743177058895794`"], "Output",
 CellChangeTimes->{3.78571314140886*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"21e3ae77-7161-4639-837a-3d632a1c62c5"],

Cell[BoxData["0.00019192470348410251`"], "Output",
 CellChangeTimes->{3.785713153536178*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"9f01d5d1-d0a9-473a-9739-fd44c36f953b"],

Cell[BoxData["0.01417832054840891`"], "Output",
 CellChangeTimes->{3.785713154533121*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"ae3599fa-6e36-4ca3-b0a3-edafbed664fa"],

Cell[BoxData["0.014500295591317255`"], "Output",
 CellChangeTimes->{3.785713158287024*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"7e3fabe2-56e4-4380-b3fa-2683c2cf9dfb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.785721592622963*^9, 
  3.7857215929904985`*^9}},ExpressionUUID->"c5e19c32-d79d-4f33-bf91-\
b624046a76e4"]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 804, 18, 48, "Input",ExpressionUUID->"7558c5ee-3a6b-48ac-8eab-b22a0e052611"],
Cell[1365, 40, 155, 2, 28, "Input",ExpressionUUID->"4d10464d-87a3-456e-bb88-5954e3e2fe83"],
Cell[1523, 44, 4594, 88, 86, "Input",ExpressionUUID->"50b2186c-25c0-4848-a6f6-f25cdd5e5f43"],
Cell[6120, 134, 70084, 1525, 4419, "Input",ExpressionUUID->"33561697-5d26-417d-ad0f-1c57d28a6588"],
Cell[76207, 1661, 9679, 253, 542, "Input",ExpressionUUID->"31f6e3ae-c379-4221-8287-dc707478f70f"],
Cell[85889, 1916, 3403, 87, 145, "Input",ExpressionUUID->"9d88d478-5064-4bcf-9d37-491b1f739b62"],
Cell[89295, 2005, 566, 8, 333, "Input",ExpressionUUID->"70f1f1bc-35ac-4529-9fca-ef29ab892c1b"],
Cell[89864, 2015, 293, 7, 28, "Input",ExpressionUUID->"f62197ae-39a8-4a8a-947c-50fdde13c032"],
Cell[90160, 2024, 367, 9, 28, "Input",ExpressionUUID->"6dee225a-7fd1-4036-a60d-a4cc864561a4"],
Cell[90530, 2035, 149, 3, 48, "Input",ExpressionUUID->"8980874d-7c3e-461f-86e0-8a48c19409ca"],
Cell[90682, 2040, 1754, 44, 219, "Input",ExpressionUUID->"74b8a991-e384-4c1e-9d06-2a2c9c1b88f5"],
Cell[92439, 2086, 2066, 64, 105, "Input",ExpressionUUID->"691e11ba-51ae-4d54-81ae-6bb8dbec79e5"],
Cell[94508, 2152, 171, 3, 48, "Input",ExpressionUUID->"f349d201-10f8-4d2d-8520-268d7f0b6c53"],
Cell[94682, 2157, 1749, 44, 219, "Input",ExpressionUUID->"85b4be15-a654-4446-948c-46d75b060c8e"],
Cell[96434, 2203, 2328, 73, 105, "Input",ExpressionUUID->"64bc708b-d5d4-4e2a-b392-76b9730eb4f4"],
Cell[98765, 2278, 171, 3, 48, "Input",ExpressionUUID->"779878a2-cde8-4d9e-824d-b5e8089e1e0f"],
Cell[98939, 2283, 1895, 45, 219, "Input",ExpressionUUID->"82741292-c729-4b07-9aab-6d91c13669ce"],
Cell[100837, 2330, 3169, 91, 115, "Input",ExpressionUUID->"e6341385-0c8e-40c4-ba2a-15998fa77f3d"],
Cell[104009, 2423, 175, 3, 48, "Input",ExpressionUUID->"9a7f2231-d5f6-432a-aa84-b9c8f1dd0d55"],
Cell[104187, 2428, 2271, 49, 219, "Input",ExpressionUUID->"0b7497cd-3299-4bcb-8f64-48ad3ee14866"],
Cell[106461, 2479, 4055, 99, 124, "Input",ExpressionUUID->"849a06a4-1810-45bd-8dcc-e2fe2b991fb0"],
Cell[110519, 2580, 175, 3, 48, "Input",ExpressionUUID->"3180ee54-e53b-4bdd-b569-d56542b08ffe"],
Cell[110697, 2585, 1974, 45, 219, "Input",ExpressionUUID->"2e0ff812-03f4-4685-83b0-ae87f0608ebd"],
Cell[112674, 2632, 2879, 84, 105, "Input",ExpressionUUID->"489d4cf9-aa29-46f3-92ac-a9e30d8da070"],
Cell[115556, 2718, 175, 3, 48, "Input",ExpressionUUID->"05f82019-e93c-4533-a020-072d0b754183"],
Cell[115734, 2723, 1923, 47, 219, "Input",ExpressionUUID->"6b31232c-c989-4103-9243-37d33bb1f353"],
Cell[117660, 2772, 3342, 97, 105, "Input",ExpressionUUID->"06786105-1916-4646-b8c5-657239497061"],
Cell[121005, 2871, 175, 3, 48, "Input",ExpressionUUID->"86abb15d-a175-472a-9cff-29d855cd0c96"],
Cell[121183, 2876, 2007, 46, 219, "Input",ExpressionUUID->"6c849cf3-a4a1-4063-adbc-d0981382d27d"],
Cell[123193, 2924, 4475, 126, 105, "Input",ExpressionUUID->"23f370c2-9b5b-4ed7-9e2a-545e15e5f314"],
Cell[127671, 3052, 171, 3, 48, "Input",ExpressionUUID->"a0fe9ce1-9343-4229-be27-46ccf86b1515"],
Cell[127845, 3057, 1773, 43, 219, "Input",ExpressionUUID->"d937b711-fd0e-4b2c-bad8-c59375b28fde"],
Cell[129621, 3102, 3427, 101, 105, "Input",ExpressionUUID->"7791ab4d-6e66-4c9a-963a-49615538d00a"],
Cell[133051, 3205, 147, 3, 48, "Input",ExpressionUUID->"92b39624-2a8f-4e97-9824-0264a4baef31"],
Cell[133201, 3210, 1722, 43, 219, "Input",ExpressionUUID->"38d1f000-9f04-464b-8ce3-c97691011ca1"],
Cell[134926, 3255, 2388, 77, 105, "Input",ExpressionUUID->"84cba564-1ba4-456c-b36f-6727944043ea"],
Cell[137317, 3334, 147, 3, 48, "Input",ExpressionUUID->"7459cf29-3fc5-4610-b7e9-1660b793d8ff"],
Cell[137467, 3339, 2165, 51, 219, "Input",ExpressionUUID->"3e66c1ea-1363-4c66-a06f-5a0c18629642"],
Cell[139635, 3392, 3379, 99, 105, "Input",ExpressionUUID->"22ff2a05-bd42-428b-b790-a9bfb9dacadc"],
Cell[143017, 3493, 149, 3, 48, "Input",ExpressionUUID->"6b9818b9-e8c3-40e4-8a9a-ffa0a692b5ed"],
Cell[143169, 3498, 2083, 49, 219, "Input",ExpressionUUID->"56c598f1-e676-4d6c-8a90-5c2c0e9e78de"],
Cell[145255, 3549, 4949, 126, 162, "Input",ExpressionUUID->"91c38474-18fc-4cf7-b56d-1adeaa4ed493"],
Cell[150207, 3677, 149, 3, 48, "Input",ExpressionUUID->"74041731-6e7e-4d57-942a-285f0970b43a"],
Cell[150359, 3682, 2279, 50, 219, "Input",ExpressionUUID->"df791fcc-e477-4e8a-98ed-7de09cc4e12b"],
Cell[152641, 3734, 4824, 120, 143, "Input",ExpressionUUID->"9ed79260-c633-4ad9-af65-1add598315e4"],
Cell[157468, 3856, 149, 3, 48, "Input",ExpressionUUID->"06efa35a-f433-4caf-b0b5-10d8cc500a6a"],
Cell[157620, 3861, 2207, 49, 219, "Input",ExpressionUUID->"9e9bdc7c-04f1-40c0-90c2-1c8e7dec3190"],
Cell[159830, 3912, 4774, 119, 143, "Input",ExpressionUUID->"b4ea0bb9-67a5-49fb-81cb-a9fc223ebdce"],
Cell[164607, 4033, 147, 3, 48, "Input",ExpressionUUID->"adf44103-c48f-446b-ae25-6043491e39d7"],
Cell[164757, 4038, 2257, 50, 219, "Input",ExpressionUUID->"337eb97a-8eff-4ec8-9a6c-0dae3182daee"],
Cell[167017, 4090, 4881, 122, 143, "Input",ExpressionUUID->"7edad0b2-ace4-4afc-9126-6a9e6ee0e661"],
Cell[171901, 4214, 147, 3, 48, "Input",ExpressionUUID->"b0071d68-1a5d-4d7e-9bd5-0e3950a72893"],
Cell[172051, 4219, 2279, 50, 219, "Input",ExpressionUUID->"7c14484d-d7ef-47ed-b806-284e16f26054"],
Cell[174333, 4271, 4932, 123, 143, "Input",ExpressionUUID->"64b5aca0-d8be-48bf-8a2a-2b682c7ad63f"],
Cell[179268, 4396, 147, 3, 48, "Input",ExpressionUUID->"8287b292-bda0-4483-8fd0-dc98cdc52801"],
Cell[179418, 4401, 2310, 51, 219, "Input",ExpressionUUID->"0bd91d0a-3059-4680-9c68-2f3884bc7f28"],
Cell[181731, 4454, 4980, 123, 143, "Input",ExpressionUUID->"7250cb50-0282-4267-8bf3-91c1da59ee6b"],
Cell[186714, 4579, 147, 3, 48, "Input",ExpressionUUID->"32871f23-6628-4e63-a021-2c9bcc80c77e"],
Cell[186864, 4584, 2341, 52, 219, "Input",ExpressionUUID->"a3ae4694-1df5-48f1-8d23-d3d2ccbb2806"],
Cell[189208, 4638, 5032, 124, 143, "Input",ExpressionUUID->"b2d97cd2-bf33-486a-87d6-7e73fdadb053"],
Cell[194243, 4764, 147, 3, 48, "Input",ExpressionUUID->"ee5098fa-283e-40cc-a665-123e51ff162d"],
Cell[194393, 4769, 3411, 66, 219, "Input",ExpressionUUID->"a6c235bf-2bc8-40f1-928e-33feee874ed9"],
Cell[197807, 4837, 5118, 122, 143, "Input",ExpressionUUID->"36ab9088-c2b1-496b-aa00-cad109401781"],
Cell[202928, 4961, 147, 3, 48, "Input",ExpressionUUID->"b03e36a3-33fc-4474-9370-f8c056ad9d06"],
Cell[203078, 4966, 3571, 69, 219, "Input",ExpressionUUID->"19775d26-e2ce-4168-9818-75ad5b9a5518"],
Cell[206652, 5037, 6090, 139, 162, "Input",ExpressionUUID->"fa835990-2bc5-4d1e-82f5-cb7a4ce1bf9c"],
Cell[212745, 5178, 452, 8, 219, "Input",ExpressionUUID->"da5f03b0-76e4-476f-b824-25a462177558"],
Cell[213200, 5188, 471, 8, 276, "Input",ExpressionUUID->"e0536451-f248-4db3-b05f-3417d4fb53a7"],
Cell[213674, 5198, 201, 5, 28, "Input",ExpressionUUID->"41fa3b56-48b3-4fb8-aa85-191a4e21d0b3"],
Cell[213878, 5205, 149, 3, 48, "Input",ExpressionUUID->"0a4c86d5-daab-4c7d-a34f-ca3358c0b705"],
Cell[214030, 5210, 6295, 136, 542, "Input",ExpressionUUID->"7c883487-b05d-4a20-81ab-d3bfbc3bc6de"],
Cell[220328, 5348, 1659, 37, 143, "Input",ExpressionUUID->"229d3000-5466-48b8-9f01-95c8b5650aee"],
Cell[221990, 5387, 2337, 52, 86, "Input",ExpressionUUID->"ac85766b-567c-4ee0-9a73-83450929e131"],
Cell[224330, 5441, 2237, 45, 67, "Input",ExpressionUUID->"d618a29d-f367-4aeb-8c54-08f8650d9ea7"],
Cell[226570, 5488, 432, 9, 28, "Input",ExpressionUUID->"e3c8c63e-5418-452c-80b0-9420566d6381"],
Cell[227005, 5499, 149, 3, 48, "Input",ExpressionUUID->"85acf217-3119-4704-8029-b7daf445b3da"],
Cell[227157, 5504, 7524, 166, 561, "Input",ExpressionUUID->"b403aaac-2735-493a-924a-afeb1ebdb039"],
Cell[234684, 5672, 643, 15, 48, "Input",ExpressionUUID->"786b1d72-5028-4562-a6a0-d5ad1eb4ad61"],
Cell[235330, 5689, 1138, 28, 86, "Input",ExpressionUUID->"a61fc4ea-001d-4893-8f34-6ecca0b49501"],
Cell[236471, 5719, 2430, 54, 86, "Input",ExpressionUUID->"58ea2188-a561-4cef-be49-3d3f4a49c0d3"],
Cell[238904, 5775, 2291, 45, 86, "Input",ExpressionUUID->"031cd424-bacf-481b-a742-60dc55e91880"],
Cell[241198, 5822, 298, 7, 28, "Input",ExpressionUUID->"1bda71bb-ce18-421b-b453-5d44ddce28af"],
Cell[241499, 5831, 149, 3, 48, "Input",ExpressionUUID->"0761c53f-4756-40a9-a125-861c5fe8f59f"],
Cell[241651, 5836, 7954, 174, 561, "Input",ExpressionUUID->"847b19d7-852f-4707-af7f-73899783e43c"],
Cell[249608, 6012, 864, 21, 48, "Input",ExpressionUUID->"6be2fa21-180b-41f6-8aaa-9ce8f7b977ee"],
Cell[250475, 6035, 1719, 37, 86, "Input",ExpressionUUID->"bb498999-008c-4fb4-8b6b-b1c247985df1"],
Cell[252197, 6074, 2673, 59, 86, "Input",ExpressionUUID->"83be4fb8-be34-4c28-9926-74cd0dca81b2"],
Cell[254873, 6135, 2343, 46, 86, "Input",ExpressionUUID->"000cfd88-8498-4970-989f-690ec7308608"],
Cell[257219, 6183, 353, 9, 28, "Input",ExpressionUUID->"f335811b-6dd5-4c63-ae70-4a5600550bb9"],
Cell[257575, 6194, 147, 3, 48, "Input",ExpressionUUID->"46a1a357-22d8-4689-ab37-969b735a4570"],
Cell[257725, 6199, 7453, 165, 561, "Input",ExpressionUUID->"7cef44f4-fb7f-4a54-bc25-b167e3bc0762"],
Cell[265181, 6366, 692, 17, 48, "Input",ExpressionUUID->"9f4173c5-1cc9-44ef-8c17-9e001e359134"],
Cell[265876, 6385, 2446, 55, 86, "Input",ExpressionUUID->"5b4994a8-9f76-4a30-9480-fc7c080bcd64"],
Cell[268325, 6442, 7724, 126, 105, "Input",ExpressionUUID->"dfda4340-ca95-43c3-9086-46c0562dcaa0"],
Cell[276052, 6570, 349, 8, 28, "Input",ExpressionUUID->"a8f1ede6-76fd-4367-b0ca-247b369410af"],
Cell[276404, 6580, 330, 7, 28, "Input",ExpressionUUID->"286ee3cd-a8cb-4921-a4b0-41af82142d63"],
Cell[276737, 6589, 475, 8, 238, "Input",ExpressionUUID->"7890ef9b-a4e0-4975-b50a-48b124a5935f"],
Cell[277215, 6599, 243, 6, 28, "Input",ExpressionUUID->"b6a2d9ee-129a-40c3-80d3-db6fd387d554"],
Cell[277461, 6607, 147, 3, 48, "Input",ExpressionUUID->"e6316f62-74dc-4a0d-8ad3-0d7ff1409b3a"],
Cell[CellGroupData[{
Cell[277633, 6614, 4391, 90, 162, "Input",ExpressionUUID->"744c8641-dce6-4360-b049-ad854c21df4a"],
Cell[282027, 6706, 24914, 495, 368, "Output",ExpressionUUID->"85cc0513-9a70-4a6a-be34-1854bb50b98a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306978, 7206, 4592, 98, 98, "Input",ExpressionUUID->"00eb7707-af28-4c03-9817-9e827839b0eb"],
Cell[311573, 7306, 11123, 152, 32, "Output",ExpressionUUID->"e0346299-a75a-4bca-95e1-81c88858eedf"],
Cell[322699, 7460, 11125, 152, 32, "Output",ExpressionUUID->"6be6b620-ece5-42ca-8a7a-3f8564ef459d"],
Cell[333827, 7614, 11126, 152, 32, "Output",ExpressionUUID->"46790318-0eec-4545-8b38-b8e355047eb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344990, 7771, 797, 11, 48, "Input",ExpressionUUID->"5dc4d15d-e332-4108-b180-501261738d98"],
Cell[345790, 7784, 24193, 474, 431, "Output",ExpressionUUID->"fcecb093-bfab-4a5f-be8f-45063a99ed20"],
Cell[369986, 8260, 23913, 474, 431, "Output",ExpressionUUID->"941414f3-caaa-4c8f-9b15-75b2afa2227e"]
}, Open  ]],
Cell[393914, 8737, 5570, 79, 28, "Input",ExpressionUUID->"e422a2f9-3b0f-4fdd-9e26-153f0782815c"],
Cell[399487, 8818, 3662, 53, 28, "Input",ExpressionUUID->"e1908a6e-3dce-480e-923c-2ad8fabbe0cf"],
Cell[CellGroupData[{
Cell[403174, 8875, 217, 2, 48, "Input",ExpressionUUID->"e8a6f8db-ba99-4b14-ab61-8580e3f4de51"],
Cell[403394, 8879, 1450, 19, 32, "Output",ExpressionUUID->"3aedba93-6909-4ed2-8f7c-140a22fb504f"],
Cell[404847, 8900, 1449, 19, 32, "Output",ExpressionUUID->"34513657-5b69-4a01-96f9-619f5e2e3e0d"]
}, Open  ]],
Cell[406311, 8922, 149, 3, 48, "Input",ExpressionUUID->"bf23b329-a813-4df9-8321-5834dccb0475"],
Cell[406463, 8927, 243, 6, 28, "Input",ExpressionUUID->"83e75a6b-e16e-413a-aa1d-7cb10d4ae1fa"],
Cell[406709, 8935, 2057, 52, 181, "Input",ExpressionUUID->"3e22feeb-f35e-413a-8bf5-172b83afc991"],
Cell[408769, 8989, 1252, 30, 162, "Input",ExpressionUUID->"530d413a-f76b-469d-bb87-00d963585610"],
Cell[CellGroupData[{
Cell[410046, 9023, 880, 24, 32, "Input",ExpressionUUID->"21d14c9f-fa7a-4435-ac0b-361cf317f7da"],
Cell[410929, 9049, 320, 5, 32, "Output",ExpressionUUID->"f92b8aa7-1a97-4f39-a6f3-7d61ee05779b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411286, 9059, 761, 21, 32, "Input",ExpressionUUID->"55c564bc-3d15-4af2-b221-fe5984b5ace6"],
Cell[412050, 9082, 269, 4, 32, "Output",ExpressionUUID->"443895aa-0485-4a90-826b-92d4c7416ce2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412356, 9091, 812, 22, 32, "Input",ExpressionUUID->"1314932d-1d23-42fb-8aeb-80c1558f5755"],
Cell[413171, 9115, 410, 6, 32, "Output",ExpressionUUID->"0a7a6462-100c-4a97-a532-dbddd6cf5582"]
}, Open  ]],
Cell[413596, 9124, 566, 9, 352, "Input",ExpressionUUID->"4d4f94c2-5118-4c25-8cc7-2c30eadc4e06"],
Cell[414165, 9135, 371, 9, 28, "Input",ExpressionUUID->"5dda147b-d943-466d-a9c7-839c14ad12e4"],
Cell[414539, 9146, 131, 1, 28, "Input",ExpressionUUID->"ac1a0443-8eaa-45e4-851d-df4843b6bf36"],
Cell[414673, 9149, 2780, 40, 28, "Input",ExpressionUUID->"b2fd7ed1-fca4-43b5-b325-9f34af81c8b9"],
Cell[417456, 9191, 7504, 167, 561, "Input",ExpressionUUID->"b3b7cbb2-b3de-4b4e-8cdf-a17b75ef1042"],
Cell[424963, 9360, 7597, 169, 580, "Input",ExpressionUUID->"e9840756-f9ef-4833-bd88-e2c5b8181150"],
Cell[432563, 9531, 7632, 169, 561, "Input",ExpressionUUID->"77ff9ec7-f728-41ef-8c7f-fa7d1ec08d97"],
Cell[440198, 9702, 812, 13, 542, "Input",ExpressionUUID->"6816a38a-a4ec-44ee-b637-d93a94e30e6e"],
Cell[441013, 9717, 238, 6, 28, "Input",ExpressionUUID->"1d7f9528-8076-4d54-88f5-ae15ace90bac"],
Cell[CellGroupData[{
Cell[441276, 9727, 2851, 68, 105, "Input",ExpressionUUID->"e67797ef-6763-401d-9083-0fc5735f22c0"],
Cell[444130, 9797, 1080, 21, 52, "Output",ExpressionUUID->"87c8c7e8-3ada-4bc6-9048-2c4bbdde25e1"],
Cell[445213, 9820, 788, 16, 32, "Output",ExpressionUUID->"aed8cede-a746-4bf0-bc7e-2decfaceb7b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446038, 9841, 829, 22, 48, "Input",ExpressionUUID->"8938a20a-a494-407b-ab43-7f5068c6a519"],
Cell[446870, 9865, 313, 4, 32, "Output",ExpressionUUID->"c2f4a10a-f573-4d13-8ae0-bc0fdeb3af5f"]
}, Open  ]],
Cell[447198, 9872, 147, 3, 48, "Input",ExpressionUUID->"1aa39de4-24b7-4895-8565-98a2d8533725"],
Cell[447348, 9877, 1337, 28, 67, "Input",ExpressionUUID->"6a1e3c85-86af-4b16-9aa1-ec22ecdad395"],
Cell[CellGroupData[{
Cell[448710, 9909, 565, 16, 28, "Input",ExpressionUUID->"75289da4-6694-4c1c-9174-5df5519e5bd1"],
Cell[449278, 9927, 194, 2, 32, "Output",ExpressionUUID->"1db40e01-cb84-4bcf-b754-773a3710fd4b"]
}, Open  ]],
Cell[449487, 9932, 147, 3, 48, "Input",ExpressionUUID->"eda33c0c-a958-4d81-9d7d-2f80e1c021cb"],
Cell[449637, 9937, 2972, 63, 200, "Input",ExpressionUUID->"c994b76b-d0dc-46b4-a098-b91877e14d59"],
Cell[CellGroupData[{
Cell[452634, 10004, 273, 5, 28, "Input",ExpressionUUID->"9b58898e-e555-4c25-b571-b986b46ae807"],
Cell[452910, 10011, 501027, 9180, 850, "Output",ExpressionUUID->"4c581b06-5f2c-4aaf-abae-50f5e39910e0"]
}, Closed]],
Cell[CellGroupData[{
Cell[953974, 19196, 559, 16, 24, "Input",ExpressionUUID->"39652b51-a198-4ae4-96bf-923a63e4c49a"],
Cell[954536, 19214, 361, 5, 32, "Output",ExpressionUUID->"0a66b3fa-dc69-4810-9a3b-cf9d80d38dd5"]
}, Open  ]],
Cell[954912, 19222, 149, 3, 48, "Input",ExpressionUUID->"62453c14-2c72-49c4-a167-18f4f4ff0d5e"],
Cell[955064, 19227, 424, 9, 28, "Input",ExpressionUUID->"e313ef2f-84e3-4c04-ba06-473e5e088220"],
Cell[955491, 19238, 6001, 136, 580, "Input",ExpressionUUID->"a3c5abfe-f788-40d1-a9cc-406bc70e2dfa"],
Cell[961495, 19376, 648, 14, 48, "Input",ExpressionUUID->"16566ca9-7d21-47ca-b768-92c2a70a2ad4"],
Cell[962146, 19392, 2922, 64, 105, "Input",ExpressionUUID->"c7c1323a-875a-4b9f-9fa4-333ff5f0eeb7"],
Cell[965071, 19458, 7849, 128, 105, "Input",ExpressionUUID->"68efecd5-be03-4384-97e6-0b237a083865"],
Cell[972923, 19588, 400, 9, 28, "Input",ExpressionUUID->"a66c2a3d-6232-4280-b4c2-92a3e941f3b0"],
Cell[973326, 19599, 147, 3, 48, "Input",ExpressionUUID->"8fada771-7afb-466a-b6b2-511c66b9a571"],
Cell[973476, 19604, 431, 9, 28, "Input",ExpressionUUID->"ada00711-e427-49eb-b444-425578e83d4a"],
Cell[973910, 19615, 3272, 78, 200, "Input",ExpressionUUID->"f218bdb6-f6dd-492e-be21-8f2e39285d50"],
Cell[977185, 19695, 6608, 149, 580, "Input",ExpressionUUID->"eb6e7914-304b-4394-a9ec-32b241301515"],
Cell[983796, 19846, 756, 18, 48, "Input",ExpressionUUID->"fac71f14-9153-4595-9ae2-38d2c434fd04"],
Cell[984555, 19866, 2284, 57, 105, "Input",ExpressionUUID->"e4c9d670-c160-40b0-a0c1-3ff7c4508416"],
Cell[986842, 19925, 2440, 48, 86, "Input",ExpressionUUID->"cdc88bbb-16db-4bc9-b64f-b47bb743a152"],
Cell[989285, 19975, 349, 8, 28, "Input",ExpressionUUID->"ee35f454-5a88-4b14-a1e2-65b80502750d"],
Cell[989637, 19985, 394, 10, 48, "Input",ExpressionUUID->"a133c3dc-27c2-48ce-92cb-1114553c87c8"],
Cell[990034, 19997, 2662, 57, 219, "Input",ExpressionUUID->"58bc4d61-0948-4c82-946a-b0c4272b0af0"],
Cell[992699, 20056, 714, 15, 28, "Input",ExpressionUUID->"e61a5b45-8696-4070-adcb-583fc7e10958"],
Cell[993416, 20073, 1407, 33, 48, "Input",ExpressionUUID->"5e799699-8058-4c32-a3f4-e11e42a35a06"],
Cell[994826, 20108, 2542, 49, 86, "Input",ExpressionUUID->"ae503da2-2581-4a3e-bcbf-4e2e3cc70e29"],
Cell[997371, 20159, 447, 9, 28, "Input",ExpressionUUID->"53457887-8fa8-4946-a161-68d61f5776b4"],
Cell[997821, 20170, 147, 3, 48, "Input",ExpressionUUID->"1d381863-61fe-4f35-a9c9-d8333cbf8c46"],
Cell[997971, 20175, 2931, 64, 238, "Input",ExpressionUUID->"0ddf99de-e57a-4e59-8b95-ac172eff5305"],
Cell[1000905, 20241, 750, 18, 48, "Input",ExpressionUUID->"4de2b702-4781-4d03-80f2-ae03e8654393"],
Cell[1001658, 20261, 1477, 35, 67, "Input",ExpressionUUID->"5f42ad4f-ceef-4c6d-af2f-1d48d0dcce38"],
Cell[1003138, 20298, 2490, 48, 86, "Input",ExpressionUUID->"792aecc5-e2d1-4ef3-9305-d66ba4496ae3"],
Cell[1005631, 20348, 399, 9, 28, "Input",ExpressionUUID->"aa76567f-0b59-4f67-871b-555973f9d1ec"],
Cell[1006033, 20359, 147, 3, 48, "Input",ExpressionUUID->"cd9074bc-80f3-4e73-bd82-34c124f72be8"],
Cell[CellGroupData[{
Cell[1006205, 20366, 2586, 74, 101, "Input",ExpressionUUID->"98b2219d-587b-4c9d-b9e6-b75133796e1e"],
Cell[1008794, 20442, 169, 2, 32, "Output",ExpressionUUID->"21e3ae77-7161-4639-837a-3d632a1c62c5"],
Cell[1008966, 20446, 171, 2, 32, "Output",ExpressionUUID->"9f01d5d1-d0a9-473a-9739-fd44c36f953b"],
Cell[1009140, 20450, 168, 2, 32, "Output",ExpressionUUID->"ae3599fa-6e36-4ca3-b0a3-edafbed664fa"],
Cell[1009311, 20454, 169, 2, 32, "Output",ExpressionUUID->"7e3fabe2-56e4-4380-b3fa-2683c2cf9dfb"]
}, Open  ]],
Cell[1009495, 20459, 234, 5, 86, "Input",ExpressionUUID->"c5e19c32-d79d-4f33-bf91-b624046a76e4"]
}
]
*)

